{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./_common/base/socket_base.js","webpack:///./_common/base/socket_cache.js","webpack:///./Modules/Reports/Helpers/market-underlying.js","webpack:///./Services/logout.js","webpack:///./_common/common_functions.js","webpack:///./_common/string_util.js","webpack:///./Stores/connect.js","webpack:///./Stores/Modules/Trading/Constants/contract.js","webpack:///./Stores/Modules/Portfolio/Helpers/details.js","webpack:///./Constants/ui.js","webpack:///./_common/base/currency_base.js","webpack:///./App/Components/Routes/button-link.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./Services/socket-general.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./Modules/Reports/Components/empty-portfolio-message.jsx","webpack:///./Modules/Contract/Containers/contract-link.jsx","webpack:///./Assets/SvgComponents/portfolio/ic-check.svg","webpack:///./Assets/SvgComponents/portfolio/ic-cross.svg","webpack:///./App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./App/Components/Elements/market-is-closed-overlay.jsx","webpack:///./Modules/Trading/Components/Form/screen-large.jsx","webpack:///./Modules/Trading/Components/Form/form-layout.jsx","webpack:///./Modules/Trading/Containers/trade.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./Modules/PageError/PageError.jsx","webpack:///./Modules/Trading/Helpers/digits.js","webpack:///./App/Components/Elements/localize.jsx","webpack:///./Modules/Reports/Helpers/shortcode.js","webpack:///./App/Constants/app-config.js","webpack:///./App/Components/Elements/tooltip.jsx","webpack:///./App/Components/Form/InputField/increment-buttons.jsx","webpack:///./App/Components/Form/InputField/input.jsx","webpack:///./App/Components/Form/InputField/input-field.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./App/Components/Elements/underlying-icon.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./App/Containers/remaining-time.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./_common/storage.js","webpack:///./Stores/Modules/Contract/Helpers/logic.js","webpack:///./Stores/Modules/Trading/Helpers/barrier.js","webpack:///./Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./Modules/Reports/Containers/wallet-information.jsx","webpack:///./App/Components/Elements/Label/label.jsx","webpack:///./App/Components/Elements/chart-loader.jsx","webpack:///./templates/_common/components/loading.jsx","webpack:///./App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight-wrapper.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-toggle-menu.jsx","webpack:///./App/Components/Form/DropDown/items.jsx","webpack:///./App/Components/Form/DropDown/native-select.jsx","webpack:///./App/Components/Form/DropDown/helpers.js","webpack:///./App/Components/Form/DropDown/dropdown.jsx","webpack:///./Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./App/Components/Form/DatePicker/helpers.js","webpack:///./App/Components/Elements/Calendar/calendar.jsx","webpack:///./App/Components/Form/DatePicker/date-picker.jsx","webpack:///./Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./App/Components/Form/TimePicker/dialog.jsx","webpack:///./App/Components/Form/TimePicker/time-picker.jsx","webpack:///./Stores/Modules/Trading/Helpers/end-time.js","webpack:///./Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./App/Components/Form/number-selector.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./Modules/Trading/Containers/trade-params.jsx","webpack:///./App/Components/Elements/Calendar/panels/types.js","webpack:///./App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./Modules/Trading/Containers/contract-type.jsx","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-button.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack:///./Modules/Trading/Containers/purchase.jsx","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./Utils/Language/language.js","webpack:///./Utils/Language/index.js","webpack:///./App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./App/Components/Elements/ContentLoader/positions-card.jsx","webpack:///./App/Components/Elements/ContentLoader/index.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./_common/base/gtm.js","webpack:///./_common/base/network_monitor_base.js","webpack:///./App/Components/Form/button.jsx","webpack:///./_common/base/client_base.js","webpack:///./App/i18n.js","webpack:///./Constants/index.js","webpack:///./_common/url.js","webpack:///./Constants/routes.js","webpack:///./_common/base/server_time.js","webpack:///./Stores/Modules/Trading/Helpers/active-symbols.js","webpack:///./_common/language.js","webpack:///./App/Containers/Lazy/lazy.jsx","webpack:///./Stores/Modules/Trading/Helpers/duration.js","webpack:///./_common/lib/polyfills/nodelist.foreach.js","webpack:///./_common/lib/polyfills/element.closest.js","webpack:///./_common/lib/plugins.js","webpack:///./_common/base/subscription_manager.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./_common/lib/polyfills/element.matches.js","webpack:///./Utils/Date/date-time.js","webpack:///./Utils/Date/index.js","webpack:///./_common/os_detect.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./templates/app/components/loading.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./App/Components/Elements/modal.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Containers/CashierModal/deposit.jsx","webpack:///./App/Components/Layout/Header/toggle-cashier.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/upgrade-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Services/outdated-browser.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./Stores/Modules/SmartChart/Constants/markers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./Stores/Modules/Portfolio/Helpers/portfolio-notifcations.js","webpack:///./Stores/Modules/Contract/contract-replay-store.js","webpack:///./Stores/Modules/Contract/contract-trade-store.js","webpack:///./Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./Stores/Modules/Portfolio/portfolio-store.js","webpack:///./Stores/Modules/Profit/Helpers/format-request.js","webpack:///./Stores/Modules/Profit/Helpers/format-response.js","webpack:///./Stores/Modules/Profit/profit-store.js","webpack:///./Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./Stores/Modules/Statement/statement-store.js","webpack:///./Stores/Modules/Statement/Helpers/format-response.js","webpack:///./Stores/Modules/Trading/Actions/purchase.js","webpack:///./Stores/Modules/Trading/Actions/symbol.js","webpack:///./Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./Stores/Modules/Trading/Actions/contract-type.js","webpack:///./Stores/Modules/Trading/Actions/duration.js","webpack:///./Stores/Modules/Trading/Actions/start-date.js","webpack:///./Stores/Modules/Trading/Helpers/process.js","webpack:///./Stores/Modules/Trading/Helpers/proposal.js","webpack:///./Stores/Modules/Trading/trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/chart.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/ui-store.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./Utils/Events/storage.js","webpack:///./App/app.jsx","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./App/Components/Elements/Popover/popover-bubble.jsx","webpack:///./App/Components/Elements/Popover/popover.jsx","webpack:///./App/Components/Form/fieldset.jsx","webpack:///./_common/base/login.js","webpack:///./Stores/Modules/Trading/Helpers/start-date.js","webpack:///./config.js","webpack:///./App/Components/Elements/money.jsx","webpack:///./Stores/Modules/Contract/Helpers/digits.js","webpack:///./Assets/icon.jsx","webpack:///./Constants/contract.js","webpack:///./Constants/date-time.js","webpack:///./_common/utility.js","webpack:///./App/Components/Elements/ui-loader.jsx","webpack:///./App/Components/Elements/Calendar/helper.js","webpack:///./Services/index.js","webpack:///./App/Components/Routes/helpers.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","main","exports","module","l","e","promises","digits","modals","notification-messages","reports","screen-small","work-in-progress","Promise","resolve","reject","href","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","404","account-info","contract","info-box","push-notification","settings-chart","settings-language","settings-theme","toggle-menu-drawer","vendors~open_position~7c650be5","default~open_position~1833eefb","open_positions","profit_table","statement","vendors~smart_chart","smart_chart","DenialOfServiceModal","MarketUnavailableModal","ServicesErrorModal","UnsupportedContractModal","two-month-picker","jsonpScriptSrc","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","head","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","binary_socket","config","buffered_sends","req_id","wrong_app_id","is_available","is_disconnect_called","is_connected_before","socket_url","timeouts","no_duplicate_requests","sent_requests","waiting_list","clearTimeouts","isReady","hasReadyState","sendBufferedRequests","wait","send","ClientBase","require","SocketCache","getLanguage","State","cloneObject","getPropertyValue","isEmptyObject","PromiseClass","getAppId","getSocketURL","BinarySocketBase","concat","items","clear","has","msg_type","indexOf","add","remove","promise_obj","response","this_promises","forEach","pr","another_exists","keys","some","req_obj","options","arguments","has_callback","callback","find","forced","set","skip_cache_update","JSON","stringify","time","assign","last_response","subscribe","isOnline","passthrough","wsEvent","init","_typeof","WebSocket","onopen","isLoggedIn","authorize","onOpen","onReconnect","onmessage","msg","parse","test","this_req_id","onMessage","onclose","onDisconnect","_len2","msg_types","Array","_key2","is_resolved","availability","status","_len","states","_key","readyState","sendBuffered","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","data_obj","msg_type_mapping","isEmptyValue","makeKey","moment","LocalStore","getStaticHash","payout_currencies","expire","proposal_open_contract","map_to","active_symbols","contracts_for","exchange_rates","ticks_history","trading_times","history","candles","is_empty_data","isArray","response_data","getObject","static_hash","response_obj","isBefore","expires","source_obj","map_key","subscription","cached_response","echo_req","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","valueOf","setObject","should_match_all","data_key","__webpack_exports__","getMarketInformation","getMarketName","getTradeTypeName","Constants__WEBPACK_IMPORTED_MODULE_0__","shortcode","market_info","category","underlying","extracted","RegExp","exec","toLowerCase","getMarketNamesMap","toUpperCase","getContractConfig","requestLogout","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0__","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0___default","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1__","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1___default","_common_storage__WEBPACK_IMPORTED_MODULE_2__","_ws_methods__WEBPACK_IMPORTED_MODULE_3__","WS","logout","doLogout","removeCookies","Client","clearAllAccounts","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","padLeft","txt","len","char","text","String","join","numberToString","toTitleCase","str","replace","charAt","substr","compareBigUnsignedInt","a","b","first_num","second_num","max_length","Math","max","order","SPECIAL_REACT_KEYS","children","ref","MobxProvider","_Provider","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","Provider","_createClass","stores","baseStores","context","mobxStores","props","store","_objectSpread","childContextTypes","PropTypes","client","common","gtm","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_getPrototypeOf2","_this","args","propTypes","React","wrappedDisplayName","displayName","constructor","getLocalizedBasis","payout","localize","stake","multiplier","getContractTypesConfig","rise_fall","title","trade_types","basis","components","barrier_count","rise_fall_equal","high_low","touch","end","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","_ref","_defineProperty","getCurrentTick","getDurationUnitText","getDurationPeriod","getDurationTime","App_i18n__WEBPACK_IMPORTED_MODULE_0__","_common_utility__WEBPACK_IMPORTED_MODULE_1__","Utils_Date__WEBPACK_IMPORTED_MODULE_2__","_Contract_Helpers_digits__WEBPACK_IMPORTED_MODULE_3__","contract_info","tick_stream","unique","current_tick","isDigitContract","contract_type","obj_duration","unit_map","name_plural","name_singular","h","duration_ms","asMilliseconds","getDiffDuration","epochToMoment","purchase_time","date_start","date_expiry","tick_count","floor","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","crypto_config","currencies_config","formatCurrency","currency","addComma","num","decimal_points","is_crypto","number","toFixed","parseFloat","toString","$0","$1","$2","getDecimalPlaces","isCryptocurrency","calcDecimalPlaces","CryptoConfig","BTC","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","formatMoney","currency_value","amount","exclude_currency","decimals","minimumFractionDigits","money","sign","Number","decimal_places","isNaN","abs","Intl","maximumFractionDigits","NumberFormat","format","setCurrencies","website_status","getCurrencyName","getTransferLimits","which","transfer_limits","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getTextFormat","getMinPayout","getPaWithdrawalLimit","limit","getCurrencies","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","ButtonLink","className","to","onClick","classNames","string","func","VerticalTabContentContainer","PureComponent","_this$props","action_bar","action_bar_classname","is_routed","selected","selected_item","item","label","TabContent","react__WEBPACK_IMPORTED_MODULE_1___default","map","component","icon","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","exact","from","routes","positions","_ref2","path","render","component_icon","VerticalTabHeaders","header_title","onChange","activeClassName","vertical-tab__header--active","vertical-tab__header__icon--active","FullScreenDialog","visible","wrapperClassName","body","classList","fullscreen-dialog--open","tagName","scrollToTarget","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","bool","client_store","common_store","setResidence","setBalance","handleError","authorizeAccount","mobx__WEBPACK_IMPORTED_MODULE_0__","_common_base_gtm__WEBPACK_IMPORTED_MODULE_1__","_common_base_gtm__WEBPACK_IMPORTED_MODULE_1___default","_common_base_login__WEBPACK_IMPORTED_MODULE_2__","_common_base_login__WEBPACK_IMPORTED_MODULE_2___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_3__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_3___default","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_4__","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_4___default","_common_storage__WEBPACK_IMPORTED_MODULE_5__","_common_utility__WEBPACK_IMPORTED_MODULE_6__","App_i18n__WEBPACK_IMPORTED_MODULE_7__","_logout__WEBPACK_IMPORTED_MODULE_8__","_ws_methods__WEBPACK_IMPORTED_MODULE_9__","BinarySocketGeneral","setIsSocketOpened","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","ServerTime","action","server_time","is_active_tab","sessionStorage","getItem","removeItem","loginid","is_populating_account_list","get_settings","country_code","setEmail","email","responsePayoutCurrencies","GTM","pushTransactionData","bom_ui","residence","landingCompany","flow","regeneratorRuntime","mark","_callee","balance","wrap","_context","prev","next","BinarySocket","stop","setError","responseAuthorize","subscribeBalance","sendRequest","getAccountStatus","payoutCurrencies","mt5LoginList","country","accounts","is_virtual","getSelfExclusion","accepted_bch","site_status","location","reload","setWebsiteStatus","Redirect","setVerificationCode","toggleAccountSignupModal","url_params","URLSearchParams","search","replaceState","root","withRouter","EmptyPortfolioMessage","react_default","Fragment","ContractLink","contract_id","openContract","node","onMount","contract_trade","ic_check","styles","_objectWithoutProperties","_extends","xmlns","width","height","fill","fillRule","cx","cy","ic_cross","ic_cross_objectWithoutProperties","ic_cross_extends","stroke","strokeLinecap","ResultOverlay","handleClick","is_unsupported","preventDefault","onClickRemove","is_contract_won","react_transition_group","in","enter","enterDone","exit","unmountOnExit","positions-drawer-card__result--won","positions-drawer-card__result--lost","react_router_dom","getContractPath","result__caption--won","result__caption--lost","oneOfType","has_same_contract_mounted","PositionsDrawerCard","active_position","indicative","id","is_dark_theme","is_loading","is_sell_requested","is_valid_to_sell","profit_loss","onClickSell","sell_price","toggleUnsupportedContractModal","loader_el","ContentLoader","speed","contract_el","underlying_icon","market","display_name","contract_type_cell","is_high_low","Shortcode","isHighLow","ProgressSlider","start_time","expiry_time","ticks_count","positions-drawer-card__profit-loss--is-crypto","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","positions-drawer-card__indicative--movement-complete","buy_price","positions-drawer-card__wrapper--active","parseInt","result_overlay","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","contract_link","Form_button","btn--loading","is_disabled","duration","duration_unit","exit_spot","sell_time","PositionsDrawer","onUnmount","all_positions","active_contract_id","is_contract_mode","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","appear","positions_drawer_card","positions_drawer_extends","positions-drawer--open","positions-drawer--contract-mode","lib","style","autoHide","empty_portfolio_message","MobxPropTypes","arrayOrObservableArray","portfolio","removePositionById","is_dark_mode_on","togglePositionsDrawer","startAnimation","children_background_color","getComputedStyle","firstElementChild","converted_rgba","startsWith","split","querySelectorAll","element","backgroundColor","requestAnimationFrame","toggleFade","opacity","direction","color","sub_or_add","reduction","new_opacity","stopId","cancelAnimationFrame","querySelector","contains","click","MarketIsClosedOverlay","i18n_default_text","classNameSpan","ScreenLarge","is_contract_visible","is_trade_enabled","is_blurred","sidebar__items--blur","fieldset","trade_params","purchase","ui_loader","FormLayout","is_mobile","Lazy","ctor","should_load","screen_large","SmartChart","lazy","Trade","showPositions","hidePositions","onCloseContract","form_wrapper_class","should_show_bottom_widgets","is_digit_contract","should_show_last_digit_stats","isDigitTradeType","is_chart_visible","is_chart_loading","is_chart_ready","positions_drawer","is","has_progress","symbol","Suspense","fallback","chart_loader","is_visible","chart_id","chart_type","Digits","is_trade_page","digits_info","display_status","is_ended","InfoBox","error_message","removeError","end_epoch","granularity","is_static_chart","onSymbolChange","scroll_to_epoch","scroll_to_offset","start_epoch","cursor","is_market_closed","market_is_closed_overlay","form_layout","onClickNewTrade","purchase_info","routesConfig","removeErrorMessage","scroll_to_left_epoch","scroll_to_left_epoch_offset","trade","hidePositionsFooterToggle","showPositionsFooterToggle","has_only_forward_starting_contracts","setHasOnlyForwardingContracts","ContractDetails","Reports","OpenPositions","ProfitTable","Statement","Page404","route_default","getRoutesConfig","is_authenticated","index","RouterRedirect","icon_component","default","profit","error404","redirect","BinaryLink","active_class","binary_link_objectWithoutProperties","normalizePath","route","findRouteByPath","binary_link_extends","LoginPrompt","onLogin","onSignup","page_title","PageError","header","values","messages","defaultProps","open","urlFor","pushDataLayer","react_router","pathname","is_logged_in","login_prompt","redirectToLogin","route_with_sub_routes_extends","Language","setCookie","default_title","BinaryRoutes","idx","route_with_sub_routes","binary_routes_extends","buttonOnClick","error_code","redirect_label","redirect_url","has_html","dangerouslySetInnerHTML","__html","button_link","array","digitTypesMap","includes","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","react_i18next__WEBPACK_IMPORTED_MODULE_2__","Localize","defaults","arrayOf","extractInfoFromShortcode","info_from_shortcode","barrier_1","_ref$shortcode","_ref$shortcode_info","shortcode_info","website_name","Tooltip","state","show_tooltip_balloon_icon","onMouseEnter","setState","onMouseLeave","alignment","classNameIcon","has_error","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","Assets_icon","tooltip__balloon-icon--show","IncrementButtons","decrementValue","incrementValue","max_is_disabled","min_is_disabled","tabIndex","Input","changeValue","checked","classNameInlinePrefix","data_value","data_tip","display_value","fractional_digits","inline_prefix","is_autocomplete_disabled","is_hj_whitelisted","is_incrementable","is_read_only","onKeyPressed","placeholder","required","autoComplete","data-for","data-hj-whitelist","data-tip","data-value","disabled","maxLength","navigator","userAgent","selectionStart","evt","selectionEnd","onKeyDown","readOnly","InputField","classNameInput","classNamePrefix","error_messages","helper","is_float","_this$props$is_hj_whi","is_negative_disabled","_this$props$is_read_o","_this$props$is_signed","is_signed","_this$props$is_unit_a","is_unit_at_right","max_value","min_value","prefix","unit","Icon","has_valid_length","getDecimals","val","array_value","increment_value","new_value","calculateDecrementedValue","decrement_value","is_increment_input","input","InputField_input","trim","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","keyCode","increment_buttons","InputField_increment_buttons","input_tooltip","tooltip","tooltip--with-label","htmlFor","VerticalTab","changeSelected","applicable_routes","list","filter","current_path","vertical-tab--full-screen","is_full_width","_vertical_tab_headers_jsx__WEBPACK_IMPORTED_MODULE_4__","_vertical_tab_content_container_jsx__WEBPACK_IMPORTED_MODULE_3__","shape","isRequired","UnderlyingIcon","ProgressTicks","arr_ticks","_toConsumableArray","progress-slider__ticks-step--marked","RemainingTime","_ref$end_time","end_time","unix","remaining_time","formatDuration","percentage","getTimePercentage","positions_progress_ticks","Containers_remaining_time","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","Cookies","isProduction","setItem","Storage","isStorageSupported","storage","Store","InScriptStore","k","obj","getResponse","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","Date","read","cookie_value","write","expireDate","isSecure","secure","SessionStore","localStorage","domains","parent_path","cookie_names","cookie","getChartConfig","getChartType","getChartGranularity","getDisplayStatus","getIndicativePrice","getLastTickFromTickStream","isEnded","isUserSold","isValidToSell","getEndTime","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2___default","is_from_purchase","start","hour_to_granularity_map","getExpiryTime","diff","asHours","calculateGranularity","getFinalPrice","bid_price","is_expired","is_settleable","exit_tick_time","is_path_dependent","is_tick_contract","_ref3","contract_types","available_contract_types","available_categories","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","hours","minutes","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","ContractType","contract_display","arr_new_values","c_type","form_components","contract_start_type","duration_units_list","duration_units","arr_units","contract_expiry_type","duration_min_max","start_date","current_start_date","start_dates_list","has_spot","forward_starting_dates","sessions","compare_moment","start_moment","isSessionAvailable","minute","hour","date","_slicedToArray","isTimeValid","toMoment","moment_obj","ceil","arr_basis","localized_basis","basis_list","reduce","cur","bas","buildContractTypesConfig","contractsFor","has_contracts","available","start_type","contract_categories","barriers","sub_cats","durations","buildDurationConfig","count","obj_barrier","field","expiry_type","buildBarriersConfig","buildForwardStartingConfig","barrier_values","barrier","high_barrier","barrier_2","low_barrier","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isAfter","clone","isSameOrBefore","market_close_times","market_close_time","end_moment","expiry_sessions","close","minDate","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getTradingTimes","trading_times_response","submarkets","symbols","_args","abrupt","sent","markets","times","_x","getContractCategories","contract_types_list","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","App_Components_Elements_Label_label_jsx__WEBPACK_IMPORTED_MODULE_3__","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_4__","App_Components_Elements_money_jsx__WEBPACK_IMPORTED_MODULE_5__","Stores_connect__WEBPACK_IMPORTED_MODULE_6__","Description","WalletInformation","has_description","has_loginid","is_website_status_ready","size","available_modes","available_sizes","Label","_classNames","_ref$size","scale","oneOf","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","ChartLoader","theme","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Loading","is_invisible","x","inx","Constants_contract__WEBPACK_IMPORTED_MODULE_2__","ContractTypeCell","getContractTypeDisplay","App_i18n__WEBPACK_IMPORTED_MODULE_3__","FooterIcon","use_icon","CalendarFooter","footer","has_today_btn","has_range_selection","duration_date","is_minimum","Highlight","left","left_offset","highlight_style","transform","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","HighlightWrapper","buttonClick","updateHighlightPosition","closest","resetHighlight","offsetLeft","active_button_el","getElementsByClassName","_this2","other_props","classnames","Children","child","cloneElement","button_highlight_Highlight","ButtonToggleMenu","buttons_arr","is_animated","menu","button-menu__button--active","selected_value","button_highlight_wrapper","Items","handleSelect","has_symbol","symbol_type_class_name","list__item--selected","list__item--disabled","has_tooltip","Popover","NativeSelect","getItemFromValue","findInArray","findIndex","isArrayLike","getValueFromIndex","getPrevIndex","getNextIndex","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleVisibility","setWrapperRef","wrapper_ref","handleClickOutside","is_single_option","prev_index","next_index","is_alignment_left","firstChars","is_nativepicker","native_select","left_alignment_style","list_width","dropdown--left","dropdown--show","dropdown--disabled","classNameDisplay","dropdown__display--clicked","dropdown__display--has-symbol","dropdown__select-arrow--left","onEntered","current","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","dropdown_extends","display","renderThumbHorizontal","DropDown_items","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","allow_equals_toConsumableArray","AllowEquals","has_callputequal_duration","has_callputequal","isRiseFallEqual","input_field","_e$target","classNameTarget","margin","Amount","currencies_list","is_equal","is_minimized","is_single_currency","validation_errors","button_toggle_menu","dropdown","trade-container__currency-options-dropdown","allow_equals","observableObject","Barrier","barrier_title","input_class","is_center","TickSteps","tick_steps_toConsumableArray","range-slider__ticks-step--active","range-slider__ticks-step--marked","ticks","tick","RangeSlider","range-slider__error","steps","tick_steps","first_tick","DurationToggle","icon_className","advanced-simple-toggle__icon--active","react","classNamePath","trading_events","getTradingEvents","events","Calendar","calendar_classCallCheck","calendar_possibleConstructorReturn","calendar_getPrototypeOf","switchView","view","calendar_view","navigateTo","new_date","calendar_date","date_format","onChangeCalendarMonth","start_of_month","getStartOfMonth","onMouseOver","hovered_date","updateSelectedDate","max_date","min_date","onSelect","moment_date","dataset","startOf","is_before","is_after","formatted_date","selected_date","updateSelected","stopPropagation","isPeriodDisabled","month","year","decade","resetCalendar","_this$props2","default_date","setToday","_this$props3","now","_this$props4","start_of_period","endOf","current_date","default_message","_this$props5","holidays","weekends","_this$state","calendar_header","calendar_body","calendar_footer","dates","descrip","DatePicker","date_value","is_datepicker_visible","is_clear_btn_visible","is_mounted","onClickOutside","mainNode","updateDatePickerValue","formatDate","is_clearable","onSelectCalendar","isDateValid","onChangeInput","formatted_value","addDays","clearDatePickerInput","updateStore","calendar","daysFromTodayTo","new_date_value","renderInputField","initial_value","disable_trading_events","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","date_picker_objectSpread","TradingDatePicker","max_date_duration","min_date_expiry","duration_d","is_24_hours_contract","has_intraday_unit","min_duration","daily","moment_contract_start_date_time","setTime","max_daily_duration","is_duration_contract","date_picker","disable_year_selector","Dialog","preClass","selected_time","start_time_moment","end_time_moment","seconds","milliseconds","to_compare_moment","_selected_time$split2","dialog_toConsumableArray","selectOption","current_value","prev_value","is_enabled","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","isBetween","is_minute_enabled","dialog_defineProperty","mm","TimePicker","is_open","toggleDropDown","handleChange","arg","time_picker_typeof","saveRef","nodeName","target_element","padding","dialog","getClosestTime","interval","TradingTimePicker","market_open_times","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","market_open_time","getBoundaries","getSelectedTime","time_picker","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_t","changeDurationUnit","getDurationFromUnit","expiry_list","number_input_props","onChangeUiStore","shared_input_props","has_intraday_duration_unit","isSame","endtime_container_class","has-time","range_slider","advanced_duration_extends","trading_date_picker","trading_time_picker","SimpleDuration","arr","filtered_arr","simple_duration_unit","has_label","du","simple_duration_extends","Duration","hasDurationUnit","is_advanced_duration","onChangeMultiple","has_end_time","expiry","pop","duration_unit_text","duration_value","shared_input","duration_name","number_input","has_toggle","trade-container__fieldset--advanced","duration_extends","advanced_duration","simple_duration","duration_toggle","_ref4","current_duration_unit","new_trade_store_values","duration_objectSpread","DurationWrapper","duration_list","duration_wrapper_toConsumableArray","advancedHasWrongExpiry","handleEndTime","getDurationMinMaxValues","convertDurationLimit","new_duration_unit","new_duration_value","current_unit","current_duration","_this$getDurationMinM2","duration_wrapper_slicedToArray","simple_is_not_type_duration","_this$getDurationMinM4","has_missing_duration_unit","simple_is_missing_duration_unit","setDurationUnit","Duration_duration","duration_wrapper_extends","duration_h","duration_m","duration_s","NumberSelector","arr_arr_numbers","selected_number","arr_numbers","number-selector__selection--selected","LastDigit","last_digit","arr_five","last_digit_toConsumableArray","number_selector","TradeParams","component_key","duration_wrapper","TradeParams_last_digit","TradeParams_amount","CommonPropTypes","CalendarDays","days","hide_others","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","subMonths","day","subDays","start_of_next_month","addMonths","moment_start_date","moment_hovered","is_active","is_today","getDaysOfTheWeek","has_events","is_closes_early","match","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--is-hidden","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","classNameTargetIcon","getDays","week_headers_abbr","CalendarMonths","moment_selected_date","month_headers","data-month","calendar_months_objectSpread","CalendarYears","_getDecade$split2","getDecade","start_of_decade","end_of_decade","years","is_other_decade","data-year","calendar_years_objectSpread","CalendarDecades","decades","min_year","getCentury","_decade$split2","calendar_decades_slicedToArray","is_other_century","data-decade","calendar_decades_objectSpread","CalendarBody","calendar_days_CalendarDays","calendar_months_CalendarMonths","calendar_years_CalendarYears","calendar_decades_CalendarDecades","ContractTypeDialog","full_screen_dialog","ContractTypeItem","contracts","handleInfoClick","contract-type-item--selected","contract-type-item--invisible","ContractTypeList","contract_type_item","objectOrObservableObject","TradeTypeInfoDialog","TradeTypeInfoItem","handleNavigationClick","handleNextClick","handlePrevClick","item_index","itemList","onBackButtonClick","onSubmitButtonClick","ContractTypeWidget","is_dialog_open","is_info_dialog_open","handleInfoVisibility","navigationLength","nextIndex","list_item","prevIndex","onWidgetClick","getDisplayText","getItemIndex","curr_item","getItemList","contract-type-widget__display--clicked","contract_type_dialog","trade_type_info_dialog","trade_type_info_item","Contract","contract_type_widget","CloseButton","notification_order","types","danger","info","success","warning","contract_sold","sortNotifications","Notification","removeNotification","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","notification--small","should_hide_close_btn","close_button","ContractInfo","has_increased","should_fade","proposal_info","has_error_or_not_loaded","trade-container__price-info--disabled","trade-container__price-info--slide","trade-container__price-info--fade","stakeOrPayout","obj_contract_basis","PurchaseButton","buy_info","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","is_button_disabled","btn-purchase--disabled","btn-purchase--animated--slide","btn-purchase--animated--fade","btn-purchase--swoosh","returns","PurchaseFieldset","is_proposal_error","onHoverPurchase","purchase_button","Elements_purchase_button","btn-purchase__shadow-wrapper--disabled","classNameBubble","Purchase","is_client_allowed_to_visit","isLoading","has_error_details","purchase_fieldset","Elements_purchase_fieldset","getContractTypePosition","unshift","is_purchase_locked","onPurchase","purchase_states","ErrorComponent","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","language_getAllowedLanguages","language_getURL","CalendarButton","is_hidden","CalendarHeader","disable_month_selector","hide_disabled_periods","is_date_view","is_month_view","is_year_view","is_decade_view","num_of_years","century","is_prev_month_disabled","is_prev_year_disabled","subYears","is_next_month_disabled","is_next_year_disabled","addYears","is_select_year_disabled","should_hide_next_month","should_hide_prev_month","should_hide_prev_year","should_hide_next_year","onClickPrevYear","onClickNextYear","onClickPrevMonth","onClickNextMonth","calendar_button","calendar__nav--disabled","calendar__nav--is-hidden","calendar__btn--disabled","PositionsCardLoader","react_content_loader_es","primaryColor","secondaryColor","y","rx","ry","positions_card_PositionsCardLoader","addCommaToNumber","duration_from_purchase","round","getBarrierLabel","isDigitType","getBarrierValue","digitTypeMap","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","positions_helper_getTimePercentage","positions_helper_getBarrierLabel","isGtmApplicable","dataLayer","language","visitorId","eventHandler","login_event","is_new_account","affiliate_token","getJSON","bom_affiliate_token","moment_now","utc","bom_account_type","getAccountType","bom_currency","bom_country","bom_country_abbrev","bom_email","url","bom_today","bom_date_joined","bom_age","date_of_birth","bom_firstname","first_name","bom_lastname","last_name","bom_phone","phone","mt5_login_list","acc_type","getMT5AccountType","group","login","last_transaction_timestamp","bom_transaction_in_last_30d","extra_data","transaction","storage_key","gtm_transactions","timestamp","transactions_arr","transactions","transaction_id","transaction_time","mt5NewAccount","mt5_new_account","mt5_account_type","account_type","gtm_data","mt5_last_signup","getAccountOfType","_pending_timeouts","status_config","ws_config","network_status","updateUI","StatusConfig","pendings","pending_keys","pending_timeouts","setStatus","ws_events_map","setPending","clearPendings","NetworkMonitorBase","online","class","offline","blinking","ws_init","ws_request","onLine","ping","socket_general_functions","fncUpdateUI","Button","_ref$className","has_effect","classes","effect","button","wrapper","current_loginid","types_map_config","client_object","getAllAccountsObject","getAllLoginids","isAccountOfType","TypesMapConfig","updateAccountList","canTransferFundsTo","only_enabled","this_type","financial","gaming","virtual","account_list","account","excluded_until","param","param_to_set","value_to_set","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","landing_company_name","shouldAcceptTnc","website_tnc_version","client_tnc_status","setNewAccount","token","currentLandingCompany","landing_company_response","this_shortcode","landing_company_prop","shouldCompleteTax","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","canTransferFunds","hasSvgAccount","canChangeCurrency","is_current","has_no_mt5","has_no_transaction","has_account_criteria","i18n_config","resources","translation","hashTransKey","crc32","lng","query","fallbackLng","i18n","use","initReactI18next","_contract__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","urlForLanguage","getCurrentProductionDomain","location_url","static_host","paramsHash","host_map","Url","bot.binary.com","developers.binary.com","academy.binary.com","tech.binary.com","blog.binary.com","getUrlBase","reset","param_hash","arr_params","parsed","URL","p_l","params","pars","should_change_to_legacy","new_url","urlForCurrentDomain","current_domain","url_object","urlForStatic","websiteUrl","protocol","getHostMap","resetStaticHost","account_password","apps","cashier_password","exclusion","limits","personal","settings","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","requestTime","timeCounter","fncTimeUpdated","clearInterval","setInterval","performance","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","timePromise","showUnavailableLocationError","showError","residence_list","clients_country_code","clients_country_text","residenceList","clients_country","obj_country","isMarketClosed","symbol_info","exchange_is_open","pickDefaultSymbol","getFavoriteOpenSymbol","getFirstOpenSymbol","chart_favorites","client_favorite_list","client_fav_symbol","client_first_open_symbol","isSymbolOpen","first_open_symbol","submarket","getSymbolDisplayName","countDecimalPlaces","getUnderlyingPipSize","_callee2","obj_symbols","_context2","pip","all_languages","url_lang","lang_regex","languageFromUrl","current_lang","ACH","DE","ES","FR","ID","IT","PL","PT","RU","TH","VI","ZH_CN","ZH_TW","crowdin_lang","urlLang","custom_url","LazyLoadedComponent","getDurationMaps","to_second","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","sort","from_unit","to_unit","duration_string","root_store","duration_is_day","expiry_is_after_today","isInteger","resetEndTimeOnVolatilityIndices","NodeList","thisArg","Element","documentElement","matches","parentElement","nodeType","hide","show","toggleClass","class_name","should_add","setVisibility","make_visible","html","content","innerHTML","subscriptions","forget_requested","subscription_id","dispatch","forget","forgetStream","hasCallbackFunction","hasValues","SubscriptionManager","sub_id","stream_id","sub_info","subscribers","fnc","fncCallback","match_values","forgets_list","request_obj","values_obj","addSubscriptionFromRequest","send_request","subscribe_request","subscription_props","is_stream","prop","should_forget_first","isDeepEqual","forgetAll","types_to_forget","sub_ids","forget_all","ignored_responses_in_trackjs","queue","ResponseQueue","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","return_value","TrackJS","log","fresh","track","getMessage","activeSymbols","force_request","buy","proposal_id","price","get_account_status","get_self_exclusion","getSettings","newAccountVirtual","verification_code","client_password","new_account_virtual","oauthApps","oauth_apps","profitTable","offset","date_boundaries","description","proposalOpenContract","sell","sellExpired","sell_expired","request_object","cb","is_forced","subscribeProposal","req","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","subscribeTicks","subscribeTicksHistory","subscribeTransaction","trackJSNetworkMonitor","Proxy","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","createFromInputFallback","_d","NaN","epoch","isValid","isUTC","today_moment","second","convertToUnix","toGMTFormat","diffInMonths","asDays","formatted_str","time_str","isHourValid","isMinuteValid","num_of_months","date_1","date_2","date_time_epochToMoment","date_time_toMoment","date_time_toGMTFormat","date_time_getDiffDuration","date_time_formatDuration","date_time_isDateValid","date_time_minDate","isMobile","ErrorBoundary","componentDidCatch","hasError","Errors","is_slow_loading","AppContents","is_app_blurred","is_dark_mode","is_fully_blurred","slow_loading_status","loading","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-blurred","tt_react_custom_scrollbars_lib","addNotificationBar","pwa_prompt_event","setPWAPromptEvent","gmt_time","NetworkStatus","network-status__circle--offline","network-status__circle--online","network-status__circle--blinker","ToggleFullScreen","toggle_fullscreen_classCallCheck","toggle_fullscreen_possibleConstructorReturn","toggle_fullscreen_getPrototypeOf","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","TogglePositions","positions_count","toggle_positions_class","ic-positions--active","ic-positions--has-count","data-count","ModalElement","modal_classCallCheck","modal_possibleConstructorReturn","modal_getPrototypeOf","hideFullBlur","toggleModal","modal_root","showFullBlur","ReactDOM","createPortal","vertical_tab","classNameHeader","modal_content","Modal","modal_ModalElement","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","ic-settings--active","modal_Modal","Footer","active_positions","is_route_blurred","is_settings_modal_on","show_positions_toggle","toggleSettingsModal","footer--is-blurred","toggle_positions_TogglePositions","Containers_server_time","toggle_settings_ToggleSettings","toggle_fullscreen_ToggleFullScreen","Deposit","deposit_url","frameBorder","scrolling","iframe_height","cashier","MenuLinks","login_only","Components_Routes","link_to","logo","image","LoginButton","SignupButton","UpgradeButton","AccountActions","onClickUpgrade","is_acc_switcher_on","toggleAccountsDialog","is_upgrade_enabled","is_dialog_on","toggleDialog","upgrade_button_UpgradeButton","login_button_LoginButton","signup_button_SignupButton","header_links","Header","header--is-blurred","menu_links_MenuLinks","account_actions_AccountActions","is_cashier_modal_on","toggleCashierModal","is_accounts_switcher_on","Routes","NetworkMonitor","is_online","setNetworkStatus","OutdatedBrowser","opening_tag","closing_tag","interpolation","escapeValue","$buoop","vs","f","api","noclose","reminder","onshow","nomessage","insecure","pre_build_dvrs","client_notifications","self_exclusion","exclusion_end","authenticate","cashier_locked","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","mf_retail","financial_limit","risk","tax","tnc","required_fields","handleClientNotifications","addNotification","_response$get_account","prompt_client_to_authenticate","_getStatusValidations","validations","account_status","document_under_review","ukrts_max_turnover_limit_not_set","professional","is_mf_retail","landing_company_shortcode","checkAccountStatus","necessary_withdrawal_fields","necessary_signup_fields","required_settings_fields","getRequiredFields","hasMissingRequiredField","validRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","isMoreThanMax","getPreBuildDVRs","address","permitted_characters","compare","general","letter_symbol","not_equal","value_one","value_two","password","postcode","regular","signup_token","tax_id","errors_classCallCheck","errors","attribute","Validator","rules","validator_classCallCheck","error_count","rule","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","base_store_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","_descriptor3","waitFor","_asyncToGenerator","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","_this3","propertyName","_this4","_this5","addRule","_this6","intercept","change","validateProperty","newValue","_this7","trigger","inputs","isPassed","setValidationErrorMessages","_this8","listener","_this9","when","switch_broadcast","switchEndSignal","onSwitchAccount","t0","disposeSwitchAccount","reactions","act","partial_fetch_time","freeze","observable","ClientStore","client_store_classCallCheck","client_store_initializerDefineProperty","client_store_getPrototypeOf","client_store_descriptor","client_store_assertThisInitialized","client_store_descriptor2","client_store_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","cashier_confirmed","fiat","crypto","isCrypto","currency_defineProperty","selectCurrency","session_start","upgrade_info","user_id","removeAllNotifications","setSwitched","setUserLogin","authorize_response","setLoginId","setAccounts","registerReactions","switched","getAccount","all_loginids","clearContract","clearTable","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","broadcastAccountChange","selected_currency","should_refresh_active_symbols","obj_params","active_loginid","map_names","is_allowed_real","acct1","param_value","token1","runInAction","storeClientAccounts","fetchResidenceList","isDisabled","getAccountInfo","default_currency","valid_login_ids_regex","_this10","_this11","acc","computed","CommonStore","is_socket_opened","is_network_online","common_store_objectSpread","withdraw_url","GTMStore","gtm_store_classCallCheck","gtm_store_getPrototypeOf","gtm_store_descriptor","gtm_store_assertThisInitialized","accountSwitcherListener","gtm_store_asyncToGenerator","is_gtm_applicable","gtm_store_objectSpread","common_variables","contract_data","barrier1","barrier2","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","event_name","userId","CashierStore","response_cashier","setDepositUrl","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","createChartBarrier","SmartChartStore","removeBarriers","createBarriers","line_style","not_draggable","updateBarrierShade","MarkerLine","marker_config","LINE_END","content_config","chart-marker-line__icon--won","chart-marker-line__icon--lost","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","marker_spot_label_classCallCheck","marker_spot_label_possibleConstructorReturn","marker_spot_label_getPrototypeOf","handleHoverToggle","show_label","has_hover_toggle","marker_spot","Markers_marker_spot","spot_className","align_label","spot_epoch","chart-spot-label__value-container--won","chart-spot-label__value-container--lost","spot_value","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","xPositioner","yPositioner","SPOT","SPOT_ENTRY","SPOT_SELL","MARKER_TYPES_CONFIG","LINE_PURCHASE","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","createMarkerSpotEntry","entry_tick_time","component_props","entry_tick","createMarkerSpotExit","is_user_sold","exit_tick","createMarkerSpotMiddle","spot","createChartMarkers","addTickMarker","addMarker","marker_spots","marker_lines","chart_markers_defineProperty","_marker_spots","_marker_lines","chart_markers_asyncToGenerator","marker_obj","createMarker","markers","_x2","_x3","addLabelAlignment","prev_tick","is_entry_spot","is_middle_spot","is_exit_spot","_x4","_x5","contractSold","sold_for","ContractReplayStore","is_ongoing_contract","prev_indicative","handleSubscribeProposalOpenContract","proposal_open_contract_request","forgetProposalOpenContract","setContractMode","populateConfig","indicative_status","sell_info","cleanupContractChartView","setIsChartLoading","new_indicative","updateMargin","handleDigits","getDigitInfo","digit_info","extendObservable","handleSell","services_error","contract_replay_store_objectSpread","toggleServicesErrorModal","ContractTradeStore","is_from_positions","_this$contract_info","handleChartType","setChartView","is_one_tick_contract","setStaticChart","setContractStart","setContractEnd","longcode","onMountBuy","updateProposal","switchToContractMode","applySavedTradeChartLayout","drawChart","updateChartType","updateGranularity","formatPortfolioPosition","portfolio_pos","details","reference","getUnsupportedContracts","PortfolioStore","getPositionById","createTransformer","position","pos","pos1","pos2","res","new_pos","pushNewPosition","proposalOpenContractHandler","getPositionIndexById","populateResultDetails","proposal","entry_spot","portfolio_store_objectSpread","contract_idx","portfolio_store_asyncToGenerator","initializePortfolio","_callee3","_context3","portfolioHandler","transactionHandler","contract_response","current_spot","current_spot_time","getDateTo","date_to","today","getDateFrom","should_load_partially","date_from","shouldSendDateFrom","getDateBoundaries","format_request_objectSpread","formatProfitTableTransactions","format_string","should_exclude_currency","format_response_objectSpread","delay_on_scroll_time","ProfitTableStore","fetchOnScroll","debounce","fetchNextBatch","has_loaded_all","shouldFetchNextBatch","profitTableResponseHandler","formatted_transactions","profit_store_toConsumableArray","_event$target","left_to_scroll","scrollHeight","assertHasValidCache","client_loginid","clearDateFilter","date_values","previous","barriersObjectToArray","reference_array","js_object","ChartBarrierStore","chart_barrier_store_dec","chart_barrier_store_dec2","chart_barrier_store_dec3","chart_barrier_store_dec4","chart_barrier_store_descriptor","chart_barrier_store_applyDecoratedDescriptor","chart_barrier_store_class","onChartBarrierChange","chart_barrier_store_classCallCheck","chart_barrier_store_initializerDefineProperty","chart_barrier_store_descriptor2","chart_barrier_store_descriptor3","chart_barrier_store_descriptor4","chart_barrier_store_descriptor5","chart_barrier_store_descriptor6","chart_barrier_store_descriptor7","chart_barrier_store_descriptor8","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","isFromChart","should_display","updateBarriers","chart_barrier_store_toConsumableArray","is_relative","barriers_list","barriersToString","configurable","initializer","getOwnPropertyDescriptor","ChartMarkerStore","chart_marker_store_descriptor","chart_marker_store_applyDecoratedDescriptor","chart_marker_store_class","chart_marker_store_classCallCheck","chart_marker_store_initializerDefineProperty","chart_marker_store_descriptor2","barriers_empty_array","markers_empty_array","trade_chart_symbol","trade_chart_granularity","trade_chart_type","wsSubscribe","smart_chart_store_objectSpread","wsForget","wsSendRequest","saveAndClearTradeChartLayout","removeMarkers","resetScrollToLeft","resetPurchaseStates","is_title_enabled","updateEpochScrollToOffset","updateEpochScrollToValue","updateBarrierColor","should_export_layout","should_import_layout","trade_chart_layout","should_clear_chart","isDone","requestProposal","layout","smart_chart_store_defineProperty","has_differing","barriers_array","next_barrier","markers_array","marker","next_marker","assetInformation","countdown","is_chart_countdown_visible","isHighestLowestMarkerEnabled","current_language","barrier_config","main_barrier","isBarrierSupported","StatementStore","statementHandler","balance_after","action_type","refid","desc","app_id","formatStatementTransaction","statement_store_toConsumableArray","processPurchase","onChangeSymbolAsync","getValidationRules","start_moment_clone","_value$split2","_value$split4","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","start_date_objectSpread","processTradeParams","new_state","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","process_toConsumableArray","StartDate","source","new_values","map_error_field","getProposalErrorField","error_field","error_id","el_error","getElementsByName","createProposalRequestForContract","type_of_contract","obj_expiry","proposal_objectSpread","TradeStore","trade_store_classCallCheck","trade_store_getPrototypeOf","trade_store_initializerDefineProperty","trade_store_descriptor","trade_store_assertThisInitialized","trade_store_descriptor2","trade_store_descriptor3","trade_store_descriptor4","trade_store_descriptor5","trade_store_descriptor6","trade_store_descriptor7","trade_store_descriptor8","trade_store_descriptor9","trade_store_descriptor10","trade_store_descriptor11","trade_store_descriptor12","trade_store_descriptor13","trade_store_descriptor14","trade_store_descriptor15","trade_store_descriptor16","trade_store_descriptor17","trade_store_descriptor18","trade_store_descriptor19","trade_store_descriptor20","trade_store_descriptor21","trade_store_descriptor22","trade_store_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","debouncedProposal","proposal_requests","initial_barriers","is_initial_barrier_applied","_descriptor38","_descriptor39","_descriptor40","disablePurchaseButtons","el_purchase_value","el_purchase_buttons","changeDurationValidationRules","onAllowEqualsChange","is_symbol_in_active_symbols","processNewValuesAsync","setAppLoading","trade_store_objectSpread","setActiveSymbols","trade_store_asyncToGenerator","setDefaultSymbol","setContractTypes","validateAllProperties","trade_store_defineProperty","previous_symbol","setMarketStatus","is_over","is_purchase_enabled","_response$buy","drawContractStartTime","openPositionsDrawer","pushPurchaseData","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","setPreviousSymbol","requests","new_req","current_req","createProposalRequests","setIsDigitContract","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","ask_price","contract_basis","getProposalInfo","proposal_response","_proposal_response$ec","setChartBarrier","duration_options","_callee7","_context7","resetErrorServices","refresh","prepareTradeStore","onLoadingMount","is_trade_component_mounted","first_timeout","loading_message","secondary_message","setSlowLoading","second_timeout","loading_interval","smart_chart_store","trade_chart_chart_type","restoreTradeChart","pushState","_this12","_callee10","_context10","_callee9","_context9","_this13","_this14","ModulesStore","Modules_classCallCheck","contract_replay","UIStore","ui_store_classCallCheck","ui_store_getPrototypeOf","ui_store_initializerDefineProperty","ui_store_descriptor","ui_store_assertThisInitialized","ui_store_descriptor2","ui_store_descriptor3","ui_store_descriptor4","ui_store_descriptor5","ui_store_descriptor6","ui_store_descriptor7","ui_store_descriptor8","ui_store_descriptor9","ui_store_descriptor10","ui_store_descriptor11","ui_store_descriptor12","ui_store_descriptor13","ui_store_descriptor14","ui_store_descriptor15","ui_store_descriptor16","ui_store_descriptor17","ui_store_descriptor18","ui_store_descriptor19","ui_store_descriptor20","ui_store_descriptor21","ui_store_descriptor22","ui_store_descriptor23","ui_store_descriptor24","ui_store_descriptor25","ui_store_descriptor26","ui_store_descriptor27","ui_store_descriptor28","ui_store_descriptor29","ui_store_descriptor30","ui_store_descriptor31","ui_store_descriptor32","ui_store_descriptor33","ui_store_descriptor34","ui_store_descriptor35","handleResize","autorun","screen_width","innerWidth","is_reports_visible","is_services_error_visible","is_main_drawer_on","is_notifications_drawer_on","notification","notification_messages","ui_store_toConsumableArray","push_notifications","state_change","is_unsupported_contract_modal_visible","is_account_signup_modal_visible","RootStore","Stores_classCallCheck","configure","enforceActions","initStore","hidden","is_logging_in","isTouchDevice","App","base","basename","is_tablet","Layout_header","error_boundary","app_contents","Routes_routes","app_App","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","FadeIn","posed","span","transition","PopoverBubble","calculatePosition","target_rectangle","_this$props$margin","bottom","right","popover_bubble","react_pose_es","initialPose","zIndex","data-popover-pos","popover__bubble--error","popover_classCallCheck","popover_possibleConstructorReturn","popover_getPrototypeOf","toggleOpen","Boolean","target_reference","toggleClose","disable_target_icon","icon_class_name","Popover_popover_bubble","Fieldset","fieldset_header_class","fieldset_info_class","loginUrl","domain_app_ids","server_url","signup_device","date_first_contact","marketing_queries","default_binary_url","initOneAll","provider","el_button","brand","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0___default","Utils_Date__WEBPACK_IMPORTED_MODULE_1__","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","session","deriv.app","all_domains","config_app_id","is_real","server","_common_base_currency_base__WEBPACK_IMPORTED_MODULE_3__","Money","_ref$currency","has_sign","_ref$is_formatted","is_formatted","abs_value","final_amount","_getLastTickFromTickS","createDigitInfo","spot_time","digit","icons","IconArrowBold","IconArrow","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconDanger","IconDeposit","IconDepositSmall","IconExclamation","IconFlag","IconInfoBlue","IconInfoOutline","IconInformation","IconMinimize","IconMinus","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconWip","IconWithdrawal","IconWithdrawalSmall","ContractIconClose","IconEndTime","ContractIconFlag","IconStartTime","IconTick","ModalIconClose","IconMaximize","IconPositions","IconSettings","IconAccountsCurrency","IconLogout","IconBell","IconCashier","IconDeriv","IconHamburger","IconPortfolio","IconReports","IconTrade","IconDemo","IconOpenPositions","IconProfitTable","IconStatement","IconCalendarForwardToday","IconCharts","IconLanguage","IconPurchase","IconTheme","IconBuy","IconPayout","IconSell","IconWallet","IconBarrierDown","IconBarrierUp","IconTradeCategory","TradeCategoriesGIF","TradeCategories","IconTradeType","IconLock","IconPriceMove","classNameRect","IconLazy","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","RDBEAR","RDBULL","WLDAUD","WLDEUR","WLDGBP","WLDUSD","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","getSupportedContracts","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","isEqualArray","isEqualObject","arr1","arr2","obj1","obj2","to_replace","tag_name","attributes","attr","textContent","UILoader","classNameBlock","block_class","loading_class","viewBox","strokeWidth","strokeMiterlimit","Utils_Date__WEBPACK_IMPORTED_MODULE_0__","_logout__WEBPACK_IMPORTED_MODULE_0__","_socket_general__WEBPACK_IMPORTED_MODULE_1__","_ws_methods__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_0__","Constants_routes__WEBPACK_IMPORTED_MODULE_1__","routes_config","route_info","match_path","matchPath","route_path","getPath"],"mappings":"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","file":"js/main.3bfbc88f331357127090.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"account-info\":\"account-info\",\"contract\":\"contract\",\"digits\":\"digits\",\"info-box\":\"info-box\",\"modals\":\"modals\",\"notification-messages\":\"notification-messages\",\"push-notification\":\"push-notification\",\"reports\":\"reports\",\"screen-small\":\"screen-small\",\"settings-chart\":\"settings-chart\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"toggle-menu-drawer\":\"toggle-menu-drawer\",\"vendors~open_position~7c650be5\":\"vendors~open_position~7c650be5\",\"default~open_position~1833eefb\":\"default~open_position~1833eefb\",\"open_positions\":\"open_positions\",\"profit_table\":\"profit_table\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\",\"work-in-progress\":\"work-in-progress\",\"DenialOfServiceModal\":\"DenialOfServiceModal\",\"MarketUnavailableModal\":\"MarketUnavailableModal\",\"ServicesErrorModal\":\"ServicesErrorModal\",\"UnsupportedContractModal\":\"UnsupportedContractModal\",\"two-month-picker\":\"two-month-picker\"}[chunkId]||chunkId) + \".\" + \"3bfbc88f331357127090\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"digits\":1,\"modals\":1,\"notification-messages\":1,\"reports\":1,\"screen-small\":1,\"work-in-progress\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + chunkId + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/br_cs-optimizations/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([509,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const ClientBase       = require('./client_base');\nconst SocketCache      = require('./socket_cache');\nconst getLanguage      = require('../language').get;\nconst State            = require('../storage').State;\nconst cloneObject      = require('../utility').cloneObject;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\nconst PromiseClass     = require('../utility').PromiseClass;\nconst getAppId         = require('../../config').getAppId;\nconst getSocketURL     = require('../../config').getSocketURL;\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let binary_socket;\n\n    let config               = {};\n    let buffered_sends       = [];\n    let req_id               = 0;\n    let wrong_app_id         = 0;\n    let is_available         = true;\n    let is_disconnect_called = false;\n    let is_connected_before  = false;\n\n    const socket_url = `${getSocketURL()}?app_id=${getAppId()}&l=${getLanguage()}`;\n    const timeouts   = {};\n    const promises   = {};\n\n    const no_duplicate_requests = [\n        'authorize',\n        'get_settings',\n        'residence_list',\n        'landing_company',\n        'payout_currencies',\n        'asset_index',\n        'active_symbols',\n    ];\n\n    const sent_requests = {\n        items : [],\n        clear : () => { sent_requests.items = []; },\n        has   : msg_type => sent_requests.items.indexOf(msg_type) >= 0,\n        add   : (msg_type) => { if (!sent_requests.has(msg_type)) sent_requests.items.push(msg_type); },\n        remove: (msg_type) => {\n            if (sent_requests.has(msg_type)) sent_requests.items.splice(sent_requests.items.indexOf(msg_type, 1));\n        },\n    };\n\n    const waiting_list = {\n        items: {},\n        add  : (msg_type, promise_obj) => {\n            if (!waiting_list.items[msg_type]) {\n                waiting_list.items[msg_type] = [];\n            }\n            waiting_list.items[msg_type].push(promise_obj);\n        },\n        resolve: (response) => {\n            const msg_type      = response.msg_type;\n            const this_promises = waiting_list.items[msg_type];\n            if (this_promises && this_promises.length) {\n                this_promises.forEach((pr) => {\n                    if (!waiting_list.another_exists(pr, msg_type)) {\n                        pr.resolve(response);\n                    }\n                });\n                waiting_list.items[msg_type] = [];\n            }\n        },\n        another_exists: (pr, msg_type) => (\n            Object.keys(waiting_list.items)\n                .some(type => (\n                    type !== msg_type &&\n                    waiting_list.items[type].indexOf(pr) !== -1\n                ))\n        ),\n    };\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach((key) => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const sendBufferedRequests = () => {\n        while (buffered_sends.length > 0 && is_available) {\n            const req_obj = buffered_sends.shift();\n            send(req_obj.request, req_obj.options);\n        }\n    };\n\n    const wait = (...msg_types) => {\n        const promise_obj = new PromiseClass();\n        let is_resolved   = true;\n        msg_types.forEach((msg_type) => {\n            const last_response = State.get(['response', msg_type]);\n            if (!last_response) {\n                if (msg_type !== 'authorize' || ClientBase.isLoggedIn()) {\n                    waiting_list.add(msg_type, promise_obj);\n                    is_resolved = false;\n                }\n            } else if (msg_types.length === 1) {\n                promise_obj.resolve(last_response);\n            }\n        });\n        if (is_resolved) {\n            promise_obj.resolve();\n        }\n        return promise_obj.promise;\n    };\n\n    /**\n     * @param {Object} data: request object\n     * @param {Object} options:\n     *      forced  : {boolean}  sends the request regardless the same msg_type has been sent before\n     *      msg_type: {string}   specify the type of request call\n     *      callback: {function} to call on response of streaming requests\n     */\n    const send = function (data, options = {}) {\n        const promise_obj = options.promise || new PromiseClass();\n        const has_callback = typeof options.callback === 'function';\n\n        if (!data || isEmptyObject(data)) return promise_obj.promise;\n\n        const msg_type = options.msg_type || no_duplicate_requests.find(c => c in data);\n\n        // Fetch from cache\n        if (!options.forced) {\n            const response = SocketCache.get(data, msg_type);\n            if (response) {\n                State.set(['response', msg_type], cloneObject(response));\n                if (isReady() && is_available && !options.skip_cache_update && !has_callback) { // make the request to keep the cache updated\n                    binary_socket.send(JSON.stringify(data), { forced: true });\n                } else if (+data.time !== 1) { // Do not buffer all time requests\n                    buffered_sends.push({\n                        request: data,\n                        options: Object.assign(options, { promise: promise_obj, forced: true }),\n                    });\n                }\n                promise_obj.resolve(response);\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    return promise_obj.promise;\n                }\n            }\n        }\n\n        // Fetch from state\n        if (!options.forced && msg_type && no_duplicate_requests.indexOf(msg_type) !== -1) {\n            const last_response = State.get(['response', msg_type]);\n            if (last_response) {\n                promise_obj.resolve(last_response);\n                return promise_obj.promise;\n            } else if (sent_requests.has(msg_type)) {\n                return wait(msg_type).then((response) => {\n                    promise_obj.resolve(response);\n                    return promise_obj.promise;\n                });\n            }\n        }\n\n        if (!data.req_id) {\n            data.req_id = ++req_id;\n        }\n        promises[data.req_id] = {\n            callback: (response) => {\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    promise_obj.resolve(response);\n                }\n            },\n            subscribe: !!data.subscribe,\n        };\n\n        if (isReady() && is_available && config.isOnline()) {\n            is_disconnect_called = false;\n            if (!getPropertyValue(data, 'passthrough') && !getPropertyValue(data, 'verify_email')) {\n                data.passthrough = {};\n            }\n\n            binary_socket.send(JSON.stringify(data));\n            config.wsEvent('send');\n            if (msg_type && !sent_requests.has(msg_type)) {\n                sent_requests.add(msg_type);\n            }\n        } else if (+data.time !== 1) { // Do not buffer all time requests\n            buffered_sends.push({ request: data, options: Object.assign(options, { promise: promise_obj }) });\n        }\n\n        return promise_obj.promise;\n    };\n\n    const init = (options) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config         = options;\n            buffered_sends = [];\n        }\n        clearTimeouts();\n        config.wsEvent('init');\n\n        if (isClose()) {\n            binary_socket = new WebSocket(socket_url);\n            State.set('response', {});\n        }\n\n        binary_socket.onopen = () => {\n            config.wsEvent('open');\n            if (ClientBase.isLoggedIn()) {\n                send({ authorize: ClientBase.get('token') }, { forced: true });\n            } else {\n                sendBufferedRequests();\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        };\n\n        binary_socket.onmessage = (msg) => {\n            config.wsEvent('message');\n            const response = msg.data ? JSON.parse(msg.data) : undefined;\n            if (response) {\n                SocketCache.set(response);\n                const msg_type = response.msg_type;\n\n                // store in State\n                if (!getPropertyValue(response, ['echo_req', 'subscribe']) || /balance|website_status/.test(msg_type)) {\n                    State.set(['response', msg_type], cloneObject(response));\n                }\n                // resolve the send promise\n                const this_req_id = response.req_id;\n                const pr          = this_req_id ? promises[this_req_id] : null;\n                if (pr && typeof pr.callback === 'function') {\n                    pr.callback(response);\n                    if (!pr.subscribe) {\n                        delete promises[this_req_id];\n                    }\n                }\n                // resolve the wait promise\n                waiting_list.resolve(response);\n\n                if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                    wrong_app_id = getAppId();\n                }\n\n                if (typeof config.onMessage === 'function') {\n                    config.onMessage(response);\n                }\n            }\n        };\n\n        binary_socket.onclose = () => {\n            sent_requests.clear();\n            clearTimeouts();\n            config.wsEvent('close');\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        };\n    };\n\n    const clear = (msg_type) => {\n        buffered_sends = [];\n        if (msg_type) {\n            State.set(['response', msg_type], undefined);\n            sent_requests.remove(msg_type);\n        }\n    };\n\n    const availability = (status) => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    return {\n        init,\n        wait,\n        send,\n        clear,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        sendBuffered      : sendBufferedRequests,\n        get               : () => binary_socket,\n        setOnDisconnect   : (onDisconnect) => { config.onDisconnect = onDisconnect; },\n        setOnReconnect    : (onReconnect) => { config.onReconnect = onReconnect; },\n        removeOnReconnect : () => { delete config.onReconnect; },\n        removeOnDisconnect: () => { delete config.onDisconnect; },\n    };\n})();\n\nmodule.exports = BinarySocketBase;\n","const moment           = require('moment');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getStaticHash    = require('../utility').getStaticHash;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    // map_to: to store different responses of the same key, should be array of:\n    //     string  : the property value from echo_req\n    //     function: return value of the function\n    const config = {\n        payout_currencies     : { expire: 120 },\n        proposal_open_contract: { expire: 10,  map_to: ['contract_id'] },\n        active_symbols        : { expire: 10,  map_to: ['product_type', 'landing_company', getLanguage] },\n        contracts_for         : { expire: 10,  map_to: ['contracts_for', 'product_type', 'currency'] },\n        exchange_rates        : { expire: 60,  map_to: ['base_currency'] },\n        ticks_history         : { expire: 10,  map_to: ['ticks_history', 'granularity', 'start', 'end', 'style'] },\n        trading_times         : { expire: 120, map_to: ['trading_times'] },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10,   map_to: ['limit', 'offset'] },\n        // profit_table          : { expire: 10,   map_to: ['date_from', 'limit', 'offset'] },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const set = (response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // check if response has subscription, since only want to cache non-streamed responses\n        if (response.subscription) return;\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message  = cached_response[msg_type];\n        const new_message     = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value        = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache        = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache      = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            // window.location.reload();\n            return;\n        }\n\n        const key      = makeKey(response.echo_req, msg_type);\n        const expires  = moment().add(config[msg_type].expire, 'm').valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = (data) => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const get = (request, msg_type) => {\n        let response;\n\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return undefined;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) { // new release\n            clear();\n        }\n\n        const key          = makeKey(request, msg_type);\n        const response_obj = getPropertyValue(data_obj, key) || {};\n\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else { // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const makeKey = (source_obj = {}, msg_type = '') => {\n        let key = msg_type || Object.keys(source_obj).find(type => config[type]);\n\n        if (key && !isEmptyObject(source_obj)) {\n            ((config[key] || {}).map_to || []).forEach((map_key) => {\n                const value = typeof map_key === 'function' ? map_key() : source_obj[map_key];\n                key += map_key ? `_${value || ''}` : '';\n            });\n        }\n\n        return key;\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach((data_key) => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n","import { getMarketNamesMap, getContractConfig } from 'Constants';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\nexport const getMarketInformation = (shortcode) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = (underlying) => underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null;\n\nexport const getTradeTypeName = (category) => category ? getContractConfig()[category.toUpperCase()].name : null;\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\n\nexport const requestLogout = () =>\n    WS.logout().then(doLogout);\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n};\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","const toTitleCase = str => (\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n);\n\nconst padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array((len - text.length) + 1).join(char)}${text}`;\n};\n\nconst compareBigUnsignedInt = (a, b) => {\n    let first_num  = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num        = padLeft(first_num, max_length, '0');\n    second_num       = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nconst numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nmodule.exports = {\n    toTitleCase,\n    padLeft,\n    numberToString,\n    compareBigUnsignedInt,\n};\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        gtm       : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import { localize } from 'App/i18n';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'rise_fall_equal', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }        from 'App/i18n';\nimport { unique }          from '_common/utility';\nimport {\n    epochToMoment,\n    getDiffDuration }      from 'Utils/Date';\nimport { isDigitContract } from '../../Contract/Helpers/digits';\n\nexport const getCurrentTick = (contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch');\n    const current_tick = isDigitContract(contract_info.contract_type) ? tick_stream.length : tick_stream.length - 1;\n    return (!current_tick || current_tick < 0) ? 0 : current_tick;\n};\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n\n    if (duration_ms >= 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60 * 24));\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        return Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / (1000));\n    }\n    return Math.floor(duration_ms / (1000));\n};\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        d: { name_plural: localize('days'),    name_singular: localize('day') },\n        h: { name_plural: localize('hours'),   name_singular: localize('hour') },\n        m: { name_plural: localize('minutes'), name_singular: localize('minute') },\n        s: { name: localize('seconds') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            const days_value = duration_ms / 86400000;\n            return (days_value <= 2) ? unit_map.d.name_singular : unit_map.d.name_plural;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            return (duration_ms === 3600000) ? unit_map.h.name_singular : unit_map.h.name_plural;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            return (duration_ms === 60000) ? unit_map.m.name_singular : unit_map.m.name_plural;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","const getLanguage      = require('../language').get;\nconst localize         = require('../../App/i18n').localize;\nconst getPropertyValue = require('../utility').getPropertyValue;\n\nlet currencies_config = {};\n\nconst getTextFormat = (number, currency) => `${currency} ${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))}`;\n\nconst formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign           = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        money = new Intl.NumberFormat(getLanguage().toLowerCase().replace('_', '-'), options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nconst formatCurrency = currency => `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n\nconst addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number.toString().replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => (\n        $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,')\n    ));\n};\n\nconst calcDecimalPlaces = (currency) => isCryptocurrency(currency) ? 8 : 2;\n\nconst getDecimalPlaces = (currency) => (\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency] ? getPropertyValue(currencies_config, [currency, 'fractional_digits']) : calcDecimalPlaces(currency)\n);\n\nconst setCurrencies = (website_status) => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nconst isCryptocurrency = currency => /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || (currency in CryptoConfig.get());\n\nconst CryptoConfig = (() => {\n    let crypto_config;\n\n    const initCryptoConfig = () => ({\n        BTC: { name: localize('Bitcoin'),       min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        BCH: { name: localize('Bitcoin Cash'),  min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETH: { name: localize('Ether'),         min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETC: { name: localize('Ether Classic'), min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        LTC: { name: localize('Litecoin'),      min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        UST: { name: localize('Tether'),        min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n        USB: { name: localize('Binary Coin'),   min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nconst getMinWithdrawal = currency => (isCryptocurrency(currency) ? (getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002) : 1);\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nconst getTransferLimits = (currency, which) => {\n    const transfer_limits = getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) || getMinWithdrawal(currency);\n    const decimals        = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nconst getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [currency_from, 'transfer_between_accounts', 'fees', currency_to]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nconst getMinimumTransferFee = (currency) => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nconst getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nconst getCurrencyName = currency => getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n\nconst getMinPayout = currency => getPropertyValue(currencies_config, [currency, 'stake_default']);\n\nmodule.exports = {\n    formatMoney,\n    formatCurrency,\n    addComma,\n    getDecimalPlaces,\n    setCurrencies,\n    isCryptocurrency,\n    getCurrencyName,\n    getMinWithdrawal,\n    getTransferLimits,\n    getTransferFee,\n    getMinimumTransferFee,\n    getTextFormat,\n    getMinPayout,\n    getPaWithdrawalLimit,\n    getCurrencies: () => currencies_config,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { Link }   from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import classNames                  from 'classnames';\nimport React                       from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Icon                        from 'Assets/icon.jsx';\nimport routes                      from 'Constants/routes';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            is_routed,\n            items,\n            selected,\n        } = this.props;\n        const selected_item = items.find(item => item.label === selected.label);\n        const TabContent    = selected_item.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                { action_bar &&\n                    <div className={classNames('vertical-tab__action-bar', {\n                        [action_bar_classname]: !!action_bar_classname,\n                    })}\n                    >\n                        {\n                            action_bar.map(({ component, icon, onClick, title }) => {\n                                const Component = component;\n                                return (\n                                    component ? <Component key={title} /> : <Icon className='vertical-tab__action-bar--icon' key={title} icon={icon} onClick={onClick} />\n                                );\n                            })\n                        }\n                    </div>\n                }\n                { is_routed ?\n                    <Switch>\n                        <Redirect exact from={routes.reports} to={routes.positions} />\n                        {\n                            items.map(({ value, path, icon }) => {\n                                const Component = value;\n                                return (\n                                    <Route\n                                        key={path}\n                                        path={path}\n                                        render={() => <Component component_icon={icon} />}\n                                    />\n                                );\n                            })\n                        }\n                    </Switch>\n                    :\n                    <TabContent\n                        key={selected_item.label}\n                        className='item-id'\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames  from 'classnames';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon        from 'Assets/icon.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.header_title &&\n                    <div className='vertical-tab__header-title'>\n                        <p>{ this.props.header_title }</p>\n                    </div>\n                }\n\n                {this.props.items.map(item => {\n                    // Capitalize only the first letter of the label and make the rest lowercase\n                    const label = item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n\n                    return (\n                        this.props.is_routed ?\n                            <NavLink\n                                key={item.path}\n                                to={item.path}\n                                onClick={() => this.props.onChange(item)}\n                                className='vertical-tab__header'\n                                activeClassName={\n                                    classNames({\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <span className='vertical-tab__header__link'>{label}</span>\n                            </NavLink>\n                            :\n                            <div\n                                className={\n                                    classNames('vertical-tab__header', {\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                                key={item.label}\n                                onClick={() => this.props.onChange(item)}\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <a\n                                    key={item.label}\n                                    className='vertical-tab__header__link'\n                                >\n                                    {label}\n                                </a>\n                            </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('deriv_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('deriv_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <Icon icon='IconClose' className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import { action, flow }     from 'mobx';\nimport GTM                  from '_common/base/gtm';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { localize }         from 'App/i18n';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list) {\n                        requestLogout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: localize('You have reached the rate limit of requests per second. Please try later.') });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const authorizeAccount = (response) => {\n        client_store.responseAuthorize(response);\n        WS.subscribeBalance(ResponseHandlers.balance, true);\n        WS.sendRequest({ get_settings: 1 }, { forced: true });\n        WS.getAccountStatus();\n        WS.payoutCurrencies();\n        WS.mt5LoginList();\n        setResidence(\n            response.authorize.country ||\n            client_store.accounts[client_store.loginid].residence\n        );\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalance,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import PropTypes      from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect }    from 'Stores/connect';\nimport routes         from '../../../Constants/routes';\n\nconst Redirect = ({\n    history,\n    setVerificationCode,\n    toggleAccountSignupModal,\n}) => {\n    const url_params = new URLSearchParams(window.location.search);\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            setVerificationCode(url_params.get('code'));\n            break;\n        }\n        default: break;\n    }\n\n    // Clear URL search params and route to root (currently set to `trade`)\n    window.history.replaceState({}, document.title, '/');\n    history.push(routes.root);\n\n    return null;\n};\n\nRedirect.propTypes = {\n    history                 : PropTypes.object,\n    setVerificationCode     : PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        setVerificationCode     : client.setVerificationCode,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n    }),\n)(Redirect));\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            { error ?\n                <span className='portfolio-empty__text'>{error}</span>\n                :\n                <React.Fragment>\n                    <Icon icon='IconPositions' className='portfolio-empty__icon' />\n                    <span className='portfolio-empty__text'>{localize('No open positions')}</span>\n                </React.Fragment>\n            }\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    contract_id,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        href='javascript:;'\n        onClick={() => openContract(contract_id, true)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    children   : PropTypes.node,\n    className  : PropTypes.string,\n    contract_id: PropTypes.number,\n    onMount    : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract_trade.onMount,\n    }),\n)(ContractLink);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4BBFAB\" /><path fill=\"#FFF\" fillRule=\"nonzero\" d=\"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#E31C4B\" fillRule=\"nonzero\" /><path stroke=\"#FFF\" strokeLinecap=\"round\" d=\"M10.5 5.5l-5 5m5 0l-5-5\" /></g></svg>);","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { NavLink }         from 'react-router-dom';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport IconCheck           from 'Assets/SvgComponents/portfolio/ic-check.svg';\nimport IconCross           from 'Assets/SvgComponents/portfolio/ic-cross.svg';\nimport { localize }        from 'App/i18n';\n\nclass ResultOverlay extends React.PureComponent {\n\n    handleClick = (e) => {\n        if (this.props.is_unsupported) {\n            e.preventDefault();\n            this.props.onClick();\n        }\n    }\n\n    render() {\n        const {\n            contract_id,\n            onClickRemove,\n            result } = this.props;\n        const is_contract_won = (result === 'won');\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    in={!!(result)}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'positions-drawer-card__result--enter',\n                        enterDone: 'positions-drawer-card__result--enter-done',\n                        exit     : 'positions-drawer-card__result--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className={classNames('positions-drawer-card__result', {\n                        'positions-drawer-card__result--won' : is_contract_won,\n                        'positions-drawer-card__result--lost': !is_contract_won,\n                    })}\n                    >\n                        <span\n                            className='result__close-btn'\n                            onClick={() => onClickRemove(contract_id)}\n                        />\n                        <NavLink\n                            className='result__caption-wrapper'\n                            to={getContractPath(contract_id)}\n                            onClick={this.handleClick}\n                        >\n                            <span\n                                className={classNames('result__caption', {\n                                    'result__caption--won' : is_contract_won,\n                                    'result__caption--lost': !is_contract_won,\n                                }\n                                )}\n                            >\n                                {\n                                    (is_contract_won) ?\n                                        <React.Fragment>\n                                            {localize('won')}\n                                            <IconCheck className='result__icon' />\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            {localize('lost')}\n                                            <IconCross className='result__icon' />\n                                        </React.Fragment>\n                                }\n                            </span>\n                        </NavLink>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nResultOverlay.propTypes = {\n    contract_id              : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_same_contract_mounted: PropTypes.bool,\n    is_unsupported           : PropTypes.bool,\n    onClick                  : PropTypes.func,\n    onClickRemove            : PropTypes.func,\n    result                   : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","import classNames              from 'classnames';\nimport PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { CSSTransition }       from 'react-transition-group';\nimport ContractLink            from 'Modules/Contract/Containers/contract-link.jsx';\nimport Shortcode               from 'Modules/Reports/Helpers/shortcode';\nimport { isCryptocurrency }    from '_common/base/currency_base';\nimport { localize }            from 'App/i18n';\nimport Icon                    from 'Assets/icon.jsx';\nimport Button                  from 'App/Components/Form/button.jsx';\nimport Money                   from 'App/Components/Elements/money.jsx';\nimport { UnderlyingIcon }      from 'App/Components/Elements/underlying-icon.jsx';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport ContractTypeCell        from './contract-type-cell.jsx';\nimport ProgressSlider          from './ProgressSlider';\nimport ResultOverlay           from './result-overlay.jsx';\n\nconst PositionsDrawerCard = ({\n    active_position,\n    className,\n    contract_info,\n    currency,\n    current_tick,\n    indicative,\n    id,\n    is_dark_theme,\n    is_loading,\n    is_sell_requested,\n    is_unsupported,\n    is_valid_to_sell,\n    profit_loss,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_price,\n    status,\n    toggleUnsupportedContractModal,\n    type,\n}) => {\n    const loader_el = (\n        <div className='positions-drawer-card__content-loader'>\n            <PositionsCardLoader\n                is_dark_theme={is_dark_theme}\n                speed={2}\n            />\n        </div>\n    );\n    const contract_el = (\n        <React.Fragment>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-underlying-trade'\n            )}\n            >\n                <div className='positions-drawer-card__underlying-name'>\n                    <UnderlyingIcon market={contract_info.underlying} />\n                    <span className='positions-drawer-card__symbol'>\n                        {contract_info.display_name}\n                    </span>\n                </div>\n                <div className='positions-drawer-card__type'>\n                    <ContractTypeCell\n                        type={type}\n                        is_high_low={Shortcode.isHighLow({ shortcode: contract_info.shortcode })}\n                    />\n                </div>\n            </div>\n            {result ?\n                <div className='progress-slider--completed' />\n                :\n                <ProgressSlider\n                    is_loading={is_loading}\n                    start_time={contract_info.date_start}\n                    expiry_time={contract_info.date_expiry}\n                    current_tick={current_tick}\n                    ticks_count={contract_info.tick_count}\n                />\n            }\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-profit-payout'\n            )}\n            >\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss',\n                    'positions-drawer-card__profit-loss-label',\n                )}\n                >\n                    {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__indicative',\n                    'positions-drawer-card__indicative-label',\n                )}\n                >\n                    {!result ? localize('Indicative price:') : localize('Payout:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss', {\n                        'positions-drawer-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                        'positions-drawer-card__profit-loss--negative' : (profit_loss < 0),\n                        'positions-drawer-card__profit-loss--positive' : (profit_loss > 0),\n                    })}\n                >\n                    <Money amount={Math.abs(profit_loss)} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n                <div className='positions-drawer-card__indicative'>\n                    <Money amount={sell_price || indicative} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-price-payout',\n            )}\n            >\n                <div className='positions-drawer-card__purchase-price'>\n                    <span className='positions-drawer-card__purchase-label'>\n                        {localize('Purchase price:')}\n                    </span>\n                    <span className='positions-drawer-card__purchase-value'>\n                        <Money amount={contract_info.buy_price} currency={currency} />\n                    </span>\n                </div>\n                <div className='positions-drawer-card__payout-price'>\n                    <span className='positions-drawer-card__payout-label'>\n                        {localize('Potential payout:')}\n                    </span>\n                    <span className='positions-drawer-card__payout-value'>\n                        {contract_info.payout ?\n                            <Money amount={contract_info.payout} currency={currency} />\n                            :\n                            <strong>-</strong>\n                        }\n                    </span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                contract_id={id}\n                is_unsupported={is_unsupported}\n                has_same_contract_mounted={id === parseInt(active_position)}\n                onClickRemove={onClickRemove}\n                onClick={() => toggleUnsupportedContractModal(true)}\n                result={result}\n            />\n            {is_unsupported ?\n                <div\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    onClick={() => toggleUnsupportedContractModal(true)}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </div>\n                :\n                <ContractLink\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    contract_id={id}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </ContractLink>\n            }\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--green',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className                     : PropTypes.string,\n    contract_info                 : PropTypes.object,\n    currency                      : PropTypes.string,\n    current_tick                  : PropTypes.number,\n    duration                      : PropTypes.number,\n    duration_unit                 : PropTypes.string,\n    exit_spot                     : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id                            : PropTypes.number,\n    indicative                    : PropTypes.number,\n    is_dark_theme                 : PropTypes.bool,\n    is_loading                    : PropTypes.bool,\n    is_sell_requested             : PropTypes.bool,\n    is_unsupported                : PropTypes.bool,\n    is_valid_to_sell              : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove                 : PropTypes.func,\n    onClickSell                   : PropTypes.func,\n    profit_loss                   : PropTypes.number,\n    result                        : PropTypes.string,\n    sell_time                     : PropTypes.number,\n    status                        : PropTypes.string,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type                          : PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { NavLink }                    from 'react-router-dom';\nimport { TransitionGroup,\n    CSSTransition }                   from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from 'App/i18n';\nimport Icon                           from 'Assets/icon.jsx';\nimport routes                         from 'Constants/routes';\nimport EmptyPortfolioMessage          from 'Modules/Reports/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            all_positions,\n            active_contract_id,\n            error,\n            currency,\n            is_contract_mode,\n            is_dark_theme,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            toggleUnsupportedContractModal,\n        } = this.props;\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {all_positions.slice(0, 5).map((portfolio_position) => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear   : 'positions-drawer-card__wrapper--enter',\n                                enter    : 'positions-drawer-card__wrapper--enter',\n                                enterDone: 'positions-drawer-card__wrapper--enter-done',\n                                exit     : 'positions-drawer-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsDrawerCard\n                                active_position={active_contract_id}\n                                is_dark_theme={is_dark_theme}\n                                onClickSell={onClickSell}\n                                onClickRemove={onClickRemove}\n                                openContract={openContract}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Recent Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IconMinimize' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {(is_empty || error) ? <EmptyPortfolioMessage error={error} />  : body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink className='btn btn--link btn--alternate' to={routes.reports}>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.number,\n    all_positions         : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_theme         : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency                      : client.currency,\n        active_contract_id            : modules.contract_trade.contract_id,\n        all_positions                 : modules.portfolio.all_positions,\n        error                         : modules.portfolio.error,\n        is_contract_mode              : modules.smart_chart.is_contract_mode,\n        is_empty                      : modules.portfolio.is_empty,\n        is_loading                    : modules.portfolio.is_loading,\n        onClickSell                   : modules.portfolio.onClickSell,\n        onClickRemove                 : modules.portfolio.removePositionById,\n        openContract                  : modules.contract_trade.onMount,\n        onMount                       : modules.portfolio.onMount,\n        onUnmount                     : modules.portfolio.onUnmount,\n        is_dark_theme                 : ui.is_dark_mode_on,\n        is_positions_drawer_on        : ui.is_positions_drawer_on,\n        toggleDrawer                  : ui.togglePositionsDrawer,\n        toggleUnsupportedContractModal: ui.toggleUnsupportedContractModal,\n    })\n)(PositionsDrawer);\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Localize     from './localize.jsx';\nimport Button       from '../Form/button.jsx';\n\nconst toggleFade = ({ node, opacity, direction, color }) => {\n    const sub_or_add = direction === -1 && opacity > 0.1 ? -1 : 1;\n    let reduction = 0.05;\n    if (opacity < 0.3 && opacity > 0.1) {\n        reduction = 0.01;\n    }\n    const new_opacity = parseFloat(Number(opacity + (sub_or_add * reduction)).toFixed(2));\n\n    node.style.backgroundColor = color.replace(`${opacity})`, `${Number(new_opacity).toFixed(2)})`);\n\n    const stopId = requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity  : new_opacity,\n            direction: sub_or_add,\n            color    : node.style.backgroundColor,\n        },\n    ));\n    if (new_opacity >= 1) {\n        cancelAnimationFrame(stopId);\n        // Set the initial value to follow CSS\n        node.querySelectorAll('div')\n            .forEach(element => {\n                element.style.backgroundColor = '';\n            });\n        node.style.backgroundColor = '';\n    }\n};\n\nconst startAnimation = (node) => {\n    const children_background_color = getComputedStyle(node.firstElementChild).getPropertyValue('background-color');\n    const converted_rgba = children_background_color.startsWith('rgba') ?\n        children_background_color :\n        `rgba(${children_background_color\n            .replace('rgb(', '')\n            .replace(')', '')\n            .split(', ')\n            .join(',')},1)`;\n\n    // Set initial value for individual rows\n    node.querySelectorAll('div')\n        .forEach(element => {\n            element.style.backgroundColor = 'transparent';\n        });\n    node.style.backgroundColor = converted_rgba; // compensate for removal background of individual rows\n\n    const direction            = -1; // lower the opacity\n    requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity: 1,\n            direction,\n            color  : converted_rgba,\n        },\n    ));\n};\n\n/**\n * Handle animation for dropdown, this is imperative, with DOM manipulation.\n */\nconst onClick = () => {\n    const dropdown = document.querySelector('.cq-menu-dropdown');\n    if (dropdown.classList.contains('open')) return;\n    document.querySelector('.cq-symbol-select-btn').click();\n    const left_panel = document.querySelector('.cq-filter-panel');\n    left_panel.querySelector('.ic-volidx').parentNode.click();\n\n    const node = document\n        .querySelector('.category-volidx')\n        .querySelector('.category-content');\n    setTimeout(startAnimation.bind(this, node), 600);\n};\n\nconst MarketIsClosedOverlay = () => (\n    <div className='market-is-closed-overlay'>\n        <p><Localize i18n_default_text='Market is closed.' /></p>\n        <p><Localize i18n_default_text='Try Volatility Indices which simulate real-world market volatility and are open 24/7.' /></p>\n        <Button\n            className='market-is-closed-overlay__button'\n            classNameSpan='market-is-closed-overlay__button--span'\n            onClick={onClick}\n            text={localize('Try Volatility Indices')}\n        />\n    </div>\n);\n\nexport default MarketIsClosedOverlay;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled, is_blurred }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--blur': is_contract_visible || is_blurred,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport Lazy        from 'App/Containers/Lazy';\nimport ScreenLarge from './screen-large.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_blurred,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <Lazy\n            ctor={() => import(/* webpackChunkName: \"screen-small\" */'./screen-small.jsx')}\n            should_load={is_mobile}\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n            is_blurred={is_blurred}\n        />\n);\n\nFormLayout.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ChartLoader           from 'App/Components/Elements/chart-loader.jsx';\nimport UILoader              from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }           from 'Stores/connect';\nimport PositionsDrawer       from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Lazy                  from 'App/Containers/Lazy';\n// import Test                  from './test.jsx';\nimport FormLayout            from '../Components/Form/form-layout.jsx';\nimport { isDigitTradeType }  from '../Helpers/digits';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.showPositions();\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.hidePositions();\n        if (this.props.is_contract_mode) {\n            this.props.onCloseContract();\n        }\n        this.props.onUnmount();\n    }\n\n    render() {\n        const form_wrapper_class           = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_bottom_widgets   = this.props.is_digit_contract && this.props.is_contract_mode;\n        const should_show_last_digit_stats = isDigitTradeType(this.props.contract_type) && !this.props.is_contract_mode;\n        const is_chart_visible             = (this.props.is_chart_loading || !this.props.is_chart_ready);\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <PositionsDrawer />\n                <div className='chart-container'>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"notification-messages\" */'App/Containers/notification-messages.jsx')}\n                        is='notification-messages'\n                        has_progress={false}\n                        should_load={true}\n                    />\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <ChartLoader is_visible={is_chart_visible} />\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                chart_type={this.props.chart_type}\n                                Digits={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"digits\" */'Modules/Contract/Components/Digits')}\n                                        should_load={this.props.is_digit_contract}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        digits_info={this.props.digits_info}\n                                        display_status={this.props.display_status}\n                                        is_digit_contract={this.props.is_digit_contract}\n                                        is_ended={this.props.is_ended}\n                                    />\n                                }\n                                InfoBox={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"info-box\" */'Modules/Contract/Components/InfoBox')}\n                                        should_load={true}\n                                        has_progress={false}\n                                        is='InfoBox'\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        error_message={this.props.error_message}\n                                        is_contract_mode={this.props.is_contract_mode}\n                                        removeError={this.props.removeError}\n                                        onClose={this.props.onCloseContract}\n                                    />\n                                }\n                                end_epoch={this.props.end_epoch}\n                                granularity={this.props.granularity}\n                                is_trade_page\n                                is_static_chart={this.props.is_static_chart}\n                                onSymbolChange={this.props.onSymbolChange}\n                                scroll_to_epoch={this.props.scroll_to_epoch}\n                                scroll_to_offset={this.props.scroll_to_offset}\n                                start_epoch={this.props.start_epoch}\n                                should_show_bottom_widgets={should_show_bottom_widgets}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                symbol={this.props.symbol}\n                            />\n                        </React.Suspense>\n                    }\n                    {/* Remove Test component for debugging below for production release */}\n                    {/* <Test /> */}\n                </div>\n                <div\n                    className={form_wrapper_class}\n                    onClick={this.props.is_contract_mode ? () => {\n                        this.props.onCloseContract();\n                    } : null}\n                    style={{ cursor: this.props.is_contract_mode ? 'pointer' : 'initial' }}\n                >\n                    { this.props.is_market_closed && <MarketIsClosedOverlay />}\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={this.props.is_contract_mode}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                        is_blurred={this.props.is_market_closed}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id         : PropTypes.string,\n    chart_type       : PropTypes.string,\n    contract_info    : PropTypes.object,\n    contract_type    : PropTypes.string,\n    digits_info      : PropTypes.object,\n    display_status   : PropTypes.string,\n    end_epoch        : PropTypes.number,\n    granularity      : PropTypes.number,\n    hidePositions    : PropTypes.func,\n    is_chart_loading : PropTypes.bool,\n    is_chart_ready   : PropTypes.bool,\n    is_contract_mode : PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended         : PropTypes.bool,\n    is_market_closed : PropTypes.bool,\n    is_mobile        : PropTypes.bool,\n    is_static_chart  : PropTypes.bool,\n    is_trade_enabled : PropTypes.bool,\n    onClickNewTrade  : PropTypes.func,\n    onCloseContract  : PropTypes.func,\n    onMount          : PropTypes.func,\n    onSymbolChange   : PropTypes.func,\n    onUnmount        : PropTypes.func,\n    purchase_info    : PropTypes.object,\n    scroll_to_epoch  : PropTypes.number,\n    scroll_to_offset : PropTypes.number,\n    showPositions    : PropTypes.func,\n    start_epoch      : PropTypes.number,\n    symbol           : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_info                      : modules.contract_trade.contract_info,\n        digits_info                        : modules.contract_trade.digits_info,\n        display_status                     : modules.contract_trade.display_status,\n        error_message                      : modules.contract_trade.error_message,\n        is_ended                           : modules.contract_trade.is_ended,\n        is_digit_contract                  : modules.contract_trade.is_digit_contract,\n        onCloseContract                    : modules.contract_trade.onCloseContract,\n        removeError                        : modules.contract_trade.removeErrorMessage,\n        chart_id                           : modules.smart_chart.chart_id,\n        chart_type                         : modules.smart_chart.chart_type,\n        scroll_to_epoch                    : modules.smart_chart.scroll_to_left_epoch,\n        scroll_to_offset                   : modules.smart_chart.scroll_to_left_epoch_offset,\n        granularity                        : modules.smart_chart.granularity,\n        end_epoch                          : modules.smart_chart.end_epoch,\n        start_epoch                        : modules.smart_chart.start_epoch,\n        is_chart_loading                   : modules.smart_chart.is_chart_loading,\n        is_chart_ready                     : modules.smart_chart.is_chart_ready,\n        is_contract_mode                   : modules.smart_chart.is_contract_mode,\n        is_static_chart                    : modules.smart_chart.is_static_chart,\n        contract_type                      : modules.trade.contract_type,\n        is_market_closed                   : modules.trade.is_market_closed,\n        is_trade_enabled                   : modules.trade.is_trade_enabled,\n        onClickNewTrade                    : modules.trade.onClickNewTrade,\n        onMount                            : modules.trade.onMount,\n        onSymbolChange                     : modules.trade.onChange,\n        onUnmount                          : modules.trade.onUnmount,\n        purchase_info                      : modules.trade.purchase_info,\n        symbol                             : modules.trade.symbol,\n        hidePositions                      : ui.hidePositionsFooterToggle,\n        showPositions                      : ui.showPositionsFooterToggle,\n        has_only_forward_starting_contracts: ui.has_only_forward_starting_contracts,\n        is_mobile                          : ui.is_mobile,\n        setHasOnlyForwardingContracts      : ui.setHasOnlyForwardingContracts,\n    })\n)(Trade);\n","import { lazy }                       from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { Redirect }                   from 'App/Containers/Redirect';\nimport { localize }                   from 'App/i18n';\nimport { routes }                     from 'Constants';\n\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\n\n// Reports Routes\nconst Reports       = lazy(() => import(/* webpackChunkName: \"reports\" */        'Modules/Reports'));\nconst OpenPositions = lazy(() => import(/* webpackChunkName: \"open_positions\" */ 'Modules/Reports/Containers/open-positions.jsx'));\nconst ProfitTable   = lazy(() => import(/* webpackChunkName: \"profit_table\" */   'Modules/Reports/Containers/profit-table.jsx'));\nconst Statement     = lazy(() => import(/* webpackChunkName: \"statement\" */      'Modules/Reports/Containers/statement.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: RouterRedirect,  title: '',                            to: routes.trade },\n    {\n        path            : routes.reports,\n        component       : Reports,\n        is_authenticated: true,\n        title           : localize('Reports'),\n        routes          : [\n            { path: routes.positions, component: OpenPositions, title: localize('Open Positions'), icon_component: 'IconOpenPositions', default: true },\n            { path: routes.profit,    component: ProfitTable,   title: localize('Profit Table'),   icon_component: 'IconProfitTable' },\n            { path: routes.statement, component: Statement,     title: localize('Statement'),      icon_component: 'IconStatement' },\n        ],\n    },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),    exact: true },\n    { path: routes.error404,  component: Page404,         title: localize('Error 404') },\n    { path: routes.redirect,  component: Redirect,        title: localize('Redirect') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { urlFor }   from '_common/url';\nimport PageError    from 'Modules/PageError';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    onLogin,\n    onSignup,\n    page_title,\n}) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[ <br key={0} /> ]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' href='javascript:;' onClick={onLogin} />,\n                    <a key={1} className='link' href='javascript:;' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin   : PropTypes.func,\n    onSignup  : PropTypes.func,\n    page_title: PropTypes.string,\n};\n\n// TODO - Remove this default setting once sign-up has been integrated to app 2\nLoginPrompt.defaultProps = {\n    onSignup: () => { window.open(urlFor('new-account', undefined, undefined, true)); },\n};\n\nexport default LoginPrompt;\n\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket        from '_common/base/socket_base';\nimport Language            from '_common/language';\nimport routes              from 'Constants/routes';\nimport { connect }         from 'Stores/connect';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt onLogin={redirectToLogin} page_title={route.title} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        Language.setCookie();\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        BinarySocket.wait('website_status').then(() => {\n            route.pushDataLayer({ event: 'page_load' });\n        });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst PageError = ({\n    buttonOnClick,\n    error_code,\n    messages,\n    header,\n    redirect_label,\n    redirect_url,\n}) => (\n    <div className='page-error__container'>\n        <div className='page-error__box'>\n            <h3 className='page-error__header'>\n                {header}\n            </h3>\n            <div className='page-error__message-wrapper'>\n                <span className='page-error__message'>\n                    { messages.map((message, index) => (\n                        message.has_html ?\n                            <p key={index} dangerouslySetInnerHTML={{ __html: message.message }} />\n                            :\n                            <p key={index}>{ message }</p>\n                    ))}\n                    { error_code &&\n                    <React.Fragment>\n                        <br />\n                        <p className='page-error__code'><Localize i18n_default_text={'Error Code: {{error_code}}'} values={{ error_code }} /></p>\n                    </React.Fragment>\n                    }\n                </span>\n            </div>\n            { redirect_label &&\n            <ButtonLink\n                className='page-error__btn btn--primary btn--primary--orange'\n                to={redirect_url}\n                onClick={buttonOnClick}\n            >\n                <span className='page-error__btn-text btn__text'>\n                    {redirect_label}\n                </span>\n            </ButtonLink>\n            }\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick : PropTypes.func,\n    error_code    : PropTypes.number,\n    header        : PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    messages      : PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url  : PropTypes.string,\n};\n\nexport default PageError;\n","const digitTypesMap = [ 'even_odd', 'match_diff', 'over_under' ];\n\nexport const isDigitTradeType = (contract_type) => digitTypesMap.includes(contract_type);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { Trans }        from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components }) => (\n    <Trans defaults={i18n_default_text} values={values} components={components} />\n);\n\nLocalize.propTypes = {\n    components       : PropTypes.arrayOf(PropTypes.node),\n    i18n_default_text: PropTypes.string,\n    values           : PropTypes.object,\n};\n\nexport default Localize;\n","const Shortcode = (() => {\n    const extractInfoFromShortcode = (shortcode) => {\n        const info_from_shortcode = {\n            category  : '',\n            underlying: '',\n            barrier_1 : '',\n        };\n\n        const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'); // Used to get market name from shortcode\n        const extracted = pattern.exec(shortcode);\n        if (extracted !== null) {\n            info_from_shortcode.category   = extracted[1].toLowerCase();\n            info_from_shortcode.underlying = extracted[2];\n\n            if (/^(CALL|PUT)$/i.test(info_from_shortcode.category)) {\n                info_from_shortcode.barrier_1 = shortcode.split('_').slice(-2)[0];\n            }\n        }\n\n        return info_from_shortcode;\n    };\n\n    const isHighLow = ({ shortcode = '', shortcode_info = '' }) => {\n        const info_from_shortcode = shortcode ? extractInfoFromShortcode(shortcode) : shortcode_info;\n        return (info_from_shortcode && info_from_shortcode.barrier_1) ? !/^S0P$/.test(info_from_shortcode.barrier_1) : false;\n    };\n\n    return {\n        extractInfoFromShortcode,\n        isHighLow,\n    };\n})();\n\nmodule.exports = Shortcode;\n","export const website_domain = 'Deriv.app';\nexport const website_name   = 'Deriv';\nexport const default_title  = website_name;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon              from 'Assets/icon.jsx';\n\nclass Tooltip extends React.PureComponent {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message || undefined}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <Icon\n                            icon='IconInfoOutline'\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <Icon\n                            icon='IconInfoBlue'\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <Icon icon='IconQuestion' className={icon_class} />}\n                {icon === 'dot'      && <Icon icon='IconRedDot' className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\nimport Button    from '../button.jsx';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconPlus' className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconMinus' className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    min_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_hj_whitelisted,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-hj-whitelist={is_hj_whitelisted}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport Tooltip                   from 'App/Components/Elements/tooltip.jsx';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\n\nclass InputField extends React.Component {\n    render () {\n        const {\n            checked,\n            className,\n            classNameInlinePrefix,\n            classNameInput,\n            classNamePrefix,\n            currency,\n            data_tip,\n            data_value,\n            error_messages,\n            fractional_digits,\n            helper,\n            id,\n            inline_prefix,\n            is_autocomplete_disabled,\n            is_disabled,\n            is_float,\n            is_hj_whitelisted = false,\n            is_incrementable,\n            is_negative_disabled,\n            is_read_only = false,\n            is_signed = false,\n            is_unit_at_right = false,\n            label,\n            max_length,\n            max_value,\n            min_value,\n            name,\n            onChange,\n            onClick,\n            placeholder,\n            prefix,\n            required,\n            type,\n            unit,\n            value,\n        } = this.props;\n        const Icon = this.props.icon;\n        const has_error       = error_messages && !!error_messages.length;\n        let has_valid_length  = true;\n        const max_is_disabled = max_value && +value >= +max_value;\n        const min_is_disabled = min_value && +value <= +min_value;\n\n        const changeValue = (e, callback) => {\n            if (unit) {\n                e.target.value = e.target.value.replace(unit, '').trim();\n            }\n\n            if (e.target.value === value && type !== 'checkbox') {\n                return;\n            }\n\n            if (type === 'number' || type === 'tel') {\n                const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n                const signed_regex = is_signed ? '^([+-.0-9])' : '^';\n\n                const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                    .test(e.target.value);\n\n                const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                    .test(e.target.value);\n                // This regex check whether there is any zero at the end of fractional part or not.\n                const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                    .test(e.target.value);\n\n                const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n                if (max_length && fractional_digits) {\n                    has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                        .test(e.target.value);\n                }\n\n                if (((is_number) || is_empty) && has_valid_length) {\n                    e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                        ? e.target.value\n                        : +e.target.value;\n                } else if (!is_not_completed_number) {\n                    e.target.value = value;\n                    return;\n                }\n            }\n\n            onChange(e);\n            if (callback) {\n                callback(e);\n            }\n        };\n\n        const getDecimals = (val) => {\n            const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n            return array_value && array_value.length > 1 ? array_value[1].length : 0;\n        };\n\n        const incrementValue = () => {\n            if (max_is_disabled) return;\n            let increment_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n            }\n            onChange({ target: { value: increment_value, name } });\n        };\n\n        const calculateDecrementedValue = () => {\n            let decrement_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n                decrement_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n            }\n            return decrement_value;\n        };\n\n        const decrementValue = () => {\n            if (!value || min_is_disabled) return;\n            const decrement_value = calculateDecrementedValue();\n            if (is_negative_disabled && decrement_value < 0) return;\n            onChange({ target: { value: decrement_value, name } });\n        };\n\n        const onKeyPressed = (e) => {\n            if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n            if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n        };\n\n        let display_value = value;\n\n        if (unit) {\n            display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n        }\n\n        const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n        const input =\n            <Input\n                changeValue={changeValue}\n                checked={checked}\n                className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n                classNameInlinePrefix={classNameInlinePrefix}\n                data_tip={data_tip}\n                data_value={data_value}\n                display_value={display_value}\n                fractional_digits={fractional_digits}\n                has_error={has_error}\n                id={id}\n                inline_prefix={inline_prefix}\n                is_autocomplete_disabled={is_autocomplete_disabled}\n                is_disabled={is_disabled}\n                is_hj_whitelisted={is_hj_whitelisted}\n                is_incrementable={is_increment_input}\n                is_read_only={is_read_only}\n                max_length={max_length}\n                name={name}\n                onClick={onClick}\n                onKeyPressed={onKeyPressed}\n                placeholder={placeholder}\n                required={required}\n                type={type}\n            />;\n\n        const increment_buttons =\n            <IncrementButtons\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />;\n\n        const input_tooltip =\n            <Tooltip\n                className={classNames('', { 'tooltip--with-label': label })}\n                alignment='left'\n                message={has_error ? error_messages[0] : null}\n                has_error={has_error}\n            >\n                {!!label &&\n                <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!helper &&\n                <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ?\n                    <div className='input-wrapper'>\n                        {increment_buttons}\n                        {input}\n                    </div>\n                    :\n                    input\n                }\n            </Tooltip>;\n\n        return (\n            <React.Fragment>\n                {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n                }\n                <div\n                    className={classNames('input-field', className)}\n                >\n                    {this.props.icon &&\n                    <Icon onClick={onClick} />\n                    }\n                    {input_tooltip}\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    classNameInput       : PropTypes.string,\n    classNamePrefix      : PropTypes.string,\n    currency             : PropTypes.string,\n    error_messages       : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits    : PropTypes.number,\n    helper               : PropTypes.string,\n    icon                 : PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n    ]),\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames                      from 'classnames';\nimport PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        if (props.is_routed) {\n            const applicable_routes = props.list.filter(item => (\n                item.path === props.current_path || item.default\n            ));\n            const selected = applicable_routes.length > 1\n                ? applicable_routes[applicable_routes.length - 1]\n                : applicable_routes[0];\n\n            this.state = {\n                selected,\n            };\n        } else {\n            this.state = {\n                selected: props.list[0],\n            };\n        }\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className={classNames('vertical-tab', {\n                    'vertical-tab--full-screen': this.props.is_full_width,\n                })}\n            >\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                    header_title={this.props.header_title}\n                />\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    items={this.props.list}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path        : PropTypes.string,\n    header_title        : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    is_routed           : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n};\n\nexport default VerticalTab;\n","import classNames from 'classnames';\nimport React      from 'react';\n\nconst UnderlyingIcon = ({ market }) => (\n    <div\n        className={classNames(\n            'icons-underlying',\n            `icons-underlying__ic-${market ? market.toUpperCase() : 'unknown'}`\n        )}\n    />\n);\n\nexport { UnderlyingIcon };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: current_tick.toString() }} />\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { connect }           from 'Stores/connect';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport { getTimePercentage } from '../helpers';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    is_loading,\n    start_time,\n    expiry_time,\n    server_time,\n    ticks_count,\n}) => {\n    const percentage = getTimePercentage(server_time, start_time, expiry_time);\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={expiry_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className   : PropTypes.string,\n    current_tick: PropTypes.number,\n    expiry_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_loading : PropTypes.bool,\n    server_time: PropTypes.object,\n    start_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ProgressSlider);\n","const Cookies          = require('js-cookie');\nconst getPropertyValue = require('./utility').getPropertyValue;\nconst isEmptyObject    = require('./utility').isEmptyObject;\nconst isProduction     = require('../config').isProduction;\n\nconst getObject = function (key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function (key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) { /* do nothing */ }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = (storage) => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function (storage) {\n    this.storage           = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') { // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) { this.storage.removeItem(key); },\n    clear()     { this.storage.clear(); },\n};\n\nconst InScriptStore = function (object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach((key) => { delete this.store[key]; });\n    },\n    clear()   { this.store = {}; },\n    has(key)  { return this.get(key) !== undefined; },\n    keys()    { return Object.keys(this.store); },\n    call(key) { if (typeof this.get(key) === 'function') this.get(key)(); },\n};\n\nconst State     = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function (pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.set('response', {});\n\nconst CookieStorage = function (cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain      = cookie_domain || (isProduction() ? `.${hostname.split('.').slice(-2).join('.')}` : hostname);\n    this.path        = '/';\n    this.expires     = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value       = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path   : this.path,\n            domain : this.domain,\n            secure : !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path   : this.path,\n            domain : this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path  : this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain.split('.').slice(-2).join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach((c) => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore,\n    LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","import moment            from 'moment';\nimport { isEmptyObject } from '_common/utility';\nimport ServerTime        from '_common/base/server_time';\n\nexport const getChartConfig = (\n    contract_info,\n    is_digit_contract,\n    is_from_purchase,\n) => {\n    if (isEmptyObject(contract_info)) return null;\n    const start       = contract_info.date_start;\n    const end         = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type  = getChartType(start, end || null);\n\n    return {\n        chart_type                : contract_info.tick_count ? 'mountain' : chart_type,\n        granularity               : contract_info.tick_count ? 0 : granularity,\n        end_epoch                 : end,\n        start_epoch               : !is_from_purchase ? start : null,\n        scroll_to_epoch           : contract_info.purchase_time,\n        should_show_bottom_widgets: is_digit_contract,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = (time) => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return (duration <= 1) ? 'mountain' : 'candle';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const getLastTickFromTickStream = (tick_stream = []) => (\n    tick_stream[tick_stream.length - 1] || {}\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n\nexport const getEndTime = (contract_info) => {\n    const {\n        exit_tick_time,\n        date_expiry,\n        is_expired,\n        is_path_dependent,\n        sell_time,\n        tick_count: is_tick_contract,\n    } = contract_info;\n\n    if (!is_expired && !isUserSold(contract_info)) return undefined;\n\n    if (isUserSold(contract_info)) {\n        return (sell_time > date_expiry) ?\n            date_expiry : sell_time;\n    } else if (!is_tick_contract && (sell_time > date_expiry)) {\n        return date_expiry;\n    }\n\n    return (date_expiry > exit_tick_time && !(+is_path_dependent)) ? date_expiry : exit_tick_time;\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from 'App/i18n';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const has_contracts = getPropertyValue(r, ['contracts_for']);\n        has_only_forward_starting_contracts = has_contracts && !r.contracts_for.available.find((contract) => contract.start_type !== 'forward');\n        if (!has_contracts || has_only_forward_starting_contracts) return;\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj) => (\n        moment_obj.minute((Math.ceil(moment_obj.minute() / 5) * 5))\n    );\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n\nexport default ContractType;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport Label             from 'App/Components/Elements/Label/label.jsx';\nimport Localize          from 'App/Components/Elements/localize.jsx';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { connect }       from 'Stores/connect';\n\nconst Description = ({ currency, is_virtual }) => (\n    is_virtual ?\n        <Localize i18n_default_text='Practice wallet' />\n        :\n        <Localize i18n_default_text='{{currency}} wallet' values={{ currency: currency.toUpperCase() }} />\n\n);\n\nconst WalletInformation = ({\n    currency,\n    balance,\n    has_description,\n    has_loginid,\n    is_virtual,\n    is_website_status_ready,\n    loginid,\n}) => {\n    return (\n        <div className='account-wallet'>\n            {!is_virtual && <Icon icon='IconAccountsCurrency' type={currency.toLowerCase()} />}\n            {is_virtual && <Icon icon='IconDemo' />}\n            <span className='description'>\n                { has_description ?\n                    <Description currency={currency} is_virtual={is_virtual} />\n                    :\n                    <span className='description__currency'>{currency.toUpperCase()}</span>\n                }\n            </span>\n            {has_loginid && <span className='current-loginid'>{loginid}</span>}\n            {is_website_status_ready &&\n            <Label mode={`${is_virtual ? 'warn-invert' : 'success-invert'}`} size='large'>\n                <Money amount={balance} currency={currency} />\n            </Label>\n            }\n            {!is_website_status_ready && <div />}\n        </div>\n    );\n};\n\nWalletInformation.propTypes = {\n    has_description: PropTypes.bool,\n    has_loginid    : PropTypes.bool,\n};\n\nexport default connect(({ client }) => ({\n    balance                : client.balance,\n    currency               : client.currency,\n    is_virtual             : client.is_virtual,\n    is_website_status_ready: client.is_website_status_ready,\n    loginid                : client.loginid,\n}))(WalletInformation);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst available_modes = [\n    'default',\n    'success',\n    'warn',\n    'danger',\n    'info',\n    'success-invert',\n    'warn-invert',\n];\n\nconst available_sizes = [\n    'regular',\n    'large',\n];\n\nconst Label = ({ mode, children, size = 'regular' }) => {\n    const type = available_modes.some(m => m === mode) ? mode : 'default';\n    const scale = available_sizes.some(s => s === size) ? size : 'regular';\n\n    return (\n        <span className={classNames('label', {\n            [`label--${scale}`]: scale,\n            [`label--${type}`] : type,\n        })}\n        >{children}\n        </span>\n    );\n};\nLabel.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    mode: PropTypes.oneOf(available_modes),\n};\nexport default Label;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst ChartLoader = ({ is_visible }) => (\n    is_visible &&\n    <div className='chart-container__loader'>\n        <Loading theme='chart-loader' />\n    </div>\n);\n\nChartLoader.propTypes = {\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import React from 'react';\n\nconst Loading = ({ is_invisible, theme, id }) => (\n    <div id={id} className={`barspinner barspinner--${ theme || 'dark'}${is_invisible ? ' invisible' : ''}`}>\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport Icon                       from 'Assets/icon.jsx';\n\nconst ContractTypeCell = ({ type, is_high_low }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <Icon\n                icon='IconTradeType'\n                type={(is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase()}\n                className='category-type'\n            />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay(type, is_high_low) || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport { localize } from 'App/i18n';\n\nconst FooterIcon = (use_icon) => use_icon || 'IconCalendarToday';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n    use_icon,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <Icon\n                        icon={FooterIcon(use_icon)}\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n    use_icon           : PropTypes.string,\n};\n\nexport default CalendarFooter;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Highlight = ({ left, width }) => {\n    const border_radius_size = '4px';\n    const left_offset        = (left < 110) ? 0 : left;\n    const width_offset       = (width < 110) ? 111 : width;\n    const highlight_style = {\n        width                    : width_offset,\n        left                     : 0,\n        transform                : `translate3d(${left_offset}px, 0, 0)`,\n        'borderTopLeftRadius'    : (left_offset === 0) ? border_radius_size : 0,\n        'borderTopRightRadius'   : (left_offset === 0) ? 0 : border_radius_size ,\n        'borderBottomLeftRadius' : (left_offset === 0) ? border_radius_size  : 0,\n        'borderBottomRightRadius': (left_offset === 0) ? 0 : border_radius_size ,\n    };\n\n    return (\n        <span style={highlight_style} className='button-menu--highlight' />\n    );\n};\n\nHighlight.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { Highlight };\n","import classnames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { Highlight } from './button-highlight.jsx';\n\nclass HighlightWrapper extends React.PureComponent {\n    state = {\n        left : 0,\n        width: 0,\n    }\n\n    componentDidMount() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (!this.node) return;\n        this.updateHighlightPosition(active_button_el);\n    }\n\n    componentDidUpdate() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (active_button_el) {\n            this.updateHighlightPosition(active_button_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.resetHighlight(); // clear highlight when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        this.resetHighlight();\n    }\n\n    onClick = (e, buttonClick) => {\n        if (!e.target) return;\n        this.updateHighlightPosition(e.target.closest('button'));\n        if (typeof buttonClick  === 'function') {\n            buttonClick();\n        }\n    };\n\n    resetHighlight = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateHighlightPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('button-menu__wrapper', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: (e) => this.onClick(e, child.props.onClick),\n                        })\n                    ))\n                }\n                <Highlight left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nHighlightWrapper.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n    timeout  : PropTypes.number,\n};\n\nexport default HighlightWrapper;\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport Button           from 'App/Components/Form/button.jsx';\nimport HighlightWrapper from './button-highlight-wrapper.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    is_animated,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={`${val.text.charAt(0).toUpperCase()}${val.text.slice(1)}`}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return (\n        <div className='button-menu'>\n            {is_animated ?\n                <HighlightWrapper>\n                    {menu}\n                </HighlightWrapper>\n                :\n                <React.Fragment>\n                    {menu}\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    is_animated: PropTypes.bool,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) =>  items.map((item, idx) => {\n    const symbol_type_class_name = item.text ? `symbols--${(item.text).toLowerCase()}` : '';\n    return (\n        <div\n            className={classNames(\n                'list__item',\n                { 'list__item--selected': value === item.value },\n                { 'list__item--disabled': item.disabled }\n            )}\n            name={name}\n            value={item.value}\n            onClick={item.disabled ? null : handleSelect.bind(null, item)}\n            key={idx}\n        >\n            {!!has_symbol && item.has_tooltip &&\n                <Popover\n                    alignment='left'\n                    message={getCurrencyName(item.value)}\n                >\n                    <span\n                        className={classNames(\n                            'symbols',\n                            'list__item-symbol',\n                            symbol_type_class_name\n                        )}\n                    />\n                </Popover>\n            }\n\n            {!!has_symbol && !item.has_tooltip &&\n                <span\n                    className={classNames(\n                        'symbols',\n                        'list__item-text',\n                        symbol_type_class_name,\n                    )}\n                />\n            }\n\n            {!has_symbol &&\n                <span className='list__item-text'>{item.text}</span>\n            }\n        </div>\n    );\n});\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport Icon              from 'Assets/icon.jsx';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <Icon\n                        icon='IconArrow'\n                        className={classNames('dropdown__select-arrow', {\n                            'dropdown__select-arrow--left': this.props.is_alignment_left,\n                        })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from 'App/i18n';\nimport { Popover }              from 'App/Components/Elements/Popover';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='allow_equals'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Popover\n                    alignment='left'\n                    classNameTarget='allow-equals__tooltip'\n                    icon='info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                    margin={113}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }                from '_common/base/currency_base';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport { connect }                    from 'Stores/connect';\nimport AllowEquals                    from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='amount'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_hj_whitelisted\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                is_animated={true}\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default connect(({ modules, client }) => ({\n    amount             : modules.trade.amount,\n    basis              : modules.trade.basis,\n    basis_list         : modules.trade.basis_list,\n    contract_start_type: modules.trade.contract_start_type,\n    contract_type      : modules.trade.contract_type,\n    contract_types_list: modules.trade.contract_types_list,\n    currencies_list    : client.currencies_list,\n    currency           : modules.trade.currency,\n    duration_unit      : modules.trade.duration_unit,\n    expiry_type        : modules.trade.expiry_type,\n    is_equal           : modules.trade.is_equal,\n    is_single_currency : client.is_single_currency,\n    onChange           : modules.trade.onChange,\n    validation_errors  : modules.trade.validation_errors,\n}))(Amount);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/InputField';\nimport { connect }  from 'Stores/connect';\nimport { localize } from 'App/i18n';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                {barrier_1}\n            </div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n\n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <Icon icon='IconBarrierUp'   className='trade-container__barriers--up' />\n                        <Icon icon='IconBarrierDown' className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(({ modules }) => (\n    {\n        barrier_1        : modules.trade.barrier_1,\n        barrier_2        : modules.trade.barrier_2,\n        barrier_count    : modules.trade.barrier_count,\n        onChange         : modules.trade.onChange,\n        validation_errors: modules.trade.validation_errors,\n    }\n))(Barrier);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\n\nconst TickSteps = ({ max_value, min_value, value, onClick }) => {\n    const arr_ticks = [...Array((max_value - min_value) + 1).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + parseInt(min_value)) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + parseInt(min_value)) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + parseInt(min_value))}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    max_value: PropTypes.string,\n    min_value: PropTypes.string,\n    onClick  : PropTypes.func,\n    ticks    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default connect(\n    ({ modules }) => ({\n        max_value: modules.trade.duration_min_max.tick.max,\n        min_value: modules.trade.duration_min_max.tick.min,\n    })\n)(TickSteps);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    if (+value < min_value || +value > max_value) {\n        onChange({\n            target: {\n                name,\n                value: min_value,\n            },\n        });\n    }\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < +min_value) || (value > +max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={min_value}\n                    max={max_value}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps={max_value - min_value}\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${(value - min_value) * (100 / (max_value - min_value))}% ` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {min_value}\n                </span>\n                {\n                    !!value &&\n                    <span className='range-slider__caption-title'>\n                        {+value === 1 && localize('{{value}} Tick', { value })}\n                        {+value > 1 && localize('{{value}} Ticks', { value })}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {max_value}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default connect(\n    ({ modules }) => ({\n        max_value: modules.trade.duration_min_max.tick.max,\n        min_value: modules.trade.duration_min_max.tick.min,\n    })\n)(observer(RangeSlider));\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Icon                from 'Assets/icon.jsx';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <Icon icon='IconArrow' className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from 'App/i18n';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment(0).format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport Icon                 from 'Assets/icon.jsx';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from 'App/i18n';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    is_mounted = false;\n\n    componentDidMount() {\n        this.is_mounted = true;\n\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), value || 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    };\n\n    onClickOutside = (e) => {\n        if (/purchase_/ig.test(e.target.id)) {\n            return;\n        }\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    };\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    };\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    };\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    };\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    };\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    };\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        if (this.is_mounted) {\n            this.setState({\n                holidays,\n                weekends,\n            });\n        }\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                is_hj_whitelisted\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <Icon icon='IconArrow' className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <Icon\n                    icon='IconCalendar'\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <Icon\n                        icon='IconClear'\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst TradingDatePicker = ({\n    duration_d,\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const has_intraday_unit = hasIntradayDurationUnit(duration_units_list);\n    const min_duration = has_intraday_unit ? toMoment(server_time).clone() : toMoment(server_time).clone().add(duration_min_max.daily.min, 'second');\n    const moment_contract_start_date_time =\n        setTime(toMoment(min_duration), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration   = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n    const is_duration_contract = expiry_type === 'duration';\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (is_duration_contract) {\n        if (has_intraday_unit) {\n            min_date_expiry.add(1, 'day');\n        }\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    const error_messages = is_duration_contract ? validation_errors.duration : validation_errors.expiry_date;\n    const date_value = is_duration_contract ? (duration_d || '').toString() : expiry_date;\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={error_messages || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={date_value}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common, ui }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n        duration_d         : ui.duration_d,\n    })\n)(TradingDatePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            // The minute number after which the last block/interval of `Minutes` selection will be disabled\n                            const last_interval_of_hour = 52;\n                            const is_enabled = to_compare_moment.minutes() > last_interval_of_hour\n                                ? is_hour_enabled && is_minute_enabled\n                                : is_hour_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_hj_whitelisted\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={`${selected_time} GMT`}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <Icon icon='IconClock' className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute((Math.ceil(time.minute() / interval) * interval));\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    if (selected_time.isAfter(market_open_time)) {\n        return getClosestTime(selected_time, 5).format('HH:mm');\n    }\n    if (market_open_time.isAfter(server_time)) {\n        return getClosestTime(market_open_time, 5).format('HH:mm');\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime = setTime(moment_expiry_date.clone(), market_open_times.slice(-1)[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n\n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n    validation_errors,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    is_animated={true}\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                error_messages={validation_errors.duration}\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(AdvancedDuration);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n    validation_errors,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    is_animated={true}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    error_messages={validation_errors.duration}\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    validation_errors   : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(SimpleDuration);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from 'App/i18n';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    min_value,\n    max_value,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    const props = {\n        shared_input: {\n            is_hj_whitelisted: true,\n            onChange         : changeDurationValue,\n            max_value,\n            min_value,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', {\n            'trade-container__fieldset--advanced': is_advanced_duration,\n        })}\n        >\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    max_value           : PropTypes.number,\n    min_value           : PropTypes.number,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { connect }                    from 'Stores/connect';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport Duration                       from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    state = {\n        min_value: 0,\n        max_value: 0,\n    };\n\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : +new_duration_value,\n        });\n    }\n\n    advancedHasWrongExpiry = () => (this.props.is_advanced_duration\n        && this.props.expiry_type !== this.props.advanced_expiry_type);\n\n    handleEndTime = () => {\n        const symbol_has_endtime = this.props.duration_units_list.length > 1  || this.props.is_advanced_duration;\n\n        if (symbol_has_endtime) {\n            // simple duration does not have endtime\n            if (!this.props.is_advanced_duration) this.props.onChangeUiStore({ name: 'is_advanced_duration', value: true });\n\n            this.props.onChangeUiStore({ name: 'advanced_expiry_type', value: 'endtime' });\n        } else {\n            // If query string contains endtime but contract type does not e.g. digits (only ticks contracts)\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n    };\n\n    getDurationMinMaxValues = (duration_min_max, contract_expiry_type, duration_unit) => {\n        const max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n\n        return [min_value, max_value];\n    };\n\n    componentDidMount() {\n        const {\n            advanced_duration_unit,\n            advanced_expiry_type,\n            contract_expiry_type,\n            duration,\n            duration_min_max,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_unit = is_advanced_duration ? advanced_duration_unit : simple_duration_unit;\n        const current_duration = getDurationFromUnit(current_unit);\n        const [min_value, max_value] =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        this.setState({ min_value, max_value });\n\n        if (duration_unit !== current_unit) {\n            onChangeUiStore({ name: `${is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: duration_unit });\n        }\n\n        if (+duration !== +current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n\n        if (expiry_type === 'endtime') this.handleEndTime();\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (current_duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        } else if (current_duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    }\n\n    // intercept changes to contract duration and check that trade_store and ui_store are aligned.\n    componentWillReact() {\n        const {\n            advanced_expiry_type,\n            contract_expiry_type,\n            duration,\n            duration_min_max,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n        } = this.props;\n\n        const current_duration            = getDurationFromUnit(duration_unit);\n        const simple_is_not_type_duration = (!is_advanced_duration && expiry_type !== 'duration');\n        const [min_value, max_value] =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        this.setState({ min_value, max_value });\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (+duration !== +current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n    }\n\n    render() {\n        const current_duration_unit           = (this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_missing_duration_unit = (!this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4);\n\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n        }\n\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.state}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.string,\n    symbol    : PropTypes.string,\n};\n\nexport default connect(({ modules, ui }) => ({\n    advanced_duration_unit: ui.advanced_duration_unit,\n    advanced_expiry_type  : ui.advanced_expiry_type,\n    contract_expiry_type  : modules.trade.contract_expiry_type,\n    duration              : modules.trade.duration,\n    duration_unit         : modules.trade.duration_unit,\n    duration_units_list   : modules.trade.duration_units_list,\n    duration_min_max      : modules.trade.duration_min_max,\n    duration_t            : ui.duration_t,\n    expiry_date           : modules.trade.expiry_date,\n    expiry_time           : modules.trade.expiry_time,\n    expiry_type           : modules.trade.expiry_type,\n    getDurationFromUnit   : ui.getDurationFromUnit,\n    is_advanced_duration  : ui.is_advanced_duration,\n    onChange              : modules.trade.onChange,\n    onChangeUiStore       : ui.onChangeUiStore,\n    onChangeMultiple      : modules.trade.onChangeMultiple,\n    simple_duration_unit  : ui.simple_duration_unit,\n    start_date            : modules.trade.start_date,\n    market_open_times     : modules.trade.market_open_times,\n}))(DurationWrapper);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from 'App/i18n';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport { connect }    from 'Stores/connect';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default connect(({ modules }) => ({\n    last_digit: modules.trade.last_digit,\n    onChange  : modules.trade.onChange,\n}))(LastDigit);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Amount                         from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier                        from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration                       from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit                      from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { connect }                    from 'Stores/connect';\n\nclass TradeParams extends React.Component {\n    isVisible(component_key) {\n        return this.props.form_components.includes(component_key);\n    }\n\n    render () {\n        const { is_minimized } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    this.isVisible('duration') &&\n                    <Duration key={'duration'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('barrier') &&\n                    <Barrier key={'barrier'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('last_digit') &&\n                    <LastDigit key={'last_digit'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('amount') &&\n                    <Amount key={'amount'} is_minimized={is_minimized} />\n                }\n            </React.Fragment>\n        );\n    }\n}\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n};\n\nexport default connect(({ modules }) => ({\n    form_components: modules.trade.form_components,\n}))(TradeParams);\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    updateSelected: PropTypes.func,\n};\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { padLeft }         from '_common/string_util';\nimport { localize }        from 'App/i18n';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr }    from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    epochToMoment,\n    subDays,\n    subMonths,\n    toMoment }             from 'Utils/Date';\nimport { CommonPropTypes } from './types';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    hide_others,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = typeof selected_date === 'number' ? epochToMoment(selected_date).startOf('day') : toMoment(selected_date).startOf('day');\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--is-hidden'      : is_other_month && hide_others,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Popover\n                        alignment='top'\n                        classNameTarget='calendar__cell-tooltip'\n                        classNameTargetIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport { CommonPropTypes }   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport classNames                     from 'classnames';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Icon                           from 'Assets/icon.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    is_equal,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={classNames('contract-type-item', {\n                'contract-type-item--selected' : value === contract.value,\n                'contract-type-item--invisible': (contract.value === 'rise_fall' && is_equal) || (contract.value === 'rise_fall_equal' && !is_equal),\n            })}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <Icon icon='IconTradeCategory' category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <Icon icon='IconInfoOutline' />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    is_equal,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            is_equal={is_equal}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    list : MobxPropTypes.objectOrObservableObject,\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Scrollbars }     from 'tt-react-custom-scrollbars';\nimport Icon               from 'Assets/icon.jsx';\nimport Button             from 'App/Components/Form/button.jsx';\nimport { localize }       from 'App/i18n';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_dark_theme,\n    is_mobile,\n    item,\n    item_index,\n    itemList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <Icon icon='IconBack' />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__body'>\n            <div\n                className='trade-type-info-dialog__card-wrapper'\n                // total calculated below is from 258px and 16px horizontal margin set in trade-info-dialog css\n                style={{ 'transform': `translate3d(-${(274 * item_index)}px, 0, 0)`  }}\n            >\n                {\n                    itemList.map((type, idx) => (\n                        <div className='trade-type-info-dialog__card' key={idx}>\n                            <div className='trade-type-info-dialog__gif'>\n                                <Icon\n                                    icon='TradeCategoriesGIF'\n                                    category={type.value}\n                                    className='trade-type-info-dialog__gif-image'\n                                    is_dark_theme={is_dark_theme}\n                                />\n                            </div>\n                            <div className='trade-type-info-dialog__content'>\n                                <Scrollbars\n                                    autoHide\n                                    style={{ height: '100%' }}\n                                >\n                                    <Icon icon='TradeCategories' category={type.value} />\n                                </Scrollbars>\n                            </div>\n                            <div>\n                                <Button\n                                    className='btn--primary--orange trade-type-info-dialog__choose-button'\n                                    onClick={() => onSubmitButtonClick(type)}\n                                    text={localize('Choose')}\n                                />\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(itemList)} >\n                <Icon icon='IconChevronLeft' />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                <i\n                    className={classNames(\n                        'trade-type-info-navigation__circle-button',\n                        'trade-type-info-navigation__circle-button--active')}\n                    style={{ 'transform': `translate3d(${16 * item_index}px, 0, 0)` }}\n                />\n                {\n                    itemList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className='trade-type-info-navigation__circle-button'\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(itemList)} >\n                <Icon icon='IconChevronRight' />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_dark_theme        : PropTypes.bool,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    item_index           : PropTypes.number,\n    itemList             : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon                from 'Assets/icon.jsx';\nimport ContractTypeDialog  from './contract-type-dialog.jsx';\nimport ContractTypeList    from './contract-type-list.jsx';\nimport TradeTypeInfoDialog from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem   from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    state = {\n        is_dialog_open     : false,\n        is_info_dialog_open: false,\n        item               : {},\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(itemList[nextIndex]);\n        } else {\n            this.handleNavigationClick(itemList[0]);\n        }\n    };\n\n    handlePrevClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(itemList[prevIndex]);\n        } else {\n            this.handleNavigationClick(itemList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({\n                is_dialog_open     : false,\n                is_info_dialog_open: false,\n            });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getItemIndex = (curr_item, itemList) => itemList.findIndex((list_item) => list_item.value === curr_item.value);\n\n    getItemList = () => {\n        const itemList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && itemList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return itemList;\n    };\n\n    render() {\n        const { is_dark_theme, is_equal, is_mobile, list, name, value } = this.props;\n        const { is_dialog_open, is_info_dialog_open, item }             = this.state;\n        const item_index = this.getItemIndex(item, this.getItemList());\n        return (\n            <div\n                className='contract-type-widget dropdown--left'\n                ref={this.setWrapperRef}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': (is_dialog_open || is_info_dialog_open),\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <Icon\n                        icon='IconTradeCategory'\n                        category={value}\n                        className='contract-type-widget__icon-wrapper'\n                    />\n                    <span name={name} value={value}>\n                        {this.getDisplayText()}\n                    </span>\n                    <Icon\n                        icon='IconArrow'\n                        className={classNames(\n                          'contract-type-widget__select-arrow',\n                          'contract-type-widget__select-arrow--left')}\n                    />\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleVisibility}\n                    open={is_dialog_open}\n                >\n                    <ContractTypeList\n                        handleInfoClick={this.handleInfoClick}\n                        handleSelect={this.handleSelect}\n                        is_equal={is_equal}\n                        list={list}\n                        name={name}\n                        value={value}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={is_info_dialog_open}\n                    title={item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_dark_theme={is_dark_theme}\n                        is_mobile={is_mobile}\n                        item={item}\n                        item_index={item_index < 0 ? undefined : item_index}\n                        itemList={this.getItemList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    is_dark_theme,\n    is_equal,\n    is_mobile,\n    onChange,\n}) => (\n    <ContractTypeWidget\n        is_dark_theme={is_dark_theme}\n        is_equal={is_equal}\n        is_mobile={is_mobile}\n        list={contract_types_list}\n        name='contract_type'\n        onChange={onChange}\n        value={contract_type}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    onChange : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        is_equal           : modules.trade.is_equal,\n        onChange           : modules.trade.onChange,\n        is_dark_theme      : ui.is_dark_mode_on,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button\n        className={className}\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const types = {\n    danger       : 'notification--danger',\n    info         : 'notification--info',\n    success      : 'notification--success',\n    warning      : 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger       : 2,\n        warning      : 3,\n        info         : 4,\n        success      : 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport Icon        from 'Assets/icon.jsx';\nimport CloseButton from './close-button.jsx';\nimport {\n    default_delay,\n    types }        from './constants';\n\nconst Notification = ({\n    data,\n    removeNotification,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeNotification(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div className={\n            classNames('notification', types[data.type], {\n                'notification--small': (data.size === 'small'),\n            })}\n        >\n            <div className='notification__icon'>\n                { data.type === 'danger'  && <Icon icon='IconDanger' className='notification__icon-type' /> }\n                { (data.type === 'info' || data.type === 'contract_sold')\n                    && <Icon icon='IconInformation' className='notification__icon-type' /> }\n                { data.type === 'success' && <Icon icon='IconSuccess' className='notification__icon-type' /> }\n                { data.type === 'warning' && <Icon icon='IconWarning' className='notification__icon-type' /> }\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                <p className='notification__text-body'> {data.message}</p>\n            </div>\n            { data.should_hide_close_btn ? undefined : <CloseButton onClick={onClick} className='notification__close-button' />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick         : PropTypes.func,\n        delay                : PropTypes.number,\n        header               : PropTypes.string,\n        is_auto_close        : PropTypes.bool,\n        message              : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size                 : PropTypes.oneOf(['small']),\n        type                 : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotification: PropTypes.func,\n};\n\nexport default Notification;\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getLocalizedBasis } from 'Stores/Modules/Trading/Constants/contract';\nimport { localize }          from 'App/i18n';\nimport Money                 from 'App/Components/Elements/money.jsx';\nimport { Popover }           from 'App/Components/Elements/Popover';\nimport Icon                  from 'Assets/icon.jsx';\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    has_increased,\n    is_loading,\n    should_fade,\n    is_visible,\n    proposal_info,\n}) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.payout;\n            case 'payout':\n                return localized_basis.stake;\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    return (\n        <div className='trade-container__price'>\n            <div className={classNames(\n                'trade-container__price-info',\n                {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide'   : is_loading && !should_fade,\n                    'trade-container__price-info--fade'    : is_loading && should_fade,\n                })}\n            >\n                <div className='trade-container__price-info-basis'>\n                    {has_error_or_not_loaded\n                        ? stakeOrPayout()\n                        : localize('{{value}}', { value: proposal_info.obj_contract_basis.text })\n                    }\n                </div>\n                <div className='trade-container__price-info-value'>\n                    {!has_error_or_not_loaded &&\n                    <Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} />\n                    }\n                </div>\n                {is_visible &&\n                <div className='trade-container__price-info-movement'>\n                    {(!has_error_or_not_loaded && has_increased !== null) &&\n                        <Icon icon='IconPriceMove' type={has_increased ? 'profit' : 'loss'} />\n                    }\n                </div>\n                }\n            </div>\n            <Popover\n                alignment='left'\n                icon='info'\n                margin={210}\n                message={has_error_or_not_loaded ? '' : proposal_info.message }\n            />\n        </div>\n    );\n};\nContractInfo.propTypes = {\n    basis        : PropTypes.string,\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_loading   : PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames                 from 'classnames';\nimport PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from 'App/i18n';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Icon                       from 'Assets/icon.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\n\nconst PurchaseButton = ({\n    buy_info,\n    index,\n    info,\n    is_contract_mode,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_proposal_empty,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return (is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = ((is_contract_mode || is_disabled) && !is_loading) || is_proposal_empty;\n\n    return (\n        <Button\n            is_disabled={is_contract_mode || is_disabled}\n            id={`purchase_${type}`}\n            className={classNames(\n                'btn-purchase',\n                {\n                    'btn-purchase--disabled'       : is_button_disabled || !!(buy_info.error),\n                    'btn-purchase--animated--slide': is_loading && !should_fade,\n                    'btn-purchase--animated--fade' : is_loading && should_fade,\n                    'btn-purchase--swoosh'         : !!(purchased_states_arr[index]),\n                })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <React.Fragment>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <div className='btn-purchase__icon_wrapper'>\n                            <Icon\n                                icon='IconTradeType'\n                                className='btn-purchase__icon'\n                                type={getIconType()}\n                            />\n                        </div>\n                        <div className='btn-purchase__text_wrapper'>\n                            <span className='btn-purchase__text'>\n                                {(!should_fade && is_loading) ? '' : localize('{{value}}', { value: getContractTypeDisplay(type, is_high_low) })}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!(is_loading || is_disabled) ? info.returns : ''}</span>\n                    </div>\n                </div>\n            </React.Fragment>\n        </Button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames     from 'classnames';\nimport React          from 'react';\nimport PropTypes      from 'prop-types';\n// import { localize }   from 'App/i18n';\n// import { PopConfirm } from 'App/Components/Elements/PopConfirm';\nimport { Popover }    from 'App/Components/Elements/Popover';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo   from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\n// import PurchaseLock   from 'Modules/Trading/Components/Form/Purchase/PurchaseLock';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\n\nclass PurchaseFieldset extends React.PureComponent {\n    state = { should_fade: false };\n\n    componentDidMount() {\n        this.setState({ should_fade: true });\n    }\n\n    render() {\n        const {\n            basis,\n            buy_info,\n            currency,\n            // index,\n            info,\n            index,\n            is_contract_mode,\n            is_disabled,\n            is_high_low,\n            is_loading,\n            is_proposal_empty,\n            is_proposal_error,\n            purchased_states_arr,\n            // is_purchase_confirm_on,\n            // is_purchase_locked,\n            onClickPurchase,\n            onHoverPurchase,\n            // togglePurchaseLock,\n            setPurchaseState,\n            type,\n        } = this.props;\n\n        const purchase_button = (\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_proposal_empty={is_proposal_empty}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={this.state.should_fade}\n                type={type}\n            />\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n            >\n                {/* {(is_purchase_locked && index === 0) && */}\n                {/* <PurchaseLock onClick={togglePurchaseLock} /> */}\n                {/* } */}\n                <React.Fragment>\n                    <ContractInfo\n                        basis={basis}\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_loading={is_loading}\n                        should_fade={this.state.should_fade}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div\n                        className={classNames(\n                            'btn-purchase__shadow-wrapper', {\n                                'btn-purchase__shadow-wrapper--disabled': (is_proposal_error || is_disabled),\n                            },\n                        )}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {(is_proposal_error) ?\n                            <Popover\n                                alignment='left'\n                                classNameBubble='purchase-container__popover-bubble'\n                                message={info.message}\n                            >\n                                { purchase_button }\n                            </Popover>\n                            :\n                            purchase_button\n                        }\n                        {\n                            // is_purchase_confirm_on ?\n                            //     <PopConfirm\n                            //         alignment='left'\n                            //         cancel_text={localize('Cancel')}\n                            //         confirm_text={localize('Purchase')}\n                            //         message={localize('Are you sure you want to purchase this contract?')}\n                            //     >\n                            //         {purchase_button}\n                            //     </PopConfirm>\n                            //     :\n                            //     purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    }\n}\n\nPurchaseFieldset.propTypes = {\n    basis               : PropTypes.string,\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    is_proposal_error   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    // is_purchase_confirm_on: PropTypes.bool,\n    // is_purchase_locked    : PropTypes.bool,\n    onHoverPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    // togglePurchaseLock    : PropTypes.func,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseFieldset;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { isEmptyObject }           from '_common/utility';\nimport PurchaseFieldset            from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { connect }                 from 'Stores/connect';\n\nconst Purchase = ({\n    basis,\n    contract_type,\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    // is_purchase_confirm_on,\n    purchased_states_arr,\n    // is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    // togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    setPurchaseState,\n    trade_types,\n    validation_errors,\n}) => {\n    const is_high_low = /high_low/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info              = proposal_info[type] || {};\n        const is_disabled       = is_contract_mode\n            || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_proposal_error = info.has_error && !info.has_error_details;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={index}\n                index={getSortedIndex()}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                // is_purchase_confirm_on={is_purchase_confirm_on}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                // is_purchase_locked={is_purchase_locked}\n                // togglePurchaseLock={togglePurchaseLock}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        switch (getContractTypePosition(type)) {\n            case 'top':\n                components.unshift(purchase_fieldset);\n                break;\n            case 'bottom':\n                components.push(purchase_fieldset);\n                break;\n            default:\n                components.push(purchase_fieldset);\n                break;\n        }\n    });\n\n    return components;\n};\n\nPurchase.propTypes = {\n    basis                     : PropTypes.string,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    // is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    purchased_states_arr      : PropTypes.array,\n    setPurchaseState          : PropTypes.func,\n    // togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n    validation_errors         : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        basis                     : modules.trade.basis,\n        contract_type             : modules.trade.contract_type,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        validation_errors         : modules.trade.validation_errors,\n        purchased_states_arr      : ui.purchase_states,\n        setPurchaseState          : ui.setPurchaseState,\n        // is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        // is_purchase_locked        : ui.is_purchase_lock_on,\n        // togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport PageError     from 'Modules/PageError';\nimport { routes }    from 'Constants/index';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message = should_show_refresh ? <Localize i18n_default_text='Please refresh this page to continue.' /> : '';\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [\n                        message,\n                        refresh_message,\n                    ]\n                    : [\n                        <Localize key={0} i18n_default_text='Sorry, an error occured while processing your request.' />,\n                        refresh_message,\n                    ]}\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","export * from './language';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <div\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport { month_headers } from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }           from 'Utils/Date';\nimport CalendarButton    from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }          from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    hide_disabled_periods,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n    const should_hide_next_month  = is_next_month_disabled && hide_disabled_periods;\n    const should_hide_prev_month  = is_prev_month_disabled && hide_disabled_periods;\n    const should_hide_prev_year   = is_prev_year_disabled && hide_disabled_periods;\n    const should_hide_next_year   = is_next_year_disabled && hide_disabled_periods;\n\n    const onClickPrevYear = !(is_prev_year_disabled || should_hide_prev_year) ?\n        () => navigateTo(subYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickNextYear = !(is_next_year_disabled || should_hide_next_year) ?\n        () => navigateTo(addYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickPrevMonth = !(is_prev_month_disabled || should_hide_prev_month) ?\n        () => navigateTo(subMonths(calendar_date, 1)) :\n        undefined;\n\n    const onClickNextMonth = !(is_next_month_disabled || should_hide_next_month) ?\n        () => navigateTo(addMonths(calendar_date, 1)) :\n        undefined;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled' : is_prev_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_year,\n                })}\n                onClick={onClickPrevYear}\n            >\n                <Icon icon='IconChevronDoubleLeft' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled' : is_prev_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickPrevMonth}\n            >\n                <Icon icon='IconChevronLeft' className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled' : is_next_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickNextMonth}\n            >\n                <Icon icon='IconChevronRight' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled' : is_next_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_year,\n                })}\n                onClick={onClickNextYear}\n            >\n                <Icon icon='IconChevronDoubleRight' className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    hide_disabled_periods : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import ContentLoader from 'react-content-loader';\nimport React         from 'react';\nimport PropTypes     from 'prop-types';\n\nconst PositionsCardLoader = ({ is_dark_theme, speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        primaryColor={is_dark_theme ? 'rgba(127, 131, 151, 0.16)' : '#f4f4f6'}\n        secondaryColor={is_dark_theme ? '#303342' : '#eaeaec'}\n    >\n        <rect x='43'  y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='147' y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='12'  y='50'  rx='0' ry='0' width='44'  height='8' />\n        <rect x='13'  y='68'  rx='0' ry='0' width='192' height='8' />\n        <rect x='5'   y='89'  rx='0' ry='0' width='208' height='1' />\n        <rect x='12'  y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='9'   rx='0' ry='0' width='24'  height='24' />\n        <rect x='116' y='11'  rx='0' ry='0' width='24'  height='24' />\n        <rect x='12'  y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='12'  y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='153' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88'  height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    speed        : PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","export * from './positions-card.jsx';\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (server_time, start_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(start_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(server_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n","export * from './positions-helper';\n","const Cookies          = require('js-cookie');\nconst moment           = require('moment');\nconst ClientBase       = require('./client_base');\nconst Login            = require('./login');\nconst ServerTime       = require('./server_time');\nconst BinarySocket     = require('./socket_base');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getAppId         = require('../../config').getAppId;\n\nconst GTM = (() => {\n    const isGtmApplicable = () => (/^(16303|16929)$/.test(getAppId()));\n\n    const getCommonVariables = () => ({\n        language: getLanguage(),\n        ...ClientBase.isLoggedIn() && {\n            visitorId: ClientBase.get('loginid'),\n            currency : ClientBase.get('currency'),\n        },\n        ...('is_dark_mode_on' in LocalStore.getObject('ui_store')) && {\n            theme: LocalStore.getObject('ui_store').is_dark_mode_on ? 'dark' : 'light',\n        },\n    });\n\n    const pushDataLayer = (data) => {\n        if (isGtmApplicable() && !Login.isLoginPages()) {\n            dataLayer.push({\n                ...getCommonVariables(),\n                ...data,\n            });\n        }\n    };\n\n    const eventHandler = (get_settings) => {\n        if (!isGtmApplicable()) return;\n        const login_event       = localStorage.getItem('GTM_login');\n        const is_new_account    = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            pushDataLayer({ bom_affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = window.time || moment().utc();\n        const data = {\n            visitorId         : ClientBase.get('loginid'),\n            bom_account_type  : ClientBase.getAccountType(),\n            bom_currency      : ClientBase.get('currency'),\n            bom_country       : get_settings.country,\n            bom_country_abbrev: get_settings.country_code,\n            bom_email         : get_settings.email,\n            url               : window.location.href,\n            bom_today         : moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (!ClientBase.get('is_virtual')) {\n            data.bom_age       = moment_now.diff(moment.unix(get_settings.date_of_birth).utc(), 'year');\n            data.bom_firstname = get_settings.first_name;\n            data.bom_lastname  = get_settings.last_name;\n            data.bom_phone     = get_settings.phone;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then((response) => {\n                (response.mt5_login_list || []).forEach((obj) => {\n                    const acc_type = (ClientBase.getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial').replace('vanuatu_', '').replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                pushDataLayer(data);\n            });\n        } else {\n            pushDataLayer(data);\n        }\n\n        // check if there are any transactions in the last 30 days for UX interview selection\n        BinarySocket.send({ statement: 1, limit: 1 }).then((response) => {\n            const last_transaction_timestamp = getPropertyValue(response, ['statement', 'transactions', '0', 'transaction_time']);\n            pushDataLayer({\n                bom_transaction_in_last_30d: !!last_transaction_timestamp && moment(last_transaction_timestamp * 1000).isAfter(ServerTime.get().subtract(30, 'days')),\n            });\n        });\n    };\n\n    const mt5NewAccount = (response) => {\n        const acc_type = response.mt5_new_account.mt5_account_type ?\n            `${response.mt5_new_account.account_type}_${response.mt5_new_account.mt5_account_type}` : // financial_cent, demo_cent, ...\n            `${response.mt5_new_account.account_type === 'demo' ? 'demo' : 'real'}_gaming`;           // demo_gaming, real_gaming\n\n        const gtm_data = {\n            event          : 'mt5_new_account',\n            bom_email      : ClientBase.get('email'),\n            bom_country    : State.getResponse('get_settings.country'),\n            mt5_last_signup: acc_type,\n        };\n\n        gtm_data[`mt5_${acc_type}_id`] = response.mt5_new_account.login;\n\n        if (/demo/.test(acc_type) && !ClientBase.get('is_virtual')) {\n            gtm_data.visitorId = ClientBase.getAccountOfType('virtual').loginid;\n        }\n\n        pushDataLayer(gtm_data);\n    };\n\n    // Pushes deposit & withdrawal data from transaction-stream to GTM\n    const pushTransactionData = (response, extra_data = {}) => {\n        if (!isGtmApplicable() || ClientBase.get('is_virtual')) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now  = window.time || moment().utc();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(moment.unix(gtm_transactions.timestamp).utc(), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event           : 'transaction',\n                bom_account_type: ClientBase.getAccountType(),\n                bom_today       : moment_now.unix(),\n                transaction     : {\n                    id     : response.transaction.transaction_id,\n                    type   : response.transaction.action,\n                    time   : response.transaction.transaction_time,\n                    amount : response.transaction.amount,\n                    balance: response.transaction.balance,\n                },\n            };\n            Object.assign(data, extra_data);\n            pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp    = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    };\n\n    return {\n        pushDataLayer,\n        eventHandler,\n        pushTransactionData,\n        mt5NewAccount,\n    };\n})();\n\nmodule.exports = GTM;\n","const BinarySocket = require('./socket_base');\nconst localize     = require('../../App/i18n').localize;\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const StatusConfig = (() => {\n        let status_config;\n\n        const initStatusConfig = () => ({\n            online  : { class: 'online',  tooltip: localize('Online') },\n            offline : { class: 'offline', tooltip: localize('Offline') },\n            blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n        });\n\n        return {\n            get: (status) => {\n                if (!status_config) {\n                    status_config = initStatusConfig();\n                }\n                return status_config[status];\n            },\n        };\n    })();\n\n    const pendings = {};\n    const pending_keys = {\n        ws_init   : 'ws_init',\n        ws_request: 'ws_request',\n    };\n    const pending_timeouts = {\n        [pending_keys.ws_init]   : 5000,\n        [pending_keys.ws_request]: 10000,\n    };\n\n    let ws_config,\n        network_status,\n        updateUI;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        updateUI  = fncUpdateUI;\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online',  setStatus);\n            window.addEventListener('offline', setStatus);\n        } else { // if not supported, default to online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init(ws_config);\n        }\n\n        setStatus(isOnline() ? 'online' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    const wsReconnect = () => {\n        if (isOnline() && BinarySocket.hasReadyState(2, 3)) { // CLOSING or CLOSED\n            BinarySocket.init(ws_config);\n        } else {\n            BinarySocket.send({ ping: 1 }); // trigger a request to get stable status sooner\n        }\n    };\n\n    const setStatus = (status) => {\n        if (!isOnline()) {\n            network_status = 'offline';\n        } else if (pending_keys[status] || network_status === 'offline') {\n            network_status = 'blinking';\n            wsReconnect();\n        } else {\n            network_status = 'online';\n        }\n\n        if (typeof updateUI === 'function') {\n            updateUI(StatusConfig.get(network_status), isOnline());\n        }\n    };\n\n    const ws_events_map = {\n        init   : () => setPending(pending_keys.ws_init),\n        open   : () => clearPendings(pending_keys.ws_init),\n        send   : () => setPending(pending_keys.ws_request),\n        message: () => clearPendings(),\n        close  : () => setPending(pending_keys.ws_init),\n    };\n\n    const wsEvent = (event) => {\n        if (typeof ws_events_map[event] === 'function') {\n            ws_events_map[event]();\n        }\n    };\n\n    const setPending = (key) => {\n        if (!pendings[key]) {\n            pendings[key] = setTimeout(() => {\n                pendings[key] = undefined;\n                setStatus(key);\n            }, pending_timeouts[key]);\n        }\n    };\n\n    const clearPendings = (key) => {\n        const clear = (k) => {\n            clearTimeout(pendings[k]);\n            pendings[k] = undefined;\n            if (k === pending_keys.ws_request) {\n                setStatus('online');\n            }\n        };\n\n        if (key) {\n            clear(key);\n        } else {\n            Object.keys(pendings).forEach(clear);\n        }\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            { text &&\n                <span className={classNames('btn__text', classNameSpan)}>\n                    {text}\n                </span>\n            }\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","const moment           = require('moment');\nconst isCryptocurrency = require('./currency_base').isCryptocurrency;\nconst SocketCache      = require('./socket_cache');\nconst localize         = require('../../App/i18n').localize;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object   = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => (\n        !isEmptyObject(getAllAccountsObject()) &&\n        get('loginid') &&\n        get('token')\n    );\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid))          account_type = 'virtual';\n        else if (/^MF/.test(loginid))     account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type   = getAccountType(loginid);\n        return ((\n            (type === 'virtual' && this_type === 'virtual') ||\n            (type === 'real'    && this_type !== 'virtual') ||\n            type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true));\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = (type) => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid =>\n                !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid =>\n            !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default  : localize('Real'),\n            financial: localize('Investment'),\n            gaming   : localize('Gaming'),\n            virtual  : localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return (types_map[getAccountType(loginid)] || types_map.default);\n    };\n\n    const responseAuthorize = (response) => {\n        const authorize = response.authorize;\n        set('email',      authorize.email);\n        set('currency',   authorize.currency);\n        set('is_virtual', +authorize.is_virtual);\n        set('session_start', parseInt(moment().valueOf() / 1000));\n        set('landing_company_shortcode', authorize.landing_company_name);\n        updateAccountList(authorize.account_list);\n    };\n\n    const updateAccountList = (account_list) => {\n        account_list.forEach((account) => {\n            set('excluded_until', account.excluded_until || '', account.loginid);\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    set(param_to_set, value_to_set, account.loginid);\n                }\n            });\n        });\n    };\n\n    const shouldAcceptTnc = () => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status   = State.getResponse('get_settings.client_tnc_status');\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object   = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = (options) => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token',      options.token,       options.loginid);\n        set('email',      options.email,       options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid',    options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode           = get('landing_company_shortcode');\n        const landing_company_prop     = Object.keys(landing_company_response).find((key) => (\n            this_shortcode === landing_company_response[key].shortcode\n        ));\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = () => isAccountOfType('financial') &&\n        !/crs_tin_information/.test((State.getResponse('get_account_status') || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP distinction from group\n    const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== current_landing_company &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company    = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object  = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = () => {\n        const status       = State.getResponse('get_account_status.status');\n        const is_high_risk = /high/.test(State.getResponse('get_account_status.risk_classification'));\n\n        return (\n            isAccountOfType('financial') ?\n                /(financial_assessment|trading_experience)_not_complete/.test(status) :\n                (is_high_risk && /financial_assessment_not_complete/.test(status))\n        );\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = (account) => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = (to_loginid) => {\n        if (to_loginid === current_loginid || get('is_virtual', to_loginid) || get('is_virtual') ||\n            get('is_disabled', to_loginid)) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency   = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta      : 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company   = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto   = isCryptocurrency(to_currency);\n        return (is_from_crypto ? !is_to_crypto : is_to_crypto);\n    };\n\n    const hasSvgAccount = () => !!(getAllLoginids().find(loginid => /^CR/.test(loginid)));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency             = get('currency');\n        const has_no_mt5           = mt5_login_list.length === 0;\n        const has_no_transaction   = (statement.count === 0 && statement.transactions.length === 0);\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency) : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","import { str as crc32 }     from 'crc-32';\nimport i18n                 from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as messages        from 'Translations/messages.json';\n\nconst i18n_config = {\n    resources: {\n        EN: {\n            translation: {\n                ...messages,\n            },\n        },\n    },\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: window.location.search ?\n        window.location.search.includes('lang=') ?\n            window.location.search\n                .substr(1).split('&')\n                .find(query => query.includes('lang='))\n                .split('=')[1]\n                .toUpperCase()\n            : undefined\n        : undefined,\n    fallbackLng: 'EN',\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const localize = (string, values) => i18n.t(crc32(string), { defaultValue: string, ...values });\n\nexport default i18n;\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const urlForLanguage             = require('./language').urlFor;\nconst getLanguage                = require('./language').get;\nconst getCurrentProductionDomain = require('../config').getCurrentProductionDomain;\nrequire('url-polyfill');\n\nconst Url = (() => {\n    let location_url,\n        static_host;\n\n    const reset = () => {\n        location_url = window ? window.location : location_url;\n    };\n\n    const params = (href) => {\n        const arr_params = [];\n        const parsed     = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n        let p_l          = parsed.length;\n        while (p_l--) {\n            const param = parsed[p_l].split('=');\n            arr_params.push(param);\n        }\n        return arr_params;\n    };\n\n    const paramsHash = (href) => {\n        const param_hash = {};\n        const arr_params = params(href);\n        let param        = arr_params.length;\n        while (param--) {\n            if (arr_params[param][0]) {\n                param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n            }\n        }\n        return param_hash;\n    };\n\n    const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\n    const urlFor = (path, pars, language, should_change_to_legacy = false) => {\n        const lang = (language || getLanguage()).toLowerCase();\n        let domain = `https://${window.location.hostname}/`;\n        if (should_change_to_legacy) {\n            if (/localhost|binary\\.sx/.test(domain)) {\n                domain = `https://binary.com/${lang || 'en'}/`;\n            } else {\n                domain = domain.replace(/deriv\\.app/, `binary.com/${lang || 'en'}`);\n            }\n        }\n        const new_url = `${domain}${(normalizePath(path) || 'home')}.html${(pars ? `?${pars}` : '')}`;\n        // replace old lang with new lang\n        return urlForLanguage(lang, new_url);\n    };\n\n    const default_domain = 'binary.com';\n    const host_map = { // the exceptions regarding updating the URLs\n        'bot.binary.com'       : 'www.binary.bot',\n        'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n        'academy.binary.com'   : 'academy.binary.com',\n        'tech.binary.com'      : 'tech.binary.com',\n        'blog.binary.com'      : 'blog.binary.com',\n    };\n\n    const urlForCurrentDomain = (href) => {\n        const current_domain = getCurrentProductionDomain();\n\n        if (!current_domain) {\n            return href; // don't change when domain is not supported\n        }\n\n        const url_object = new URL(href);\n        if (Object.keys(host_map).includes(url_object.hostname)) {\n            url_object.hostname = host_map[url_object.hostname];\n        } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n            // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n            url_object.hostname = url_object.hostname.replace(new RegExp(`\\\\.${default_domain}`, 'i'), `.${current_domain}`);\n        } else {\n            return href;\n        }\n\n        return url_object.href;\n    };\n\n    const urlForStatic = (path = '') => {\n        if (!static_host || static_host.length === 0) {\n            static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n            if (static_host) {\n                static_host = static_host.getAttribute('src');\n            }\n\n            if (static_host && static_host.length > 0) {\n                static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n            } else {\n                static_host = Url.websiteUrl();\n            }\n        }\n\n        return static_host + path.replace(/(^\\/)/g, '');\n    };\n\n    const getUrlBase = (path = '') => {\n        const l = window.location;\n\n        if (!/^\\/br_/.test(l.pathname)) return path;\n\n        return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n    };\n\n    return {\n        getUrlBase,\n        reset,\n        paramsHash,\n        urlFor,\n        urlForCurrentDomain,\n        urlForStatic,\n\n        param          : name => paramsHash()[name],\n        websiteUrl     : () => `${location.protocol}//${location.hostname}/`,\n        getHostMap     : () => host_map,\n        resetStaticHost: () => { static_host = undefined; },\n    };\n})();\n\nmodule.exports = Url;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    positions       : '/reports/positions',\n    profit          : '/reports/profit',\n    reports         : '/reports',\n    root            : '/',\n    redirect        : '/redirect',\n    settings        : '/settings',\n    statement       : '/reports/statement',\n    token           : '/settings/token',\n    trade           : '/',\n};\n\nexport default routes;\n","const moment       = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time,\n        performance_request_time,\n        get_time_interval,\n        update_time_interval,\n        onTimeUpdated;\n\n    const init = (fncTimeUpdated) => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = (response) => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = ((start_timestamp * 1000) + time_taken);\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => server_time ? server_time.clone() : undefined;\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n","import { flow }            from 'mobx';\nimport BinarySocket        from '_common/base/socket_base';\nimport { localize }        from 'App/i18n';\nimport { LocalStore }      from '_common/storage';\nimport { redirectToLogin } from '_common/base/login';\nimport { WS }              from 'Services';\n\nexport const showUnavailableLocationError = flow(function* (showError) {\n    const website_status = yield BinarySocket.wait('website_status');\n    const residence_list = yield WS.residenceList();\n\n    const clients_country_code = website_status.website_status.clients_country;\n    const clients_country_text =\n        (residence_list.residence_list.find(obj_country =>\n            obj_country.value === clients_country_code) || {}).text;\n\n    showError(\n        localize('If you have an account, log in to continue.'),\n        (clients_country_text ? localize('Sorry, this app is unavailable in {{clients_country}}.', { clients_country: clients_country_text }) : localize('Sorry, this app is unavailable in your current location.')),\n        localize('Log in'),\n        redirectToLogin,\n        false,\n    );\n});\n\nexport const isMarketClosed = (active_symbols = [], symbol) => {\n    if (!active_symbols.length) return false;\n    return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n        !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n        :\n        false;\n};\n\nexport const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return getFavoriteOpenSymbol(active_symbols) || getFirstOpenSymbol(active_symbols);\n};\n\nconst getFavoriteOpenSymbol = (active_symbols) => {\n    const chart_favorites = LocalStore.get('cq-favorites');\n    if (!chart_favorites) return undefined;\n    const client_favorite_markets = JSON.parse(chart_favorites)['chartTitle&Comparison'];\n\n    const client_favorite_list = client_favorite_markets\n        .map(client_fav_symbol => active_symbols\n            .find(symbol_info => symbol_info.symbol === client_fav_symbol));\n    if (client_favorite_list) {\n        const client_first_open_symbol = client_favorite_list\n            .filter(symbol => symbol).find(isSymbolOpen);\n        if (client_first_open_symbol) return client_first_open_symbol.symbol;\n    }\n    return undefined;\n};\n\nconst getFirstOpenSymbol = (active_symbols) => {\n    const first_open_symbol = active_symbols\n        .filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))\n        .find(isSymbolOpen);\n    if (first_open_symbol) return first_open_symbol.symbol;\n    return active_symbols.find(symbol_info => symbol_info.submarket === 'major_pairs').symbol;\n};\n\nconst isSymbolOpen = (symbol) => (\n    symbol.exchange_is_open === 1\n);\n\nexport const getSymbolDisplayName = (active_symbols = [], symbol) => (\n    (active_symbols.find(symbol_info => symbol_info.symbol.toUpperCase() === symbol.toUpperCase()) || { display_name: '' })\n        .display_name\n);\n\nconst countDecimalPlaces = (num) => {\n    if (!isNaN(num)) {\n        const str = num.toString();\n        if (str.indexOf('.') !== -1) {\n            return str.split('.')[1].length;\n        }\n    }\n    return 0;\n};\n\nexport const getUnderlyingPipSize = async (underlying) => {\n    // we frequently call this and update cache in trade page, so no need to update it here\n    const active_symbols = await BinarySocket.send({ active_symbols: 'brief' }, { skip_cache_update: true, msg_type: 'active_symbols' });\n    const obj_symbols    = active_symbols.active_symbols.find(symbols => symbols.symbol === underlying) || {};\n    return countDecimalPlaces(obj_symbols.pip || 0.001);\n};\n","const Cookies       = require('js-cookie');\nconst CookieStorage = require('./storage').CookieStorage;\n\nconst Language = (() => {\n    const all_languages = {\n        ACH  : 'Translations',\n        EN   : 'English',\n        DE   : 'Deutsch',\n        ES   : 'Español',\n        FR   : 'Français',\n        ID   : 'Indonesia',\n        IT   : 'Italiano',\n        PL   : 'Polish',\n        PT   : 'Português',\n        RU   : 'Русский',\n        TH   : 'Thai',\n        VI   : 'Tiếng Việt',\n        ZH_CN: '简体中文',\n        ZH_TW: '繁體中文',\n    };\n    const default_language = 'EN';\n\n    const setCookieLanguage = (lang) => {\n        if (!Cookies.get('language') || lang) {\n            const cookie = new CookieStorage('language');\n            cookie.write((lang || getLanguage()).toUpperCase());\n        }\n    };\n\n    let url_lang = null;\n\n    const lang_regex = new RegExp(`^(${Object.keys(all_languages).join('|')})$`, 'i');\n\n    const languageFromUrl = (custom_url) => {\n        if (url_lang && !custom_url) return url_lang;\n        const url_params = (custom_url || window.location.href).split('/').slice(3);\n        const language   = (url_params.find(lang => lang_regex.test(lang)) || '');\n        if (!custom_url) {\n            url_lang = language;\n        }\n        return language;\n    };\n\n    let current_lang = null;\n\n    const getLanguage = () => {\n        if (/ach/i.test(current_lang) || /ach/i.test(languageFromUrl())) {\n            const crowdin_lang_key = 'jipt_language_code_binary-static';\n            const crowdin_lang     = localStorage.getItem(crowdin_lang_key) || Cookies.get(crowdin_lang_key); // selected language for in-context translation\n            if (crowdin_lang) {\n                current_lang = crowdin_lang.toUpperCase().replace('-', '_').toUpperCase();\n                if (document.body) {\n                    document.body.classList.add(current_lang); // set the body class removed by crowdin code\n                }\n            }\n        }\n        current_lang = (current_lang || (languageFromUrl() || Cookies.get('language') || default_language).toUpperCase());\n        return current_lang;\n    };\n\n    const urlForLanguage = (lang, url = window.location.href) =>\n        url.replace(new RegExp(`/${getLanguage()}/`, 'i'), `/${(lang || default_language).trim().toLowerCase()}/`);\n\n    return {\n        getAll   : () => all_languages,\n        setCookie: setCookieLanguage,\n        get      : getLanguage,\n        urlFor   : urlForLanguage,\n        urlLang  : languageFromUrl,\n        reset    : () => { url_lang = null; current_lang = null; },\n    };\n})();\n\nmodule.exports = Language;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport UILoader  from 'App/Components/Elements/ui-loader.jsx';\n\nconst Lazy = (props) => {\n    if (!props.should_load) {\n        return null;\n    }\n    const LazyLoadedComponent       = React.lazy(props.ctor);\n    LazyLoadedComponent.displayName = props.is || 'LazyLoadedComponent';\n    return (\n        <React.Suspense fallback={props.has_progress ? <UILoader /> : <div />}>\n            <LazyLoadedComponent {...props} />\n        </React.Suspense>\n    );\n};\n\nLazy.propTypes = {\n    ctor        : PropTypes.func.isRequired,\n    has_progress: PropTypes.bool,\n    should_load : PropTypes.bool,\n};\n\nexport default Lazy;\n","import { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n\n/**\n * On switching symbols, end_time value of volatility indices should be set to today\n *\n * @param {String} symbol\n * @param {String} expiry_type\n * @returns {*}\n */\nexport const resetEndTimeOnVolatilityIndices = (symbol, expiry_type) => (\n    (/^R_/.test(symbol) && expiry_type === 'endtime') ? toMoment(null).format('DD MMM YYYY') : null\n);\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","if (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1); \n        return null;\n    };\n}\n","Element.prototype.hide = function() {\n    this.style.display = 'none';\n    return this;\n};\n\nElement.prototype.show = function() {\n    this.style.display = '';\n    return this;\n};\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n        return this;\n    };\n}\n\nElement.prototype.toggleClass = function(class_name, should_add) {\n    if (typeof should_add === 'undefined') { // toggle\n        should_add = !this.classList.contains(class_name);\n    }\n    this.classList[should_add ? 'add' : 'remove'](class_name);\n    return this;\n};\n\nElement.prototype.setVisibility = function(make_visible) {\n    this.toggleClass('invisible', !make_visible);\n    return this;\n};\n\n\nElement.prototype.html = function(content) {\n    if (typeof content === 'object') {\n        this.innerHTML = '';\n        this.appendChild(content);\n    } else {\n        this.innerHTML = content;\n    }\n    return this;\n};\n","import BinarySocket   from './socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '../utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    /**\n     * Add subscription without subscribers from request\n     * E.g. open subscription to proposal_open_contract on buy request\n     * @param {String}   msg_type               msg_type of the subscription\n     * @param {Object}   send_request           the object of the request to be made\n     * @param {Object}   subscribe_request      the object of the subscription request\n     * @param {Array}    subscription_props     Array of prop strings to add to subscribe_request from initial request, e.g. contract_id\n     */\n    const addSubscriptionFromRequest = (msg_type, send_request, subscribe_request, subscription_props) =>\n        new Promise((resolve) => {\n            let sub_id;\n            let is_stream = false;\n\n            BinarySocket.send(send_request, {\n                callback: (response) => {\n                    if (response.error) {\n                        return resolve(response);\n                    }\n                    if (!is_stream) {\n                        is_stream = true;\n                        sub_id    = ++subscription_id;\n\n                        if (subscription_props && Array.isArray(subscription_props)) {\n                            subscription_props.forEach((prop) => {\n                                if (response[response.msg_type][prop]) {\n                                    subscribe_request[prop] = response[response.msg_type][prop];\n                                }\n                            });\n                        }\n\n                        subscriptions[sub_id] = {\n                            msg_type,\n                            request    : cloneObject(subscribe_request),\n                            stream_id  : '',             // stream_id will be updated after receiving the response\n                            subscribers: [],\n                        };\n                        return resolve(response);\n                    }\n                    return dispatch(response, sub_id);\n                },\n            });\n        });\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']) || getPropertyValue(response.subscription, ['id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        const forgets_list = [];\n        Object.keys(subscriptions).forEach((id) => {\n            if (subscriptions[id].msg_type === msg_type) { // it's the msg_type we are looking for\n                if (!match_values || hasValues(subscriptions[id].request, match_values)) { // the value matches as well\n                    const stream_id = subscriptions[id].stream_id;\n                    if (stream_id && subscriptions[id].subscribers.length === 1) { // there is only one subscriber, so we can forget the call\n                        delete subscriptions[id];\n                        forgets_list.push(forgetStream(stream_id));\n                    } else if (hasCallbackFunction(id, fncCallback)) {\n                        // there are other subscribers, or for some reason there is no stream_id:\n                        // (i.e. returned an error, or forget() being called before the first response)\n                        subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n                    }\n                }\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        addSubscriptionFromRequest,\n        subscribe,\n        forget,\n        forgetAll,\n    };\n})();\n\nexport default SubscriptionManager;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add (response) {\n        this.list.unshift(response);\n    }\n\n    remove () {\n        this.list.pop();\n    }\n\n    push (response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh () {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise((resolve) => {\n                            let return_value;\n                            result.then(response => {\n                                if (response.error) {\n                                    queue.push(response);\n                                    if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                    queue.fresh();\n                                    if (\n                                        window.TrackJS &&\n                                        !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                    ) {\n                                        window.TrackJS.track(response.error.code);\n                                    }\n                                }\n                                queue.push(response);\n                                return_value = response;\n                            }).catch(error => {\n                                if (window.TrackJS) {\n                                    window.TrackJS.console.log(queue.list);\n                                    window.TrackJS.track(error.getMessage());\n                                }\n                            }).finally(() => {\n                                resolve(return_value);\n                            });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = (obj) => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket              from '_common/base/socket_base';\nimport SubscriptionManager       from '_common/base/subscription_manager';\nimport { isEmptyObject }         from '_common/utility';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = (() => {\n    const activeSymbols = (force_request) =>\n        BinarySocket.send({ active_symbols: 'brief' }, force_request);\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const newAccountVirtual = (verification_code, client_password, residence) =>\n        BinarySocket.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n        });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const residenceList = () =>\n        BinarySocket.send({ residence_list: 1 });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object, force_request) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object, force_request) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        newAccountVirtual,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        profitTable,\n        proposalOpenContract,\n        residenceList,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default trackJSNetworkMonitor(WS);\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n}\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\nimport ServerTime   from '_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth() ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY') : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","export * from './date-time';\n","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nmodule.exports = {\n    isMobile,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => this.state.hasError ? (\n        <ErrorComponent should_show_refresh={true} />\n    ) : this.props.children;\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect((store) => (\n    {\n        root_store: store,\n    }\n))(ErrorBoundary);\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ id, is_slow_loading, status, theme }) => (\n    <div className='initial-loader'>\n        <div id={id} className={`initial-loader__barspinner barspinner barspinner-${ theme || 'light'}`}>\n            { Array.from(new Array(5)).map((x, inx) => (\n                <div key={inx} className={`initial-loader__barspinner--rect barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n            ))}\n        </div>\n        { is_slow_loading && status.map((text, inx) => (\n            <h3 className='initial-loader__text' key={inx}>{text}</h3>\n        ))\n        }\n    </div>\n);\n\nLoading.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    is_slow_loading: PropTypes.bool,\n    status         : PropTypes.array,\n    theme          : PropTypes.string,\n};\nexport default Loading;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\nimport routes         from 'Constants/routes';\n// import InstallPWA     from './install-pwa.jsx';\nimport Loading        from '../../../templates/app/components/loading.jsx';\n\nconst AppContents = ({\n    // addNotificationBar,\n    children,\n    is_app_blurred,\n    is_contract_mode,\n    is_dark_mode,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_slow_loading,\n    location,\n    slow_loading_status,\n    // setPWAPromptEvent,\n}) => {\n    if (is_logged_in) {\n        // TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n        // window.addEventListener('beforeinstallprompt', e => {\n        //     console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        //\n        //     e.preventDefault();\n        //\n        //     setPWAPromptEvent(e);\n        //     addNotificationBar({\n        //         content : <InstallPWA />,\n        //         autoShow: 10000, // show after 10 secs\n        //         msg_type: 'pwa',\n        //     });\n        // });\n    }\n\n    return (\n        <React.Fragment>\n            { is_loading && location.pathname === routes.trade &&\n                <Loading status={slow_loading_status} is_slow_loading={is_slow_loading} theme={is_dark_mode ? 'dark' : 'light'} />\n            }\n            <div\n                id='app_contents'\n                className={classNames('app-contents', {\n                    'app-contents--show-positions-drawer': is_positions_drawer_on,\n                    'app-contents--contract-mode'        : is_contract_mode,\n                    'app-contents--is-blurred'           : (is_fully_blurred || is_app_blurred),\n                })}\n            >\n                {/* Calculate height of user screen and offset height of header and footer */}\n                <Scrollbars\n                    autoHide\n                    style={{ height: 'calc(100vh - 83px)' }}\n                >\n                    {children}\n                </Scrollbars>\n            </div>\n        </React.Fragment>\n    );\n};\n\nAppContents.propTypes = {\n    addNotificationBar    : PropTypes.func,\n    children              : PropTypes.any,\n    is_app_blurred        : PropTypes.bool,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_mode          : PropTypes.bool,\n    is_fully_blurred      : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_slow_loading       : PropTypes.bool,\n    pwa_prompt_event      : PropTypes.object,\n    setPWAPromptEvent     : PropTypes.func,\n    slow_loading_status   : PropTypes.array,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        // addNotificationBar    : ui.addNotificationBar,\n        is_app_blurred        : ui.is_app_blurred,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_dark_mode          : ui.is_dark_mode_on,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_loading            : ui.is_loading,\n        is_logged_in          : client.is_logged_in,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_slow_loading       : ui.is_slow_loading,\n        pwa_prompt_event      : ui.pwa_prompt_event,\n        slow_loading_status   : ui.slow_loading_status,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n    })\n)(AppContents));\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport { Popover }  from 'App/Components/Elements/Popover';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Popover\n            classNameBubble='network-status__tooltip'\n            alignment='top'\n            message={localize('Network status: {{status}}', { status: (status.tooltip || localize('Connecting to server')) })}\n        >\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Popover>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(\n    ({ common }) => ({\n        status: common.network_status,\n    })\n)(NetworkStatus);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <Icon icon='IconMaximize' className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst TogglePositions = ({\n    positions_count,\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames(\n        'ic-positions',\n        'footer__link', {\n            'ic-positions--active'   : is_positions_drawer_on,\n            'ic-positions--has-count': (positions_count > 0),\n        }\n    );\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n            data-count={positions_count}\n        >\n            <Icon icon='IconPositions' className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count       : PropTypes.number,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport ReactDOM          from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs';\n\nclass ModalElement extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('modal');\n        this.props.showFullBlur();\n        this.state.modal_root.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n        this.props.hideFullBlur();\n    }\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open) {\n            this.props.hideFullBlur();\n            this.props.toggleModal();\n        }\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={classNames('modal__container', this.props.className && `modal__${this.props.className}`)}>\n                <div className='modal-header'>\n                    <h3 className='modal-header__sidebar'>{this.props.title}</h3>\n                    <div className='modal-header__main'>\n                        { this.props.header &&\n                            <div className='modal-header__section'>\n                                {this.props.header}\n                            </div>\n                        }\n                        <div className='modal-header__close' onClick={this.props.toggleModal}>\n                            <Icon icon='ModalIconClose' />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='modal__tab-header'\n                    list={this.props.modal_content}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n}\n\nModalElement.propTypes = {\n    className    : PropTypes.string,\n    header       : PropTypes.node,\n    hideFullBlur : PropTypes.func,\n    is_open      : PropTypes.bool,\n    modal_content: PropTypes.array,\n    showFullBlur : PropTypes.func,\n    title        : PropTypes.string,\n    toggleModal  : PropTypes.func,\n};\n\nconst Modal = ({\n    className,\n    header,\n    hideFullBlur,\n    is_open,\n    modal_content,\n    showFullBlur,\n    title,\n    toggleModal,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear   : 'modal__container--enter',\n            enter    : 'modal__container--enter',\n            enterDone: 'modal__container--enter-done',\n            exit     : 'modal__container--exit',\n        }}\n        unmountOnExit\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            hideFullBlur={hideFullBlur}\n            is_open={is_open}\n            modal_content={modal_content}\n            showFullBlur={showFullBlur}\n            title={title}\n            toggleModal={toggleModal}\n        />\n    </CSSTransition>\n);\n\nModal.propTypes = {\n    className    : PropTypes.string,\n    header       : PropTypes.node,\n    hideFullBlur : PropTypes.func,\n    is_open      : PropTypes.bool,\n    modal_content: PropTypes.array,\n    showFullBlur : PropTypes.func,\n    title        : PropTypes.string,\n    toggleModal  : PropTypes.func,\n};\n\nexport {\n    Modal,\n    ModalElement,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Modal }    from 'App/Components/Elements/modal.jsx';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport 'Sass/app/modules/settings.scss';\n\nconst ToggleSettings = ({\n    hideFullBlur,\n    is_settings_visible,\n    showFullBlur,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <Icon icon='IconSettings' className='footer__icon ic-settings__icon' />\n            </a>\n            <React.Suspense fallback={<UILoader />}>\n                <Modal\n                    modal_content={[\n                        {\n                            icon : 'IconTheme',\n                            label: localize('Themes'),\n                            value: React.lazy(() => import(/* webpackChunkName: \"settings-theme\" */'App/Containers/SettingsModal/settings-theme.jsx')),\n                        }, {\n                            icon : 'IconLanguage',\n                            label: localize('Language'),\n                            value: React.lazy(() => import(/* webpackChunkName: \"settings-language\" */'App/Containers/SettingsModal/settings-language.jsx')),\n                        }, {\n                            icon : 'IconCharts',\n                            label: localize('Charts'),\n                            value: React.lazy(() => import(/* webpackChunkName: \"settings-chart\" */'App/Containers/SettingsModal/settings-chart.jsx')),\n                            // uncomment below lines to bring back purchase lock and purchase confirmation\n                            // }, {\n                            //     icon : IconPurchase,\n                            //     label: localize('Purchase'),\n                            //     value: PurchaseSettings,\n                        },\n                    ]}\n                    hideFullBlur={hideFullBlur}\n                    is_open={is_settings_visible}\n                    showFullBlur={showFullBlur}\n                    title={localize('Platform settings')}\n                    toggleModal={toggleSettings}\n                />\n            </React.Suspense>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    hideFullBlur       : PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    showFullBlur       : PropTypes.func,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { withRouter }                 from 'react-router';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport routes                         from 'Constants/routes';\nimport { connect }                    from 'Stores/connect';\nimport ServerTime                     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }                  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    active_positions,\n    hideFullBlur,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_blurred,\n    is_settings_modal_on,\n    location,\n    showFullBlur,\n    show_positions_toggle,\n    togglePositionsDrawer,\n    toggleSettingsModal,\n}) => (\n    <React.Fragment>\n        { (!is_loading || location.pathname !== routes.trade) &&\n            <footer className={classNames('footer', {\n                'footer--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='footer__links footer__links--left'>\n                    {\n                        (is_logged_in && show_positions_toggle) &&\n                        <TogglePositions\n                            is_positions_drawer_on={is_positions_drawer_on}\n                            togglePositionsDrawer={togglePositionsDrawer}\n                            positions_count={active_positions.length || 0}\n                        />\n                    }\n                </div>\n                <NetworkStatus />\n                <ServerTime />\n                <div className='footer__links'>\n                    <ToggleSettings\n                        is_settings_visible={is_settings_modal_on}\n                        toggleSettings={toggleSettingsModal}\n                        showFullBlur={showFullBlur}\n                        hideFullBlur={hideFullBlur}\n                    />\n                    <ToggleFullScreen />\n                </div>\n            </footer>\n        }\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    is_fully_blurred      : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_blurred      : PropTypes.bool,\n    is_settings_modal_on  : PropTypes.bool,\n    location              : PropTypes.object,\n    show_positions_toggle : PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n    toggleSettingsModal   : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        hideFullBlur          : ui.hideFullBlur,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_route_blurred      : ui.is_route_blurred,\n        is_logged_in          : client.is_logged_in,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_settings_modal_on  : ui.is_settings_modal_on,\n        showFullBlur          : ui.showFullBlur,\n        show_positions_toggle : ui.show_positions_toggle,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n        toggleSettingsModal   : ui.toggleSettingsModal,\n    })\n)(Footer));\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Deposit extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        return (\n            <iframe\n                className='cashier__iframe'\n                src={this.props.deposit_url}\n                frameBorder='0'\n                scrolling='auto'\n            />\n        );\n    }\n}\n\nDeposit.propTypes = {\n    deposit_url  : PropTypes.string,\n    iframe_height: PropTypes.number,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        deposit_url  : modules.cashier.deposit_url,\n        iframe_height: modules.cashier.iframe_height,\n        onMount      : modules.cashier.onMount,\n        onUnmount    : modules.cashier.onUnmount,\n    })\n)(Deposit);\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { localize }       from 'App/i18n';\nimport { Modal }          from 'App/Components/Elements/modal.jsx';\nimport {\n    Deposit,\n    Withdraw }            from 'App/Containers/CashierModal';\nimport WalletInformation  from 'Modules/Reports/Containers/wallet-information.jsx';\nimport Button             from '../../Form/button.jsx';\n\nconst ToggleCashier = ({\n    className,\n    hideFullBlur,\n    is_cashier_visible,\n    showFullBlur,\n    toggleCashier,\n}) => (\n    <React.Fragment>\n        <Button\n            className={classNames(className, 'btn--primary btn--primary--orange')}\n            has_effect\n            text={localize('Deposit')}\n            onClick={toggleCashier}\n        />\n        <Modal\n            className='cashier'\n            modal_content={[\n                {\n                    icon : 'IconDepositSmall',\n                    label: localize('Deposit'),\n                    value: Deposit,\n                }, {\n                    icon : 'IconWithdrawalSmall',\n                    label: localize('Withdrawal'),\n                    value: Withdraw,\n                },\n            ]}\n            header={<WalletInformation />}\n            hideFullBlur={hideFullBlur}\n            is_open={is_cashier_visible}\n            showFullBlur={showFullBlur}\n            title={localize('Cashier')}\n            toggleModal={toggleCashier}\n        />\n    </React.Fragment>\n);\n\nToggleCashier.propTypes = {\n    className   : PropTypes.string,\n    hideFullBlur: PropTypes.func,\n    is_open     : PropTypes.bool,\n    showFullBlur: PropTypes.func,\n    toggleModal : PropTypes.func,\n};\n\nexport { ToggleCashier };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <React.Fragment>\n                                {item.text &&\n                                    <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}{item.logo}</span>\n                                }\n                                {item.image &&\n                                    <span className='header__menu-link-text'>{item.image}{item.logo}</span>\n                                }\n                            </React.Fragment>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from 'App/i18n';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from 'App/i18n';\nimport { urlFor }          from '_common/url';\nimport Button              from '../../Form/button.jsx';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import React             from 'react';\nimport { formatMoney }   from '_common/base/currency_base';\nimport { urlFor }        from '_common/url';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Lazy              from 'App/Containers/Lazy';\nimport { localize }      from 'App/i18n';\nimport { LoginButton }   from './login-button.jsx';\nimport { SignupButton }  from './signup-button.jsx';\nimport { UpgradeButton } from './upgrade-button.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nexport const AccountActions = ({\n    is_logged_in,\n    currency,\n    balance,\n    can_upgrade,\n    is_virtual,\n    onClickUpgrade,\n    loginid,\n    is_acc_switcher_on,\n    toggleAccountsDialog,\n    can_upgrade_to,\n}) => {\n    if (is_logged_in) {\n\n        return (\n            <React.Fragment>\n                <Lazy\n                    ctor={() => import(/* webpackChunkName: \"account-info\" */'App/Components/Layout/Header/account-info.jsx')}\n                    should_load={true}\n                    has_progress={true}\n                    is='AccountInfo'\n                    balance={formatMoney(currency, balance, true)}\n                    is_upgrade_enabled={can_upgrade}\n                    is_virtual={is_virtual}\n                    onClickUpgrade={onClickUpgrade}\n                    currency={currency}\n                    loginid={loginid}\n                    is_dialog_on={is_acc_switcher_on}\n                    toggleDialog={toggleAccountsDialog}\n                />\n                {!!(\n                    can_upgrade_to && is_virtual\n                ) && <UpgradeButton\n                    className='acc-info__button'\n                    onClick={() => {\n                        window.open(urlFor('user/accounts', undefined, undefined, true));\n                    }}\n                />}\n                { !(is_virtual) &&\n                // TODO: uncomment this to open cashier popup\n                // <ToggleCashier\n                //      className='acc-info__button'\n                //      toggleCashier={toggleCashierModal}\n                //      is_cashier_visible={is_cashier_modal_on}\n                //      showFullBlur={showFullBlur}\n                //      hideFullBlur={hideFullBlur}\n                //  />\n                // TODO: remove this when cashier pop up is ready\n                <Button\n                    className='btn--primary btn--primary--orange acc-info__button'\n                    has_effect\n                    text={localize('Deposit')}\n                    onClick={() => {\n                        window.open(urlFor('cashier', undefined, undefined, true), '_blank', 'noopener', 'noreferrer');\n                    }}\n                />\n                }\n            </React.Fragment>\n        );\n    }\n    return (\n        <React.Fragment>\n            <LoginButton className='acc-info__button' />\n            <SignupButton className='acc-info__button' />\n        </React.Fragment>\n    );\n};\n","import React           from 'react';\nimport { localize }    from 'App/i18n';\nimport Icon            from 'Assets/icon.jsx';\nimport { routes }      from 'Constants/index';\n\nconst header_links = [\n    {\n        logo   : <div className='header__logo'>{localize('BETA')}</div>,\n        image  : <Icon icon='IconDeriv' className='header__icon' />,\n        link_to: routes.trade,\n    },\n    {\n        icon      : <Icon icon='IconReports' className='header__icon' />,\n        text      : localize('Reports'),\n        link_to   : routes.reports,\n        login_only: true,\n    },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    AccountActions,\n    MenuLinks,\n    // ToggleCashier,\n}                     from 'App/Components/Layout/Header';\nimport header_links   from 'App/Constants/header-links';\nimport Lazy           from 'App/Containers/Lazy';\nimport routes         from 'Constants/routes';\nimport { connect }    from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    // hideFullBlur,\n    is_acc_switcher_on,\n    // is_cashier_modal_on,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_mobile,\n    is_route_blurred,\n    is_virtual,\n    location,\n    loginid,\n    onClickUpgrade,\n    // showFullBlur,\n    toggleAccountsDialog,\n    // toggleCashierModal,\n}) => (\n    <React.Fragment>\n        {(!is_loading || location.pathname !== routes.trade) &&\n            <header className={classNames('header', {\n                'header--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='header__menu-items'>\n                    <div className='header__menu-left'>\n                        <Lazy\n                            has_progress={false}\n                            ctor={() => import(/* webpackChunkName: \"toggle-menu-drawer\" */'App/Components/Layout/Header/toggle-menu-drawer.jsx')}\n                            should_load={is_mobile}\n                        />\n                        <MenuLinks\n                            is_logged_in={is_logged_in}\n                            items={header_links}\n                        />\n                    </div>\n                    <div className='header__menu-right'>\n                        <div className='acc-info__container'>\n                            <AccountActions\n                                is_logged_in={is_logged_in}\n                                currency={currency}\n                                balance={balance}\n                                can_upgrade={can_upgrade}\n                                is_virtual={is_virtual}\n                                onClickUpgrade={onClickUpgrade}\n                                loginid={loginid}\n                                is_acc_switcher_on={is_acc_switcher_on}\n                                toggleAccountsDialog={toggleAccountsDialog}\n                                can_upgrade_to={can_upgrade_to}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </header>\n        }\n    </React.Fragment>\n);\n\nHeader.propTypes = {\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    can_upgrade_to      : PropTypes.string,\n    currency            : PropTypes.string,\n    hideFullBlur        : PropTypes.func,\n    is_acc_switcher_on  : PropTypes.bool,\n    is_cashier_modal_on : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool,\n    is_fully_blurred    : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    is_route_blurred    : PropTypes.bool,\n    is_virtual          : PropTypes.bool,\n    location            : PropTypes.object,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func,\n    showFullBlur        : PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    toggleCashierModal  : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        can_upgrade_to      : client.can_upgrade_to,\n        currency            : client.currency,\n        hideFullBlur        : ui.hideFullBlur,\n        is_loading          : ui.is_loading,\n        is_logged_in        : client.is_logged_in,\n        is_virtual          : client.is_virtual,\n        loginid             : client.loginid,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        is_cashier_modal_on : ui.is_cashier_modal_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_fully_blurred    : ui.is_fully_blurred,\n        is_route_blurred    : ui.is_route_blurred,\n        is_mobile           : ui.is_mobile,\n        showFullBlur        : ui.showFullBlur,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        toggleCashierModal  : ui.toggleCashierModal,\n    })\n)(Header));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport Lazy                           from 'App/Containers/Lazy';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return (\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"error-component\" */'App/Components/Elements/Errors')}\n                should_load={props.has_error}\n                has_progress={true}\n                {...props.error}\n            />\n        );\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action }   from 'mobx';\nimport { localize } from 'App/i18n';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) { // TODO: i18n_issue\n            common_store.showError({\n                message: localize('Your web browser is out of date and may affect your trading experience. Please {{opening_tag}}update your browser{{closing_tag}}.', {\n                    opening_tag  : '<a href=\"http://outdatedbrowser.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"link\">',\n                    closing_tag  : '</a>',\n                    interpolation: { escapeValue: false },\n                }),\n                has_html: true,\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import React            from 'react';\nimport { formatDate }   from 'Utils/Date';\nimport { WS }           from 'Services';\nimport { getRiskAssessment,\n    isAccountOfType,\n    shouldAcceptTnc,\n    shouldCompleteTax } from '_common/base/client_base';\nimport { localize }     from 'App/i18n';\nimport {\n    LocalStore,\n    State }             from '_common/storage';\nimport { urlFor }       from '_common/url';\nimport Localize         from '../../App/Components/Elements/localize.jsx';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nconst client_notifications = {\n    currency: {\n        header : localize('Set Currency'),\n        message: (\n            <Localize\n                i18n_default_text='Please set the <0>currency</0> of your account to enable trading.'\n                components={[<a key={0} className='link link--white' target='_blank' href={urlFor('user/set-currency', undefined, undefined, true)} />]}\n            />\n        ),\n        type: 'danger',\n    },\n    self_exclusion: (excluded_until) => ({\n        header : localize('Self-exclusion Detected'),\n        message: (\n            <Localize\n                i18n_default_text='You have opted to be excluded from Binary.com until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                values={{ exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'), interpolation: { escapeValue: false } }}\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    }),\n    authenticate: {\n        header : localize('Account Authentication'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Authenticate your account</0> now to take full advantage of all payment methods available.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    cashier_locked: {\n        header : localize('Cashier Disabled'),\n        message: localize('Deposits and withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    withdrawal_locked: {\n        header : localize('Withdrawal Disabled'),\n        message: localize('Withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    mt5_withdrawal_locked: {\n        header : localize('MT5 Withdrawal Disabled'),\n        message: localize('MT5 withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    document_needs_action: {\n        header : localize('Authentication Failed'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    unwelcome: {\n        header : localize('Trading and Deposits Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    mf_retail: {\n        header : localize('Binary Options Trading Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Binary Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    financial_limit: {\n        header : localize('Remove Deposit Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/security/self_exclusionws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    risk: {\n        header : localize('Withdrawal and Trading Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete the <0>Financial Assessment form</0> to lift your withdrawal and trading limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/assessmentws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    tax: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    tnc: {\n        header : localize('Terms & Conditions Updated'),\n        message: (\n            <Localize\n                i18n_default_text='Please <0>accept the updated Terms and Conditions</0> to enable deposit and trading.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/tnc_approvalws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    required_fields: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n};\n\nconst hasMissingRequiredField = (response, client) => {\n    if (!response.get_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = (landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica');\n\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    const get_settings = response.get_settings;\n    return required_fields.some(field => !get_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse('landing_company.financial_company.requirements.withdrawal');\n        const necessary_signup_fields     = State.getResponse('landing_company.financial_company.requirements.signup')\n            .map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence'];\n        const address_postcode_is_required = (residence === 'gb' || landing_company_shortcode === 'iom');\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst checkAccountStatus = (response, client, addNotification, loginid) => {\n    if (!response.get_account_status) return;\n    if (loginid !== LocalStore.get('active_loginid')) return;\n\n    const { prompt_client_to_authenticate, status } = response.get_account_status;\n\n    const {\n        document_under_review,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        ukrts_max_turnover_limit_not_set,\n        professional,\n    } = getStatusValidations(status);\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n\n    if (cashier_locked)        addNotification(client_notifications.cashier_locked);\n    if (withdrawal_locked)     addNotification(client_notifications.withdrawal_locked);\n    if (mt5_withdrawal_locked) addNotification(client_notifications.mt5_withdrawal_locked);\n    if (document_needs_action) addNotification(client_notifications.document_needs_action);\n    if (unwelcome)             addNotification(client_notifications.unwelcome);\n    if (is_mf_retail)          addNotification(client_notifications.mf_retail);\n    if (ukrts_max_turnover_limit_not_set) {\n        addNotification(client_notifications.financial_limit);\n    }\n    if (getRiskAssessment()) addNotification(client_notifications.risk);\n    if (shouldCompleteTax()) addNotification(client_notifications.tax);\n\n    if ((+prompt_client_to_authenticate) && !(document_under_review || document_needs_action)) {\n        addNotification(client_notifications.authenticate);\n    }\n\n    function getStatusValidations(status_arr) {\n        return status_arr.reduce((validations, account_status) => {\n            validations[account_status] = true;\n            return validations;\n        }, {});\n    }\n};\n\nexport const handleClientNotifications = (client, addNotification, loginid) => {\n    const { currency, excluded_until } = client;\n    if (!currency)         addNotification(client_notifications.currency);\n    if (excluded_until)    addNotification(client_notifications.self_exclusion(excluded_until));\n\n    WS.getAccountStatus().then((response) => checkAccountStatus(response, client, addNotification, loginid));\n\n    WS.sendRequest({ get_settings: 1 }, { forced: true }).then((response) => {\n        if (loginid !== LocalStore.get('active_loginid')) return;\n\n        if (shouldAcceptTnc()) addNotification(client_notifications.tnc);\n\n        if (hasMissingRequiredField(response, client)) {\n            addNotification(client_notifications.required_fields);\n        }\n    });\n};\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { getElementById }        from '_common/common_functions';\nimport { localize }              from 'App/i18n';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be {{value}}', { value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize(\n            'Should be between {{min_value}} and {{max_value}}',\n            {\n                min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n                max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n            }\n        );\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than {{min_value}}', { min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than {{max_value}}', { max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '- . \\' # ; : ( ) , @ /' }) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '+ - .' }) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter {{value}} characters.', { value: '{{value}}' }) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal    : { func: validNotEqual,     message: localize('{{value_one}} and {{value_two}} cannot be the same.', { value_one: '{{value_one}}', value_two: '{{value_two}}' }) },\n    number       : { func: validNumber,       message: '' }, // TODO: i18n_issue\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport BinarySocket      from '_common/base/socket_base';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () => !!this.validation_errors[propertyName]\n            .filter(x => !messages.includes(x))\n            .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x)))\n            .length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules  = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n\n    waitFor = async (...prerequisites) => {\n        await BinarySocket.wait(...prerequisites);\n    };\n}\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from 'App/i18n';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    runInAction,\n    when,\n}                                    from 'mobx';\nimport moment                        from 'moment';\nimport {\n    requestLogout,\n    WS }                             from 'Services';\nimport { getAccountTitle }           from '_common/base/client_base';\nimport BinarySocket                  from '_common/base/socket_base';\nimport * as SocketCache              from '_common/base/socket_cache';\nimport { localize }                  from 'App/i18n';\nimport {\n    LocalStore,\n    State }                          from '_common/storage';\nimport BinarySocketGeneral           from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore                     from './base-store';\nimport { buildCurrenciesList }       from './Modules/Trading/Helpers/currency';\nimport { setCurrencies }             from '../_common/base/currency_base';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched                   = '';\n    @observable switch_broadcast           = false;\n    @observable currencies_list            = {};\n    @observable residence_list             = [];\n    @observable selected_currency          = '';\n    @observable is_populating_account_list = false;\n    @observable website_status             = {};\n    @observable verification_code          = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual || this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id      = response.authorize.user_id;\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @computed\n    get is_website_status_ready () {\n        return this.website_status &&\n        this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach((param) => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.root_store.ui.removeAllNotifications();\n        this.setSwitched(loginid);\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n        this.root_store.ui.is_app_blurred = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        const authorize_response = await this.setUserLogin();\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n            } else { // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.send({ authorize: client.token }, { forced: true });\n            }\n        }\n\n        if (client && !client.is_virtual) {\n            BinarySocket.wait('landing_company', 'website_status').then(() => {\n                handleClientNotifications(client, this.root_store.ui.addNotification, this.loginid);\n            });\n        }\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addNotification({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'danger',\n                });\n                // request a logout\n                requestLogout();\n                this.root_store.modules.trade.clearContract();\n                return;\n            }\n\n            this.root_store.modules.portfolio.clearTable();\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotification({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({ event: 'log_out' });\n        this.loginid = null;\n        this.upgrade_info = undefined;\n        this.accounts = [];\n        this.currencies_list  = {};\n        this.selected_currency = '';\n        this.root_store.modules.smart_chart.should_refresh_active_symbols = true;\n        this.root_store.ui.removeAllNotifications();\n        this.root_store.modules.trade.onMount();\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country             : 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        account_list.forEach(function(account) {\n            if (!/^virtual|svg$/.test(account.landing_company_name)) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) { // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${  i}`]) {\n            const loginid = obj_params[`acct${  i}`];\n            const token   = obj_params[`token${  i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin() {\n        const obj_params = {};\n        const search     = window.location.search;\n        if (search) {\n            const arr_params = window.location.search.substr(1).split('&');\n            arr_params.forEach(function(param) {\n                if (param) {\n                    const param_value = param.split('=');\n                    if (param_value) {\n                        obj_params[param_value[0]] = param_value[1];\n                    }\n                }\n            });\n        }\n        const is_client_logging_in = obj_params.token1;\n\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, '/');\n\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.send({ authorize: obj_params.token1 });\n            this.is_populating_account_list = false;\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                if (account_list && !this.accounts) {\n                    this.storeClientAccounts(obj_params, account_list);\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    setVerificationCode(code) {\n        this.verification_code = code;\n        // TODO: add await if error handling needs to happen before AccountSignup is initialised\n        this.fetchResidenceList(); // Prefetch for use in account signup process\n    }\n\n    @action.bound\n    onSignup({ password, residence }) {\n        if (!this.verification_code || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(this.verification_code, password, residence).then(response => console.log(response));\n    }\n\n    fetchResidenceList() {\n        WS.residenceList().then(response => {\n            runInAction(() => {\n                this.residence_list = response.residence_list || [];\n            })\n        });\n    }\n}\n/* eslint-enable */\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class   = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header             : error.header,\n                message            : error.message,\n                redirect_label     : error.redirect_label,\n                redirectOnClick    : error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n}\n","import {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isLoginPages }       from '_common/base/login';\nimport { get as getLanguage } from '_common/language';\nimport BaseStore              from './base-store';\nimport { getAppId }           from '../config';\n\nexport default class GTMStore extends BaseStore {\n    @observable is_gtm_applicable = /^(16303|16929)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    @computed\n    get currency() {\n        return this.root_store.client.currency;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        return {\n            language: getLanguage(),\n            ...this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency : this.currency,\n                userId   : this.root_store.client.user_id,\n            },\n            ...this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            },\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                dataLayer.push({\n                    ...this.common_variables,\n                    ...data,\n                });\n            });\n        }\n    }\n\n    @action.bound\n    pushPurchaseData(contract_data) {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                // purchase_confirm: this.root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : this.root_store.modules.smart_chart.chart_type,\n                    granularity     : this.root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        this.pushDataLayer(data);\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import {\n    action,\n    observable }    from 'mobx';\nimport BinarySocket from '_common/base/socket_base';\nimport BaseStore    from '../../base-store';\n\nexport default class CashierStore extends BaseStore {\n    @observable deposit_url = '';\n\n    @action.bound\n    async onMount() {\n        // TODO: investigate: set timeout to clear deposit in case session expires after switch/idle?\n        if (this.deposit_url) {\n            return;\n        }\n        // else\n        const response_cashier = await BinarySocket.send({ cashier: 'deposit' });\n\n        // TODO: error handling\n\n        this.setDepositUrl(response_cashier.cashier);\n    }\n\n    @action.bound\n    setDepositUrl(url) {\n        this.deposit_url = url;\n    }\n\n    // @action.bound\n    // onUnmount() {\n    //     this.setDepositUrl(null);\n    // }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    CALLE      : 'ABOVE',\n    PUTE       : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN    : '#39b19d',\n    RED      : 'red',\n    GRAY     : '#999cac',\n    DARK_GRAY: '#555975',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info, is_dark_mode) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {   color        : is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY,\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import classNames           from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n    marker_config,\n    status,\n}) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            { label === marker_config.LINE_END.content_config.label &&\n                <Icon\n                    icon='IconEndTime'\n                    className={classNames('chart-marker-line__icon', {\n                        'chart-marker-line__icon--won' : status === 'won',\n                        'chart-marker-line__icon--lost': status === 'lost',\n                    })}\n                />\n            }\n            { label === marker_config.LINE_START.content_config.label &&\n                <Icon\n                    icon='IconStartTime'\n                    className={classNames(\n                        'chart-marker-line__icon',\n                        'chart-marker-line__icon--time',\n                    )}\n                />\n            }\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label        : PropTypes.string,\n    line_style   : PropTypes.string,\n    marker_config: PropTypes.object,\n    status       : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n}) => (\n    <div\n        className={classNames('chart-spot', className)}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\nimport { toMoment } from 'Utils/Date';\nimport Icon         from 'Assets/icon.jsx';\nimport MarkerSpot   from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <Icon icon='IconClock' height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won' : this.props.status === 'won',\n                                    'chart-spot-label__value-container--lost': this.props.status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>\n        );\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize }    from 'App/i18n';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpotLabel,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n    SPOT_ENTRY: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n    SPOT_SELL: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type          : 'LINE_END',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type          : 'LINE_PURCHASE',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type          : 'LINE_START',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type          : 'SPOT_ENTRY',\n        marker_config : MARKER_CONTENT_TYPES.SPOT_ENTRY,\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type          : 'SPOT_SELL',\n        marker_config : MARKER_CONTENT_TYPES.SPOT_SELL,\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type          : 'SPOT_EXIT',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type          : 'SPOT_MIDDLE',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    isUserSold,\n    getEndTime }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nexport const getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = (contract_info) => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        +end_time,\n        null,\n        {\n            status       : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            marker_config: MARKER_TYPES_CONFIG,\n        },\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        +contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        +contract_info.date_start,\n        null,\n        {\n            marker_config: MARKER_TYPES_CONFIG,\n        }\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info, decimal_places) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n\n    const entry_tick = decimal_places ? (+contract_info.entry_tick).toFixed(decimal_places) : contract_info.entry_tick;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, decimal_places, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = decimal_places ? (+contract_info.exit_tick).toFixed(decimal_places) : contract_info.exit_tick;\n\n    return createMarkerConfig(\n        !is_user_sold ? MARKER_TYPES_CONFIG.SPOT_EXIT.type : MARKER_TYPES_CONFIG.SPOT_SELL.type,\n        +contract_info.exit_tick_time,\n        +exit_tick,\n        !is_user_sold ?\n            {\n                spot_value: `${exit_tick}`,\n                spot_epoch: `${contract_info.exit_tick_time}`,\n                status    : `${+contract_info.profit > 0 ? 'won' : 'lost' }`,\n                align_label,\n                spot_count,\n            } : {},\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, decimal_places, idx) => {\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot       = decimal_places ? (+tick.tick).toFixed(decimal_places) : tick.tick;\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        +tick.epoch,\n        +spot,\n        {\n            spot_value : `${spot}`,\n            spot_epoch : `${tick.epoch}`,\n            align_label: tick.align_label,\n            spot_count,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { getUnderlyingPipSize } from 'Stores/Modules/Trading/Helpers/active-symbols';\nimport {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount }              from './chart-marker-helpers';\nimport {\n    getChartType,\n    getEndTime }                from './logic';\nimport { unique }               from '_common/utility';\nimport { MARKER_TYPES_CONFIG }  from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time);\n        if (contract_info.tick_count) {\n            addTickMarker(SmartChartStore, contract_info);\n        } else if (chart_type !== 'candle') {\n            addMarker(marker_spots, SmartChartStore, contract_info);\n        }\n        addMarker(marker_lines, SmartChartStore, contract_info);\n    }\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type] : createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addMarker = async (marker_obj, SmartChartStore, contract_info) => {\n    const decimal_places = await getUnderlyingPipSize(contract_info.underlying);\n    Object.keys(marker_obj).forEach(createMarker);\n\n    function createMarker(marker_type) {\n        if (marker_type in SmartChartStore.markers) return;\n\n        const marker_config = marker_obj[marker_type](contract_info, decimal_places);\n        if (marker_config) {\n            SmartChartStore.createMarker(marker_config);\n        }\n    }\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nconst addTickMarker = async (SmartChartStore, contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch').map(addLabelAlignment);\n    const decimal_places = await getUnderlyingPipSize(contract_info.underlying);\n\n    tick_stream.forEach((tick, idx) => {\n        const is_entry_spot  = idx === 0 && +tick.epoch !== contract_info.exit_tick_time;\n        const is_middle_spot = idx > 0 && +tick.epoch !== +contract_info.exit_tick_time;\n        const is_exit_spot   = +tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, idx) === contract_info.tick_count;\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info, decimal_places);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, decimal_places, idx);\n        } else if (is_exit_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, decimal_places, idx);\n        }\n\n        if (marker_config) {\n            if (marker_config.type in SmartChartStore.markers) return;\n\n            SmartChartStore.createMarker(marker_config);\n        }\n    });\n};\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from '../../../../App/Components/Elements/money.jsx';\nimport Localize     from '../../../../App/Components/Elements/localize.jsx';\n\nexport const contractSold = (currency, sold_for) => ({\n    header : localize('Contract sold'),\n    message: (\n        <Localize\n            i18n_default_text='Contract was sold for <0 />.'\n            components={[ <Money key={sold_for} amount={sold_for} currency={currency} /> ]}\n        />\n    ),\n    type                 : 'contract_sold',\n    size                 : 'small',\n    should_hide_close_btn: true,\n    is_auto_close        : true,\n});\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport { localize }           from 'App/i18n';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport { contractSold }       from '../Portfolio/Helpers/portfolio-notifcations';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    // --- Observable properties ---\n    @observable digits_info = observable.object({});\n    @observable sell_info   = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // ---- Replay Contract Config ----\n    @observable contract_id;\n    @observable indicative_status;\n    @observable contract_info   = observable.object({});\n    @observable is_static_chart = false;\n\n    // ---- Normal properties ---\n    chart_type          = 'mountain';\n    is_ongoing_contract = false;\n\n    // Replay Contract Indicative Movement\n    prev_indicative = 0;\n    indicative      = 0;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        if (contract_id) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n            this.smart_chart.setContractMode(true);\n            this.contract_id = contract_id;\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n            });\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id         = null;\n        this.digits_info         = {};\n        this.is_ongoing_contract = false;\n        this.is_static_chart     = false;\n        this.is_sell_requested   = false;\n        this.contract_info       = {};\n        this.indicative_status   = null;\n        this.prev_indicative     = 0;\n        this.indicative          = 0;\n        this.sell_info           = {};\n        this.smart_chart.setContractMode(false);\n        this.smart_chart.cleanupContractChartView();\n    }\n\n    @action.bound\n    populateConfig(response) {\n        if ('error' in response) {\n            this.has_error       = true;\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Add indicative status for contract\n        const prev_indicative  = this.prev_indicative;\n        const new_indicative   = +this.contract_info.bid_price;\n        this.indicative = new_indicative;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = this.indicative;\n\n        const end_time = getEndTime(this.contract_info);\n\n        this.smart_chart.updateMargin(\n            (end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n        this.handleDigits(this.contract_info);\n\n        this.smart_chart.setIsChartLoading(false);\n    }\n\n    @action.bound\n    async handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            const digit_info = await getDigitInfo(this.digits_info, contract_info);\n            extendObservable(this.digits_info, digit_info);\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && bid_price) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get contract_config() {\n        return getChartConfig(this.contract_info, this.is_digit_contract, false);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { localize }           from 'App/i18n';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartGranularity,\n    getChartType,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n\n    @observable has_error     = false;\n    @observable error_message = '';\n\n    // ---- Normal properties ---\n    chart_type          = 'mountain';\n    is_from_positions   = false;\n    is_ongoing_contract = false;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    drawChart() {\n        const {\n            date_expiry,\n            date_start,\n            tick_count,\n        } = this.contract_info;\n\n        const end_time = getEndTime(this.contract_info);\n\n        // Set chart granularity and chart_type\n        this.handleChartType(date_start, end_time || null);\n\n        // Set chart view to date_start\n        this.smart_chart.setChartView(date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            const is_one_tick_contract = (tick_count < 2);\n            if (!this.is_ongoing_contract && !is_one_tick_contract) {\n                // set to static chart to true for non one tick contract\n                // to avoid chart from reloading\n                this.smart_chart.setStaticChart(true);\n            } else {\n                this.smart_chart.setStaticChart(false);\n            }\n            this.smart_chart.setContractStart(date_start);\n            this.smart_chart.setContractEnd(end_time);\n\n            // Clear chart loading status once ChartListener returns ready for completed contract\n            if (!this.is_ongoing_contract) {\n                this.smart_chart.setIsChartLoading(false);\n            }\n\n        // setters for ongoing contracts, will only init once onMount after left_epoch is set\n        } else if (this.is_from_positions) {\n            this.smart_chart.setContractStart(date_start);\n        }\n\n        this.smart_chart.updateMargin((end_time || date_expiry) - date_start);\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n\n        if (this.smart_chart.is_chart_ready) {\n            this.smart_chart.setIsChartLoading(false);\n        }\n    }\n\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    drawContractStartTime(date_start, longcode, contract_id) {\n        this.contract_info.longcode = longcode;\n        createChartMarkers(this.root_store.modules.smart_chart, { date_start });\n        this.onMountBuy(contract_id);\n    }\n\n    @action.bound\n    onMountBuy(contract_id) {\n        if (contract_id === this.contract_id) return;\n        this.contract_id = contract_id;\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n        BinarySocket.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n        });\n    }\n\n    @action.bound\n    onMount(contract_id, is_from_positions) {\n        if (contract_id === this.contract_id) return;\n        this.smart_chart       = this.root_store.modules.smart_chart;\n        if (this.smart_chart.is_contract_mode) this.onCloseContract();\n        this.has_error         = false;\n        this.error_message     = '';\n        this.contract_id       = contract_id;\n        this.is_from_positions = is_from_positions;\n\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n\n        if (contract_id) {\n            if (this.is_from_positions) {\n                this.smart_chart.setIsChartLoading(true);\n                this.smart_chart.switchToContractMode(true);\n            }\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n            });\n        }\n    }\n\n    @action.bound\n    onCloseContract() {\n        this.forgetProposalOpenContract(this.contract_id, this.updateProposal);\n        this.chart_type          = 'mountain';\n        this.contract_id         = null;\n        this.contract_info       = {};\n        this.digits_info         = {};\n        this.error_message       = '';\n        this.has_error           = false;\n        this.is_from_positions   = false;\n        this.is_ongoing_contract = false;\n\n        if (!this.smart_chart) this.smart_chart = this.root_store.modules.smart_chart;\n        this.smart_chart.cleanupContractChartView();\n        this.smart_chart.applySavedTradeChartLayout();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.contract_info       = {};\n            this.contract_id         = null;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Set contract symbol if trade_symbol and contract_symbol don't match\n        if (this.root_store.modules.trade.symbol !== this.contract_info.underlying) {\n            this.root_store.modules.trade.symbol = this.contract_info.underlying;\n        }\n\n        this.drawChart(this.contract_info);\n\n        this.handleDigits(this.contract_info);\n    }\n\n    @action.bound\n    async handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            const digit_info = await getDigitInfo(this.digits_info, contract_info);\n            extendObservable(this.digits_info, digit_info);\n        }\n    }\n\n    handleChartType(start, expiry) {\n        if (!this.smart_chart) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n        }\n\n        const chart_type  = getChartType(start, expiry);\n        const granularity = getChartGranularity(start, expiry);\n\n        this.smart_chart.updateChartType(chart_type);\n        this.smart_chart.updateGranularity(granularity);\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    @action.bound\n    setIsDigitContract(contract_type) {\n        this.contract_info.contract_type = contract_type;\n    }\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import { getUnsupportedContracts } from 'Constants';\nimport { getSymbolDisplayName }    from '../../Trading/Helpers/active-symbols';\nimport { getMarketInformation }    from '../../../../Modules/Reports/Helpers/market-underlying';\n\nexport const formatPortfolioPosition = (portfolio_pos, active_symbols = []) => {\n    const purchase     = parseFloat(portfolio_pos.buy_price);\n    const payout       = parseFloat(portfolio_pos.payout);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(portfolio_pos.shortcode).underlying\n    );\n\n    return {\n        contract_info : portfolio_pos,\n        details       : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        display_name,\n        id            : portfolio_pos.contract_id,\n        indicative    : 0,\n        payout,\n        purchase,\n        reference     : +portfolio_pos.transaction_id,\n        type          : portfolio_pos.contract_type,\n        is_unsupported: !!getUnsupportedContracts()[portfolio_pos.contract_type],\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    reaction }                     from 'mobx';\nimport { createTransformer }       from 'mobx-utils';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport { contractSold }            from './Helpers/portfolio-notifcations';\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndTime,\n    isEnded,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n    getPositionById        = createTransformer((id) => this.positions.find((position) => +position.id === +id));\n\n    @action.bound\n    initializePortfolio = async () => {\n        this.is_loading = true;\n        await this.waitFor('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos, this.root_store.modules.trade.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            const res = await WS.portfolio();\n            const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n            if (!new_pos) return;\n            this.pushNewPosition(new_pos);\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            // Currently, if the contract has ended before the response is sent\n            // the Portfolio API returns an empty `contracts` array.\n            // This causes the contract to not be pushed to the `positions` property here.\n            // The statement below prevents accessing undefined values caused by the above explanation.\n            if (i === -1) return;\n\n            this.positions[i].is_loading = true;\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        if (proposal.barrier) portfolio_position.barrier = +proposal.barrier;\n        if (proposal.entry_spot) portfolio_position.entry_spot = +proposal.entry_spot;\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info    = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick = (portfolio_position.current_tick > getCurrentTick(proposal)) ?\n                portfolio_position.current_tick : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract_trade.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        this.positions[i].contract_info    = contract_response;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot        = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss      = +contract_response.profit;\n        this.positions[i].sell_time        = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price       = contract_response.sell_price;\n        this.positions[i].status           = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier    = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n\n        if (isEnded(contract_response)) {\n            // also forget for buy\n            [this.populateResultDetails, this.proposalOpenContractHandler].forEach(cb => {\n                WS.forget('proposal_open_contract', cb, { contract_id: contract_response.contract_id });\n            });\n        }\n    };\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos, this.root_store.modules.trade.active_symbols));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const { is_contract_mode } = this.root_store.modules.smart_chart;\n        const contract_idx         = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n\n        // check if contract is in view in contract_mode before removing contract details from chart\n        if (is_contract_mode && (+this.root_store.modules.contract_trade.contract_id === +contract_id)) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise(async (resolve) => {\n            await this.clearTable();\n            await WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(() => this.root_store.client.is_logged_in, () => {\n                    if (this.root_store.client.is_logged_in) {\n                        this.initializePortfolio();\n                    }\n                });\n            }\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions_totals() {\n        let indicative = 0;\n        let purchase   = 0;\n\n        this.active_positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions.filter((portfolio_pos) => !portfolio_pos.result);\n    }\n\n    @computed\n    get all_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n}\n","import {\n    epochToMoment,\n    toMoment,\n} from 'Utils/Date';\n\nconst getDateTo = (partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    } else if (partial_fetch_time) {\n        return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (should_load_partially, partial_fetch_time, date_from, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (date_from, should_load_partially, partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return (!!date_from || should_load_partially);\n    }\n    return should_load_partially ? (partial_fetch_time || date_from) : !!date_from || false;\n};\n\nconst getDateBoundaries = (date_from, date_to, partial_fetch_time, should_load_partially = false) => (\n    {\n        // eslint-disable-next-line max-len\n        ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to)) && { date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to) },\n        ...(date_to || should_load_partially) && { date_to: getDateTo(partial_fetch_time, date_to) },\n    }\n);\n\nexport default getDateBoundaries;\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toMoment }             from 'Utils/Date';\nimport { getMarketInformation } from '../../../../Modules/Reports/Helpers/market-underlying';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatProfitTableTransactions = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time           = `${toMoment(+transaction.purchase_time).format(format_string)}`;\n    const sell_time               = `${toMoment(+transaction.sell_time).format(format_string)}`;\n    const payout                  = parseFloat(transaction.payout);\n    const sell_price              = parseFloat(transaction.sell_price);\n    const buy_price               = parseFloat(transaction.buy_price);\n    const profit_loss             = formatMoney(currency, Number(sell_price - buy_price), true);\n    const should_exclude_currency = true;\n    const display_name            = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode).underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout    : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n            sell_price: isNaN(sell_price) ? '-' : formatMoney(currency, sell_price, should_exclude_currency),\n            buy_price : isNaN(buy_price) ? '-' : formatMoney(currency, buy_price, should_exclude_currency),\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n        },\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                        from 'mobx';\nimport { WS }                            from 'Services';\nimport { toMoment }                      from 'Utils/Date';\nimport getDateBoundaries                 from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore                         from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    @observable data           = [];\n    @observable date_from      =  null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n    @observable has_loaded_all = false;\n    @observable is_loading     = false;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get total_profit () {\n        return this.data.reduce((previous, current) => {\n            const buy_price  = Number(parseFloat(current.buy_price));\n            const sell_price = Number(parseFloat(current.sell_price));\n            const pl         = sell_price - buy_price;\n            return previous + pl;\n        }, 0);\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.profitTable(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially)\n        );\n\n        this.profitTableResponseHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    profitTableResponseHandler(response, should_load_partially = false) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction => formatProfitTableTransactions(\n                transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all      = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading          = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    @computed\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach((transaction) => {\n            if (transaction.profit_loss.indexOf('-') !== -1) {\n                profit_loss -= parseFloat(transaction.profit_loss.split('-')[1]);\n            } else {\n                profit_loss += parseFloat(transaction.profit_loss);\n            }\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            this[`date_${key}`] = date_values[key];\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n}\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport BinarySocket           from '_common/base/socket_base';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable chart_type;\n    @observable granularity;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n    barriers_empty_array = [];\n    markers_empty_array = [];\n\n    @observable is_contract_mode = false;\n    @observable is_static_chart  = false;\n    @observable is_title_enabled = true;\n\n    @observable start_epoch;\n    @observable end_epoch;\n    @observable margin;\n\n    @observable scroll_to_left_epoch        = null;\n    @observable scroll_to_left_epoch_offset = 0;\n\n    @observable chart_id             = 'trade';\n    @observable is_chart_loading     = false;\n    @observable is_chart_ready       = false;\n    @observable should_import_layout = false;\n    @observable should_export_layout = false;\n    @observable should_clear_chart   = false;\n    @observable trade_chart_layout   = null;\n    @observable should_refresh_active_symbols = false;\n    trade_chart_symbol               = null;\n    trade_chart_granularity          = null;\n    trade_chart_type                 = null;\n\n    @action.bound\n    switchToContractMode(is_from_positions = false, granularity = 0, chart_type = 'mountain') {\n        this.saveAndClearTradeChartLayout('contract');\n        this.setContractMode(true);\n        if (!is_from_positions) {\n            this.updateGranularity(granularity);\n            this.updateChartType(chart_type);\n        }\n    }\n\n    @action.bound\n    getChartStatus(status) {\n        this.is_chart_ready = status;\n    }\n\n    @action.bound\n    updateChartType(type) {\n        this.chart_type = type;\n        this.trade_chart_type = type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        this.trade_chart_granularity = granularity;\n    }\n\n    @action.bound\n    updateMargin(duration) {\n        this.margin = Math.floor(!this.granularity ?\n            (Math.max(300, (30 * duration) / (60 * 60) || 0))\n            :\n            3 * this.granularity);\n    }\n\n    @action.bound\n    updateEpochScrollToValue(epoch) {\n        this.scroll_to_left_epoch = epoch;\n    }\n\n    @action.bound\n    updateEpochScrollToOffset(offset) {\n        this.scroll_to_left_epoch_offset = offset;\n    }\n\n    @action.bound\n    cleanupContractChartView() {\n        this.margin = null;\n        this.removeBarriers();\n        this.removeMarkers();\n        this.resetScrollToLeft();\n        this.setContractMode(false);\n        this.setContractStart(null);\n        this.setContractEnd(null);\n        this.setStaticChart(false);\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    resetScrollToLeft() {\n        this.scroll_to_left_epoch = null;\n        this.scroll_to_left_epoch_offset = null;\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onMount = () => {\n        // remove any barriers and markers before chart is ready\n        if (this.trade_chart_layout && !isEmptyObject(this.trade_chart_layout)) {\n            this.applySavedTradeChartLayout();\n        }\n    };\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.trade_chart_layout = null;\n        this.should_import_layout = false;\n        this.setIsChartLoading(false);\n        this.cleanupContractChartView();\n    };\n\n    // --------- Set Contract Scroll to Left ---------\n    @action.bound\n    setChartView(scroll_to_left_epoch) {\n        this.updateEpochScrollToOffset(1);\n        this.updateEpochScrollToValue(scroll_to_left_epoch);\n    }\n\n    // --------- All Contracts ---------\n    @action.bound\n    setContractStart(start) {\n        this.start_epoch = start;\n    }\n\n    @action.bound\n    setContractEnd(end) {\n        this.end_epoch = end;\n    }\n\n    @action.bound\n    setIsChartLoading(bool) {\n        this.is_chart_loading = bool;\n    }\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, barrier_config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, barrier_config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @action.bound\n    saveAndClearTradeChartLayout(chart_id) {\n        this.should_export_layout    = true;\n        this.should_import_layout    = false;\n        this.trade_chart_symbol      = this.root_store.modules.trade.symbol;\n        this.trade_chart_granularity = this.root_store.modules.smart_chart.granularity;\n        this.trade_chart_type        = this.root_store.modules.smart_chart.chart_type;\n        this.chart_id                = chart_id;\n    }\n\n    @action.bound\n    applySavedTradeChartLayout() {\n        if (!this.trade_chart_layout) return;\n\n        this.setIsChartLoading(true);\n        this.should_export_layout = false;\n        this.should_import_layout = true;\n        this.should_clear_chart   = false;\n        this.chart_id             = 'trade';\n\n        this.trade_chart_layout.isDone = action(() => {\n            this.trade_chart_layout   = null;\n            this.should_import_layout = false;\n\n            // Reset back to symbol before loading contract if trade_symbol and contract_symbol don't match\n            if (this.trade_chart_symbol !== this.root_store.modules.trade.symbol) {\n                this.root_store.modules.trade.symbol = this.trade_chart_symbol;\n            }\n            WS.forgetAll('proposal').then(this.root_store.modules.trade.requestProposal());\n\n            // Clear chart loading status once ChartListener returns ready\n            if (this.is_chart_ready) {\n                this.setIsChartLoading(false);\n            }\n        });\n    }\n\n    @action.bound\n    exportLayout(layout) {\n        this.trade_chart_layout = layout;\n        this.should_clear_chart = true;\n    }\n\n    @action.bound\n    setStaticChart(bool) {\n        this.is_static_chart = bool;\n    }\n\n    @computed\n    get barriers_array() {\n        let has_differing = false;\n        const barriers_array = barriersObjectToArray(this.barriers, []);\n\n        if (this.barriers_empty_array.length !== barriers_array.length) {\n            has_differing = true;\n        } else {\n            this.barriers_empty_array.forEach(barrier => {\n                barriers_array.forEach(next_barrier => {\n                    Object.keys(barrier).forEach(key => {\n                        if (barrier[key] !== next_barrier[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.barriers_empty_array = [];\n        } else {\n            this.barriers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.barriers, this.barriers_empty_array);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        let has_differing   = false;\n        const markers_array = barriersObjectToArray(this.markers, []);\n\n        if (this.markers_empty_array.length !== markers_array.length) {\n            has_differing = true;\n        } else {\n            this.markers_empty_array.forEach(marker => {\n                markers_array.forEach(next_marker => {\n                    Object.keys(marker).forEach(key => {\n                        if (marker[key] !== next_marker[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.markers_empty_array = [];\n        } else {\n            this.markers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.markers, this.markers_empty_array);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() {\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation            : false, // ui.is_chart_asset_info_visible,\n            countdown                   : ui.is_chart_countdown_visible,\n            isHighestLowestMarkerEnabled: false, // !this.is_contract_mode, // TODO: Pending UI\n            lang                        : common.current_language,\n            position                    : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme                       : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        if (request_object.active_symbols) {\n            if (this.should_refresh_active_symbols) {\n                return WS.sendRequest(request_object, { forced: true });\n            }\n            return BinarySocket.wait('active_symbols');\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                     from 'mobx';\nimport { WS }                         from 'Services';\nimport { toMoment }                   from 'Utils/Date';\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries              from '../Profit/Helpers/format-request';\nimport BaseStore                      from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data               = [];\n        this.has_loaded_all     = false;\n        this.is_loading         = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially),\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            if (date_values[key]) {\n                this[`date_${key}`] = date_values[key];\n            }\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll  = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toTitleCase }          from '_common/string_util';\nimport { localize }             from 'App/i18n';\nimport { getMarketInformation } from 'Modules/Reports/Helpers/market-underlying';\nimport { toMoment }             from 'Utils/Date';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatStatementTransaction = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time        = toMoment(transaction.transaction_time).format(format_string);\n    const payout                  = parseFloat(transaction.payout);\n    const amount                  = parseFloat(transaction.amount);\n    const balance                 = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n    const shortcode               = ['buy', 'sell'].includes(transaction.action_type) ? transaction.shortcode : null;\n    const display_name            = shortcode ? getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(shortcode).underlying\n    ) : '';\n\n    return {\n        action     : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date       : transaction_time,\n        display_name,\n        refid      : transaction.transaction_id,\n        payout     : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount     : isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance    : isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc       : transaction.longcode.replace(/\\n/g, '<br />'),\n        id         : transaction.contract_id,\n        app_id     : transaction.app_id,\n        shortcode,\n        action_type: transaction.action_type,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize }           from 'App/i18n';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Expiry time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isVisible }                       from '_common/common_functions';\nimport {\n    getPropertyValue,\n    isDeepEqual }                          from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\n\nconst map_error_field = {\n    barrier    : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response) => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return (el_error && isVisible(el_error)) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id               : proposal.id || '',\n        has_error        : !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        has_increased,\n        message          : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout           : proposal.payout,\n        profit           : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns          : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n    reaction,\n    runInAction }                     from 'mobx';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from 'App/i18n';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                from '_common/base/currency_base';\nimport { WS }                         from 'Services';\nimport { isDigitTradeType }           from 'Modules/Trading/Helpers/digits';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport getValidationRules             from './Constants/validation-rules';\nimport {\n    pickDefaultSymbol,\n    showUnavailableLocationError,\n    isMarketClosed,\n}                                     from './Helpers/active-symbols';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract-type';\nimport {\n    convertDurationLimit,\n    resetEndTimeOnVolatilityIndices } from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalErrorField,\n    getProposalInfo }                 from './Helpers/proposal';\nimport { BARRIER_COLORS }             from '../SmartChart/Constants/barriers';\nimport BaseStore                      from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n    @observable is_market_closed = false;\n    @observable previous_symbol = '';\n    @observable active_symbols = [];\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('authorize', 'website_status');\n        action(async() => {\n            this.active_symbols = await WS.activeSymbols().active_symbols;\n        });\n    };\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'is_equal',\n            'last_digit',\n            'start_date',\n            'start_time',\n            'symbol',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n            }\n        );\n    }\n\n    @computed\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols\n            .some(symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1);\n    }\n\n    @action.bound\n    refresh = () => {\n        WS.forgetAll('proposal');\n    };\n\n    @action.bound\n    clearContract = () => {\n        if (this.root_store.modules.smart_chart.is_contract_mode) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    };\n\n    @action.bound\n    setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(this.active_symbols),\n            });\n        }\n    }\n\n    @action.bound\n    async setActiveSymbols() {\n        const { active_symbols, error } = this.smart_chart.should_refresh_active_symbols ?\n            // if SmartCharts has requested active_symbols, we wait for the response\n            await BinarySocket.wait('active_symbols')\n            : // else requests new active_symbols\n            await WS.activeSymbols({ forced: true });\n\n        if (error) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n            this.root_store.ui.setAppLoading(false);\n            return;\n        } else if (!active_symbols || !active_symbols.length) {\n            showUnavailableLocationError(this.root_store.common.showError);\n            this.root_store.ui.setAppLoading(false);\n            return;\n        }\n\n        this.processNewValuesAsync({ active_symbols });\n    }\n\n    @action.bound\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                });\n            });\n        }\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        this.smart_chart      = this.root_store.modules.smart_chart;\n        this.currency         = this.root_store.client.currency;\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n\n        await BinarySocket.wait('authorize');\n        await this.setActiveSymbols();\n        runInAction(async() => {\n            this.setDefaultSymbol();\n            await this.setContractTypes();\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n                });\n            });\n        });\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        // save trade_chart_symbol upon user change\n        if (name === 'symbol' && value) {\n            this.root_store.modules.smart_chart.trade_chart_symbol = value;\n        }\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.validateAllProperties();\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    @action.bound\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_purchase_enabled) {\n            this.smart_chart.updateBarrierShade(is_over, contract_type);\n        }\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    this.smart_chart.cleanupContractChartView();\n                    this.smart_chart.applySavedTradeChartLayout();\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    this.smart_chart.switchToContractMode();\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    const {\n                        contract_id,\n                        longcode,\n                        start_time,\n                    } = response.buy;\n                    // toggle smartcharts to contract mode\n                    if (contract_id) {\n                        // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                        // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                        // and then set the chart view to the start_time\n                        this.smart_chart.setChartView(start_time);\n                        // draw the start time line and show longcode then mount contract\n                        this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    this.root_store.gtm.pushPurchaseData(contract_data);\n                } else if (response.error) {\n                    // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                    this.disablePurchaseButtons();\n                    this.root_store.common.services_error = {\n                        type: response.msg_type,\n                        ...response.error,\n                    };\n                    this.root_store.ui.toggleServicesErrorModal(true);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value    = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons  = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, (el) => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, (el) => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false, obj_old_values = {}) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1     = '';\n                    this.barrier_2     = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                this.debouncedProposal();\n            }\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n            this.root_store.modules.contract_trade.setIsDigitContract(Object.keys(this.proposal_requests)[0]);\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            const barrier_config = { color };\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange, barrier_config);\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n        } else {\n            this.validateAllProperties();\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name : 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                { currency: this.currency }\n            );\n            await this.clearContract();\n            await this.resetErrorServices();\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    @action.bound\n    async onMount() {\n        this.root_store.ui.setAppLoading(false);\n        this.onLoadingMount();\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    onLoadingMount() {\n        const first_timeout = setTimeout(() => {\n            const loading_message = localize('Your network connection might be slow.');\n            const secondary_message = localize('Please wait for the page to finish loading.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 8000);\n\n        const second_timeout = setTimeout(() => {\n            const loading_message = localize('This page is taking too long to load.');\n            const secondary_message = localize('Please wait for the page to finish loading or check your network connection.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 15000);\n\n        const loading_interval = setInterval(() => {\n            if (this.smart_chart) {\n                if (this.smart_chart.is_chart_ready && this.is_trade_component_mounted) {\n                    this.root_store.ui.setAppLoading(false);\n                    clearInterval(loading_interval);\n                    clearTimeout(first_timeout);\n                    clearTimeout(second_timeout);\n                }\n            }\n        }, 400);\n    }\n\n    @action.bound\n    restoreTradeChart() {\n        const smart_chart_store = this.root_store.modules.smart_chart;\n        if (smart_chart_store.trade_chart_symbol &&\n            (smart_chart_store.trade_chart_symbol !== this.symbol)) {\n            this.symbol = smart_chart_store.trade_chart_symbol;\n        }\n        if (smart_chart_store.trade_chart_granularity &&\n            (smart_chart_store.trade_chart_granularity !== smart_chart_store.granularity)) {\n            smart_chart_store.granularity = smart_chart_store.trade_chart_granularity;\n        }\n        if (smart_chart_store.trade_chart_chart_type !== smart_chart_store.chart_type) {\n            smart_chart_store.chart_type = smart_chart_store.trade_chart_type;\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        WS.forgetAll('proposal');\n        this.resetErrorServices();\n        this.restoreTradeChart();\n        this.is_trade_component_mounted = false;\n        // clear url query string\n        window.history.pushState(null, null, window.location.pathname);\n    }\n}\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange, barrier_config) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n        barrier_config,\n    );\n};\n","import CashierStore        from './Cashier/cashier-store';\nimport ContractReplayStore from './Contract/contract-replay-store';\nimport ContractTradeStore  from './Contract/contract-trade-store';\nimport PortfolioStore      from './Portfolio/portfolio-store';\nimport ProfitTableStore    from './Profit/profit-store';\nimport SmartChartStore     from './SmartChart/smart-chart-store';\nimport StatementStore      from './Statement/statement-store';\nimport TradeStore          from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier         = new CashierStore({ root_store });\n        this.contract_replay = new ContractReplayStore({ root_store });\n        this.contract_trade  = new ContractTradeStore({ root_store });\n        this.portfolio       = new PortfolioStore({ root_store });\n        this.profit_table    = new ProfitTableStore({ root_store });\n        this.smart_chart     = new SmartChartStore({ root_store });\n        this.statement       = new StatementStore({ root_store });\n        this.trade           = new TradeStore({ root_store });\n\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }             from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH }       from 'Constants/ui';\nimport { unique }            from '_common/utility';\nimport BaseStore             from './base-store';\nimport { sortNotifications } from '../App/Components/Elements/NotificationMessage';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n    @observable is_reports_visible         = false;\n\n    @observable is_cashier_modal_on     = false;\n    @observable is_dark_mode_on         = false;\n    @observable is_settings_modal_on    = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable is_loading              = true;\n    @observable is_slow_loading         = false;\n    @observable slow_loading_status     = [];\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible             = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible       = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable notification_messages = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    // purchase button states\n    @observable purchase_states = [ false, false ];\n\n    @observable is_fully_blurred = false;\n    @observable is_app_blurred   = false;\n    @observable is_route_blurred = false;\n    @observable show_positions_toggle = true;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    showRouteBlur() {\n        this.is_route_blurred = true;\n    }\n\n    @action.bound\n    hideRouteBlur() {\n        this.is_route_blurred = false;\n    }\n\n    @action.bound\n    showAppBlur() {\n        this.is_app_blurred = true;\n    }\n\n    @action.bound\n    hideAppBlur() {\n        this.is_app_blurred = false;\n    }\n\n    @action.bound\n    showFullBlur() {\n        this.is_fully_blurred = true;\n    }\n\n    @action.bound\n    hideFullBlur() {\n        this.is_fully_blurred = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    setAppLoading(is_visible) {\n        this.is_loading = is_visible;\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, (el) => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [ false, false ];\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // toggleChartAssetInfo() {\n    //     this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    // }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    showPositionsFooterToggle() {\n        this.show_positions_toggle = true;\n    }\n\n    @action.bound\n    hidePositionsFooterToggle() {\n        this.show_positions_toggle = false;\n    }\n\n    @action.bound\n    toggleCashierModal() {\n        this.is_cashier_modal_on = !this.is_cashier_modal_on;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addNotification(notification) {\n        this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n    }\n\n    @action.bound\n    removeNotification(notification) {\n        const index = this.notification_messages.indexOf(notification);\n        if (index > -1) {\n            this.notification_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllNotifications() {\n        this.notification_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    setSlowLoading(status, message) {\n        this.is_slow_loading     = status;\n        this.slow_loading_status = message;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n}\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport GTMStore     from './gtm-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n        this.gtm     = new GTMStore(this);\n    }\n}\n","import { configure }        from 'mobx';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\n\nconfigure({ enforceActions: 'observed' });\n\nconst initStore = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport ReactDOM                    from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Lazy                        from './Containers/Lazy';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport './i18n';\n// eslint-disable-next-line import/extensions\nimport initStore                   from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n// Check if device is touch capable\nconst isTouchDevice = 'ontouchstart' in document.documentElement;\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    return (\n        <Router basename={/^\\/br_/.test(l.pathname) ? `/${base}` : null}>\n            <MobxProvider store={root_store}>\n                {\n                    root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice) ?\n                        <Lazy\n                            ctor={() => import(/* webpackChunkName: \"work-in-progress\" */'./Containers/Wip')}\n                            should_load={root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice)}\n                            has_progress={true}\n                            is='Wip'\n                        /> :\n                        <React.Fragment>\n                            <Header />\n                            <ErrorBoundary>\n                                <AppContents>\n                                    <Routes />\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"push-notification\" */'./Containers/push-notification.jsx')}\n                                        should_load={true}\n                                        has_progress={false}\n                                        is='PushNotification'\n                                    />\n                                </AppContents>\n                                <Lazy\n                                    ctor={() => import(/* webpackChunkName: \"modals\" */'./Containers/Modals')}\n                                    is='Modals'\n                                    has_progress={true}\n                                    should_load={true}\n                                />\n                            </ErrorBoundary>\n                            <Footer />\n                        </React.Fragment>\n                }\n            </MobxProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore();\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport ReactDOM             from 'react-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst FadeIn = posed.span({\n    enter: {\n        opacity   : 1,\n        transition: {\n            duration: 150,\n        },\n    },\n    exit: {\n        opacity   : 0,\n        transition: {\n            duration: 150,\n        },\n    },\n});\n\nclass PopoverBubble extends React.PureComponent {\n    calculatePosition = () => {\n        const { alignment, target_rectangle, margin = 0 } = this.props;\n\n        switch (alignment) {\n            case 'top': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                bottom   : (window.innerHeight - target_rectangle.top) + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'bottom': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                top      : target_rectangle.bottom + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'left': return {\n                right    : (window.innerWidth - target_rectangle.left) + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            case 'right': return {\n                left     : target_rectangle.right + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            default: return {\n                left: target_rectangle.left,\n                top : target_rectangle.top,\n            };\n        }\n    };\n\n    render() {\n        const {\n            alignment,\n            className,\n            has_error,\n            icon,\n            is_open,\n            message,\n            target_rectangle,\n        } = this.props;\n\n        if (!target_rectangle) return null;\n\n        const popover_bubble = (\n            <PoseGroup>\n                { is_open &&\n                <FadeIn key='fade_in' initialPose='exit' style={{ position: 'fixed', zIndex: 999 }}>\n                    <span\n                        style={ target_rectangle ? this.calculatePosition() : {}}\n                        data-popover-pos={alignment}\n                        className={classNames(\n                            className,\n                            'popover__bubble',\n                            { 'popover__bubble--error': has_error },\n                        )}\n                    >\n                        { icon === 'info' &&\n                            <i className='popover__bubble__icon'>\n                                <Icon icon='IconInfoBlue' />\n                            </i>\n                        }\n\n                        <span className='popover__bubble__text'>\n                            { message }\n                        </span>\n                        <span className='popover__bubble__arrow' />\n                    </span>\n                </FadeIn>\n                }\n            </PoseGroup>\n        );\n\n        return ReactDOM.createPortal(\n            popover_bubble,\n            document.getElementById('deriv_app')\n        );\n    }\n}\n\nPopoverBubble.propTypes = {\n    alignment       : PropTypes.string,\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_error       : PropTypes.bool,\n    icon            : PropTypes.string,\n    is_open         : PropTypes.bool,\n    margin          : PropTypes.number,\n    message         : PropTypes.string.isRequired,\n    target_rectangle: PropTypes.object,\n};\n\nexport default PopoverBubble;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport Icon          from 'Assets/icon.jsx';\nimport PopoverBubble from './popover-bubble.jsx';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open         : false,\n            target_rectangle: null,\n        };\n        this.target_reference = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            is_open         : this.props.has_error,\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleOpen = () => {\n        this.setState({\n            is_open         : Boolean(this.props.message),\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleClose = () => this.setState({ is_open: false });\n\n    render() {\n        const {\n            alignment,\n            children,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            disable_target_icon,\n            has_error,\n            icon,\n            margin,\n            message,\n        } = this.props;\n\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n        return (\n            <div\n                className='popover'\n                onMouseEnter={this.toggleOpen}\n                onMouseLeave={this.toggleClose}\n            >\n                <div className={classNames(classNameTarget, 'popover__target')} ref={this.target_reference}>\n                    { !disable_target_icon &&\n                        <i className={message ? 'popover__target__icon' : 'popover__target__icon--disabled'}>\n                            {(icon === 'info')     && <Icon icon='IconInfoOutline' className={icon_class_name} /> }\n                            {(icon === 'question') && <Icon icon='IconQuestion'    className={icon_class_name} />}\n                            {(icon === 'dot')      && <Icon icon='IconRedDot'      className={icon_class_name} />}\n                        </i>\n                    }\n\n                    { children }\n                </div>\n\n                <PopoverBubble\n                    alignment={alignment}\n                    className={classNameBubble}\n                    has_error={has_error}\n                    icon={icon}\n                    is_open={this.state.is_open}\n                    target_rectangle={this.state.target_rectangle}\n                    margin={margin}\n                    message={message}\n                />\n            </div>\n        );\n    }\n}\n\nPopover.propTypes = {\n    alignment          : PropTypes.string,\n    children           : PropTypes.node,\n    classNameBubble    : PropTypes.string,\n    classNameTarget    : PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    disable_target_icon: PropTypes.bool,\n    has_error          : PropTypes.bool,\n    icon               : PropTypes.string,\n    margin             : PropTypes.number,\n    message            : PropTypes.string,\n};\n\nexport default Popover;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","const Client              = require('./client_base');\nconst getElementById      = require('../common_functions').getElementById;\nconst getLanguage         = require('../language').get;\nconst isMobile            = require('../os_detect').isMobile;\nconst isStorageSupported  = require('../storage').isStorageSupported;\nconst LocalStore          = require('../storage').LocalStore;\nconst urlForCurrentDomain = require('../url').urlForCurrentDomain;\nconst domain_app_ids      = require('../../config').domain_app_ids;\nconst getAppId            = require('../../config').getAppId;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const loginUrl = () => {\n        const server_url         = localStorage.getItem('config.server_url');\n        const language           = getLanguage();\n        const signup_device      = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries  = `&signup_device=${signup_device}${date_first_contact ? `&date_first_contact=${date_first_contact}` : ''}`;\n        const default_binary_url = `https://oauth.binary.com/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n        }\n        if (getAppId === domain_app_ids['deriv.app']) {\n            return default_binary_url;\n        }\n\n        return urlForCurrentDomain(default_binary_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => (`${loginUrl()}&social_signup=${brand}`);\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', (e) => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        isLoginPages,\n        initOneAll,\n    };\n})();\n\nmodule.exports = Login;\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains as supported \"production domains\"\n    'deriv.app': 16929,\n};\n\nconst getCurrentProductionDomain = () => (\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => (new RegExp(`.${domain}$`, 'i').test(window.location.hostname)))\n);\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.deriv\\.app/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 16303;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || 16929;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    domain_app_ids,\n    getCurrentProductionDomain,\n    isProduction,\n    getAppId,\n    getSocketURL,\n};\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {has_sign && sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import { getUnderlyingPipSize }      from 'Stores/Modules/Trading/Helpers/active-symbols';\nimport { getLastTickFromTickStream } from './logic';\n\nexport const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = async (digits_info, contract_info) => {\n    const { tick_stream } = contract_info;\n    const { tick, epoch } = getLastTickFromTickStream(tick_stream);\n\n    if (!tick || !epoch) return {}; // filter out empty responses\n\n    const decimal_places = await getUnderlyingPipSize(contract_info.underlying);\n    const spot           = decimal_places ? tick.toFixed(decimal_places) : tick;\n\n    const current = (epoch in digits_info) ? {} : // filter out duplicated responses\n        createDigitInfo(spot, epoch);\n\n    return {\n        ...current,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nclass Icon extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        /* When adding a new icon, arrange it by following the ascending file system arrangement */\n        this.icons = {\n            // Common\n            IconArrowBold         : React.lazy(() => import('./Common/icon-arrow-bold.jsx')),\n            IconArrow             : React.lazy(() => import('./Common/icon-arrow.jsx')),\n            IconBack              : React.lazy(() => import('./Common/icon-back.jsx')),\n            IconCalendarToday     : React.lazy(() => import('./Common/icon-calendar-today.jsx')),\n            IconCalendar          : React.lazy(() => import('./Common/icon-calendar.jsx')),\n            IconChevronDoubleLeft : React.lazy(() => import('./Common/icon-chevron-double-left.jsx')),\n            IconChevronDoubleRight: React.lazy(() => import('./Common/icon-chevron-double-right.jsx')),\n            IconChevronLeft       : React.lazy(() => import('./Common/icon-chevron-left.jsx')),\n            IconChevronRight      : React.lazy(() => import('./Common/icon-chevron-right.jsx')),\n            IconClear             : React.lazy(() => import('./Common/icon-clear.jsx')),\n            IconClock             : React.lazy(() => import('./Common/icon-clock.jsx')),\n            IconClose             : React.lazy(() => import('./Common/icon-close.jsx')),\n            IconCountryFlag       : React.lazy(() => import('./Common/icon-country-flag.jsx')),\n            IconDanger            : React.lazy(() => import('./Common/icon-danger.jsx')),\n            IconDeposit           : React.lazy(() => import('./Common/icon-deposit.jsx')), // TODO: update big when design is ready\n            IconDepositSmall      : React.lazy(() => import('./Common/icon-deposit-small.jsx')),\n            IconExclamation       : React.lazy(() => import('./Common/icon-exclamation.jsx')),\n            IconFlag              : React.lazy(() => import('./Common/icon-flag.jsx')),\n            IconInfoBlue          : React.lazy(() => import('./Common/icon-info-blue.jsx')),\n            IconInfoOutline       : React.lazy(() => import('./Common/icon-info-outline.jsx')),\n            IconInformation       : React.lazy(() => import('./Common/icon-information.jsx')),\n            IconMinimize          : React.lazy(() => import('./Common/icon-minimize.jsx')),\n            IconMinus             : React.lazy(() => import('./Common/icon-minus.jsx')),\n            IconPlus              : React.lazy(() => import('./Common/icon-plus.jsx')),\n            IconQuestion          : React.lazy(() => import('./Common/icon-question.jsx')),\n            IconRedDot            : React.lazy(() => import('./Common/icon-red-dot.jsx')),\n            IconSuccess           : React.lazy(() => import('./Common/icon-success.jsx')),\n            IconWarning           : React.lazy(() => import('./Common/icon-warning.jsx')),\n            IconWip               : React.lazy(() => import('./Common/icon-wip.jsx')),\n            IconWithdrawal        : React.lazy(() => import('./Common/icon-withdrawal.jsx')), // TODO: update big when design is ready\n            IconWithdrawalSmall   : React.lazy(() => import('./Common/icon-withdrawal-small.jsx')),\n\n            // Contract\n            ContractIconClose: React.lazy(() => import('./Contract/icon-close.jsx')),\n            IconEndTime      : React.lazy(() => import('./Contract/icon-end-time.jsx')),\n            ContractIconFlag : React.lazy(() => import('./Contract/icon-flag.jsx')),\n            IconStartTime    : React.lazy(() => import('./Contract/icon-start-time.jsx')),\n            IconTick         : React.lazy(() => import('./Contract/icon-tick.jsx')),\n\n            // Modal\n            ModalIconClose: React.lazy(() => import('./Modal/icon-close.jsx')),\n\n            // Footer\n            IconMaximize : React.lazy(() => import('./Footer/icon-maximize.jsx')),\n            IconPositions: React.lazy(() => import('./Footer/icon-positions.jsx')),\n            IconSettings : React.lazy(() => import('./Footer/icon-settings.jsx')),\n\n            // Header\n            IconAccountsCurrency: React.lazy(() => import('./Header/AccountsCurrency/icon_accounts_currency.jsx')),\n            IconLogout          : React.lazy(() => import('./Header/Drawer/icon-logout.jsx')),\n            IconBell            : React.lazy(() => import('./Header/NavBar/icon-bell.jsx')),\n            IconCashier         : React.lazy(() => import('./Header/NavBar/icon-cashier.jsx')),\n            IconDeriv           : React.lazy(() => import('./Header/NavBar/icon-deriv.jsx')),\n            IconHamburger       : React.lazy(() => import('./Header/NavBar/icon-hamburger.jsx')),\n            IconPortfolio       : React.lazy(() => import('./Header/NavBar/icon-portfolio.jsx')),\n            IconReports         : React.lazy(() => import('./Header/NavBar/icon-reports.jsx')),\n            IconTrade           : React.lazy(() => import('./Header/NavBar/icon-trade.jsx')),\n\n            // Reports\n            IconDemo                : React.lazy(() => import('./Reports/icon-demo.jsx')),\n            IconOpenPositions       : React.lazy(() => import('./Reports/icon-open-positions.jsx')),\n            IconProfitTable         : React.lazy(() => import('./Reports/icon-profit-table.jsx')),\n            IconStatement           : React.lazy(() => import('./Reports/icon-statement.jsx')),\n            IconCalendarForwardToday: React.lazy(() => import('./Reports/ic-calendar-forwardtoday.jsx')),\n\n            // Settings\n            IconCharts  : React.lazy(() => import('./Settings/icon-charts.jsx')),\n            IconLanguage: React.lazy(() => import('./Settings/icon-language.jsx')),\n            IconPurchase: React.lazy(() => import('./Settings/icon-purchase.jsx')),\n            IconTheme   : React.lazy(() => import('./Settings/icon-theme.jsx')),\n\n            // Statement\n            IconBuy   : React.lazy(() => import('./Statement/icon-buy.jsx')),\n            IconPayout: React.lazy(() => import('./Statement/icon-payout.jsx')),\n            IconSell  : React.lazy(() => import('./Statement/icon-sell.jsx')),\n            IconWallet: React.lazy(() => import('./Statement/icon-wallet.jsx')),\n\n            // Trading\n            IconBarrierDown   : React.lazy(() => import('./Trading/Barriers/icon-barrier-down.jsx')),\n            IconBarrierUp     : React.lazy(() => import('./Trading/Barriers/icon-barrier-up.jsx')),\n            IconTradeCategory : React.lazy(() => import('./Trading/Categories/icon-trade-categories.jsx')),\n            TradeCategoriesGIF: React.lazy(() => import('./Trading/Categories/trade-categories-gif.jsx')),\n            TradeCategories   : React.lazy(() => import('./Trading/Categories/trade-categories.jsx')),\n            IconTradeType     : React.lazy(() => import('./Trading/Types/icon-trade-types.jsx')),\n            IconLock          : React.lazy(() => import('./Trading/icon-lock.jsx')),\n            IconPriceMove     : React.lazy(() => import('./Trading/icon-price-move.jsx')),\n        };\n    }\n\n    render() {\n        const options = {\n            category     : this.props.category,\n            className    : this.props.className,\n            classNamePath: this.props.classNamePath,\n            classNameRect: this.props.classNameRect,\n            is_dark_theme: this.props.is_dark_theme,\n            is_disabled  : this.props.is_disabled,\n            onClick      : this.props.onClick,\n            onMouseEnter : this.props.onMouseEnter,\n            onMouseLeave : this.props.onMouseLeave,\n            type         : this.props.type,\n        };\n\n        const IconLazy = this.icons[this.props.icon];\n        if (!IconLazy) return <div />;\n\n        return (\n            <React.Suspense fallback={<div />}>\n                <IconLazy {...options} />\n            </React.Suspense>\n        );\n    }\n}\n\nIcon.propTypes = {\n    category     : PropTypes.string,\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    classNameRect: PropTypes.string,\n    icon         : PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_disabled  : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick      : PropTypes.func,\n    type         : PropTypes.string,\n};\n\nexport default Icon;\n","import { localize } from 'App/i18n';\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD : localize('AUD/CAD'),\n    FRXAUDCHF : localize('AUD/CHF'),\n    FRXAUDJPY : localize('AUD/JPY'),\n    FRXAUDNZD : localize('AUD/NZD'),\n    FRXAUDPLN : localize('AUD/PLN'),\n    FRXAUDUSD : localize('AUD/USD'),\n    FRXBROUSD : localize('Oil/USD'),\n    FRXEURAUD : localize('EUR/AUD'),\n    FRXEURCAD : localize('EUR/CAD'),\n    FRXEURCHF : localize('EUR/CHF'),\n    FRXEURGBP : localize('EUR/GBP'),\n    FRXEURJPY : localize('EUR/JPY'),\n    FRXEURNZD : localize('EUR/NZD'),\n    FRXEURUSD : localize('EUR/USD'),\n    FRXGBPAUD : localize('GBP/AUD'),\n    FRXGBPCAD : localize('GBP/CAD'),\n    FRXGBPCHF : localize('GBP/CHF'),\n    FRXGBPJPY : localize('GBP/JPY'),\n    FRXGBPNOK : localize('GBP/NOK'),\n    FRXGBPUSD : localize('GBP/USD'),\n    FRXNZDJPY : localize('NZD/JPY'),\n    FRXNZDUSD : localize('NZD/USD'),\n    FRXUSDCAD : localize('USD/CAD'),\n    FRXUSDCHF : localize('USD/CHF'),\n    FRXUSDJPY : localize('USD/JPY'),\n    FRXUSDNOK : localize('USD/NOK'),\n    FRXUSDPLN : localize('USD/PLN'),\n    FRXUSDSEK : localize('USD/SEK'),\n    FRXXAGUSD : localize('Silver/USD'),\n    FRXXAUUSD : localize('Gold/USD'),\n    FRXXPDUSD : localize('Palladium/USD'),\n    FRXXPTUSD : localize('Platinum/USD'),\n    OTC_AEX   : localize('Dutch Index'),\n    OTC_AS51  : localize('Australian Index'),\n    OTC_DJI   : localize('Wall Street Index'),\n    OTC_FCHI  : localize('French Index'),\n    OTC_FTSE  : localize('UK Index'),\n    OTC_GDAXI : localize('German Index'),\n    OTC_HSI   : localize('Hong Kong Index'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225  : localize('Japanese Index'),\n    OTC_NDX   : localize('US Tech Index'),\n    OTC_SPC   : localize('US Index'),\n    OTC_SSMI  : localize('Swiss Index'),\n    OTC_SX5E  : localize('Euro 50 Index'),\n    R_10      : localize('Volatility 10 Index'),\n    R_25      : localize('Volatility 25 Index'),\n    R_50      : localize('Volatility 50 Index'),\n    R_75      : localize('Volatility 75 Index'),\n    R_100     : localize('Volatility 100 Index'),\n    RDBEAR    : localize('Bear Market Index'),\n    RDBULL    : localize('Bull Market Index'),\n    WLDAUD    : localize('AUD Index'),\n    WLDEUR    : localize('EUR Index'),\n    WLDGBP    : localize('GBP Index'),\n    WLDUSD    : localize('USD Index'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name    : localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name    : localize('Ends Between'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name    : localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name    : localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name    : localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name    : localize('Reset Put'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name    : localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name    : localize('Low Tick'),\n        position: 'bottom',\n    },\n    ASIANU: {\n        name    : localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name    : localize('Asian Down'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name    : localize('Close-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name    : localize('High-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name    : localize('High-Low'),\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name    : localize('Call Spread'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name    : localize('Put Spread'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name    : localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name    : localize('Only Downs'),\n        position: 'bottom',\n    },\n});\n\nexport const getSupportedContracts = is_high_low => ({\n    CALL: {\n        name    : is_high_low ?  localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name    : is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name    : localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name    : localize('Fall'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name    : localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name    : localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name    : localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name    : localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name    : localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name    : localize('Under'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name    : localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name    : localize('No Touch'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay  = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].name : ''\n);\n\nexport const getContractTypePosition = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top'\n);\n","import { localize } from 'App/i18n';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","const extend = require('extend');\nrequire('./lib/polyfills/element.matches');\n\nconst template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[(+index) - 1]);\n};\n\nconst isEmptyObject = (obj) => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nconst cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\nconst isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    }\n    // else\n    return a === b;\n};\n\nconst isEqualArray = (arr1, arr2) => (\n    arr1 === arr2 ||\n    (\n        arr1.length === arr2.length &&\n        arr1.every((value, idx) => isDeepEqual(value, arr2[idx]))\n    )\n);\n\nconst isEqualObject = (obj1, obj2) => (\n    obj1 === obj2 ||\n    (\n        Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]))\n    )\n);\n\n// Filters out duplicates in an array of objects by key\nconst unique = (array, key) => array.filter((e, idx) =>\n    array.findIndex((a, i) => a[key] ? a[key] === e[key] : i === idx) === idx);\n\nconst getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach((attr) => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject  = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    isEmptyObject,\n    cloneObject,\n    isDeepEqual,\n    unique,\n    getPropertyValue,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n"],"sourceRoot":""}