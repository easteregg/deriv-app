{"version":3,"sources":["webpack:///./Modules/Reports/Helpers/shortcode.js","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./App/Containers/remaining-time.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./App/Components/Elements/underlying-icon.jsx","webpack:///./Modules/Reports/Components/empty-trade-history-message.jsx","webpack:///./Modules/Reports/Components/reports-meta.jsx","webpack:///./Modules/Reports/Components/placeholder-component.jsx","webpack:///./App/Containers/ProgressSliderStream/progress-slider-stream.jsx","webpack:///./Modules/Reports/Helpers/profit-loss.js","webpack:///./Modules/Reports/Components/indicative-cell.jsx","webpack:///./Modules/Reports/Components/market-symbol-icon-row.jsx","webpack:///./Modules/Reports/Components/profit_loss_cell.jsx","webpack:///./Modules/Reports/Constants/data-table-constants.js","webpack:///./App/Components/Elements/DataTable/table-cell.jsx","webpack:///./App/Components/Elements/DataTable/table-row-info.jsx","webpack:///./App/Components/Elements/DataTable/table-row.jsx","webpack:///./App/Components/Elements/DataTable/data-table.jsx"],"names":["extractInfoFromShortcode","Shortcode","shortcode","info_from_shortcode","category","underlying","barrier_1","extracted","RegExp","exec","toLowerCase","test","split","slice","isHighLow","_ref","_ref$shortcode","_ref$shortcode_info","shortcode_info","module","exports","ProgressTicks","current_tick","ticks_count","arr_ticks","_toConsumableArray","Array","keys","react_default","a","createElement","className","localize","i18n_default_text","values","toString","map","idx","key","classNames","progress-slider__ticks-step--marked","parseInt","propTypes","PropTypes","number","RemainingTime","_ref$end_time","end_time","start_time","unix","remaining_time","formatDuration","getDiffDuration","oneOfType","string","object","connect","_ref2","common","server_time","ProgressSlider","is_loading","expiry_time","percentage","getTimePercentage","positions_progress_ticks","Fragment","Containers_remaining_time","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","style","width","concat","bool","addCommaToNumber","num","decimal_places","isNaN","n","String","toFixed","p","indexOf","replace","m","i","duration_from_purchase","moment","duration","diff","asMilliseconds","Math","round","getBarrierLabel","contract_info","isDigitType","contract_type","getBarrierValue","digitTypeMap","barrier","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","__webpack_require__","d","__webpack_exports__","positions_helper_getTimePercentage","positions_helper_getBarrierLabel","UnderlyingIcon","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","market","toUpperCase","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","EmptyTradeHistoryMessage","has_selected_date","component_icon","localized_message","localized_period_message","icon","ReportsMeta","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","i18n_heading","i18n_message","filter_component","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","PlaceholderComponent","props","EmptyMessageComponent","empty_message_component","is_empty","func","ProgressSliderStream","id","position","getPositionById","positions_progress_slider","date_expiry","has_result","date_start","tick_count","modules","portfolio","getProfitOrLoss","value","IndicativeCell","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","movement","amount","React","PureComponent","_this2","setState","_this$props","currency","status","money","abs","type","MarketSymbolIconRow","payload","show_description","should_show_category_icon","Popover","classNameTarget","classNameBubble","alignment","message","getMarketName","disable_target_icon","underlying_icon","display_name","getTradeTypeName","includes","action_type","height","action","ProfitLossCell","children","data_table_constants_getStatementTableColumnsTemplate","data_table_constants_getProfitTableColumnsTemplate","data_table_constants_getOpenPositionsColumnsTemplate","getStatementTableColumnsTemplate","title","col_index","renderCellContent","cell_value","row_obj","market_symbol_icon_row","transaction_id","label","mode","deposit","withdrawal","sell","buy","default","Object","find","x","_ref3","has_sign","_ref4","getProfitTableColumnsTemplate","items_count","_ref5","is_footer","item_count","_ref6","_ref7","_ref8","profit_loss_cell","getOpenPositionsColumnsTemplate","_ref9","_ref10","_ref11","_ref12","profit","open-positions__profit-loss--negative","open-positions__profit-loss--positive","_ref13","indicative_cell","is_valid_to_sell","_ref14","progress_slider_stream","TableCell","node","TableRowInfo","toggleDetails","showDetails","Component","onClick","undefined","statement__row--detail","component","cells","arrayOf","TableRow","columns","is_header","_ref$row_obj","to","cell_content","table_cell","row_class_name","table__row-link","react_router_dom","pathname","from_table_row","table_row_info_TableRowInfo","array","DataTable","data_table_classCallCheck","data_table_possibleConstructorReturn","data_table_getPrototypeOf","resizeDimensions","debounce","window","innerWidth","window_width","el_table_body","clientHeight","clientWidth","onresize","alignHeader","data_source","length","first_body_row","firstChild","scrollbar_offset","el_table_head","offsetWidth","paddingRight","index","getRowAction","item","content","table_row","data_table_typeof","_classNames","_this$props2","footer","onScroll","TableData","index_esm","itemCount","itemSize","rowRenderer","bind","data_table_defineProperty","ref","el","lib","autoHeight","autoHeightMax","autoHide","MobxPropTypes","arrayOrObservableArray"],"mappings":"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","file":"js/open_positions~profit_table~statement.f9c1faecd472f34d6ccd.js","sourcesContent":["const Shortcode = (() => {\n    const extractInfoFromShortcode = (shortcode) => {\n        const info_from_shortcode = {\n            category  : '',\n            underlying: '',\n            barrier_1 : '',\n        };\n\n        const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'); // Used to get market name from shortcode\n        const extracted = pattern.exec(shortcode);\n        if (extracted !== null) {\n            info_from_shortcode.category   = extracted[1].toLowerCase();\n            info_from_shortcode.underlying = extracted[2];\n\n            if (/^(CALL|PUT)$/i.test(info_from_shortcode.category)) {\n                info_from_shortcode.barrier_1 = shortcode.split('_').slice(-2)[0];\n            }\n        }\n\n        return info_from_shortcode;\n    };\n\n    const isHighLow = ({ shortcode = '', shortcode_info = '' }) => {\n        const info_from_shortcode = shortcode ? extractInfoFromShortcode(shortcode) : shortcode_info;\n        return (info_from_shortcode && info_from_shortcode.barrier_1) ? !/^S0P$/.test(info_from_shortcode.barrier_1) : false;\n    };\n\n    return {\n        extractInfoFromShortcode,\n        isHighLow,\n    };\n})();\n\nmodule.exports = Shortcode;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: current_tick.toString() }} />\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { connect }           from 'Stores/connect';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport { getTimePercentage } from '../helpers';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    is_loading,\n    start_time,\n    expiry_time,\n    server_time,\n    ticks_count,\n}) => {\n    const percentage = getTimePercentage(server_time, start_time, expiry_time);\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={expiry_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className   : PropTypes.string,\n    current_tick: PropTypes.number,\n    expiry_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_loading : PropTypes.bool,\n    server_time: PropTypes.object,\n    start_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ProgressSlider);\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (server_time, start_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(start_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(server_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n","export * from './positions-helper';\n","import classNames from 'classnames';\nimport React      from 'react';\n\nconst UnderlyingIcon = ({ market }) => (\n    <div\n        className={classNames(\n            'icons-underlying',\n            `icons-underlying__ic-${market ? market.toUpperCase() : 'unknown'}`\n        )}\n    />\n);\n\nexport { UnderlyingIcon };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\n\nconst EmptyTradeHistoryMessage = ({\n    has_selected_date,\n    component_icon,\n    localized_message,\n    localized_period_message,\n}) => (\n    <React.Fragment>\n        <div className='empty-trade-history'>\n            <Icon icon={component_icon} className='empty-trade-history__icon' />\n            <span className='empty-trade-history__text'>\n                {\n                    !has_selected_date ?\n                        localized_message\n                        :\n                        localized_period_message\n                }\n            </span>\n        </div>\n    </React.Fragment>\n);\n\nEmptyTradeHistoryMessage.propTypes = {\n    component_icon          : PropTypes.string,\n    has_selected_date       : PropTypes.bool,\n    localized_message       : PropTypes.string,\n    localized_period_message: PropTypes.string,\n};\n\nexport default EmptyTradeHistoryMessage;\n","import React from 'react';\n\nconst ReportsMeta = ({ i18n_heading, i18n_message, filter_component }) => (\n    <div className='reports__meta'>\n        <div className='reports__meta-description'>\n            <h1 className='reports__meta-description--heading'>\n                { i18n_heading }\n            </h1>\n            <p className='reports__meta-description--paragraph'>\n                { i18n_message }\n            </p>\n        </div>\n        {filter_component &&\n        <div className='reports__meta-filter'>\n            { filter_component }\n        </div>\n        }\n    </div>\n);\n\nexport { ReportsMeta };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst PlaceholderComponent = (props) => {\n    const EmptyMessageComponent = props.empty_message_component;\n    return (\n        <React.Fragment>\n            { props.is_empty &&\n            <EmptyMessageComponent\n                component_icon={props.component_icon}\n                has_selected_date={props.has_selected_date}\n                localized_message={props.localized_message}\n            />\n            }\n            {props.is_loading && <Loading />}\n        </React.Fragment>\n    );\n};\n\nPlaceholderComponent.propTypes = {\n    component_icon         : PropTypes.string,\n    empty_message_component: PropTypes.func,\n    has_selected_date      : PropTypes.bool,\n    localized_message      : PropTypes.string,\n};\n\nexport default PlaceholderComponent;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressSlider        from 'App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx';\nimport { connect }           from 'Stores/connect';\n\nconst ProgressSliderStream = ({\n    id,\n    is_loading,\n    getPositionById,\n}) => {\n    const position = getPositionById(id);\n    if (!position) {\n        return <div />;\n    }\n\n    const { contract_info } = position;\n\n    return <ProgressSlider\n        is_loading={is_loading}\n        expiry_time={contract_info.date_expiry}\n        has_result={false}\n        current_tick={position.current_tick}\n        start_time={contract_info.date_start}\n        ticks_count={contract_info.tick_count}\n    />;\n};\n\nProgressSliderStream.propTypes = {\n    getPositionById: PropTypes.func,\n    id             : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    is_loading     : PropTypes.bool,\n    server_time    : PropTypes.object,\n};\n\nexport default connect(({ modules }) => ({\n    is_loading     : modules.portfolio.is_loading,\n    getPositionById: modules.portfolio.getPositionById,\n}))(ProgressSliderStream);\n","export const getProfitOrLoss = value => +value.replace(/,/g, '') >= 0 ? 'profit' : 'loss';\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport Icon         from 'Assets/icon.jsx';\n\nclass IndicativeCell extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movement: null,\n            amount  : 0,\n        };\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState(() => ({\n            movement: props.amount >= this.state.amount ? 'profit' : 'loss',\n            amount  : props.amount,\n        }));\n    }\n\n    render() {\n        const { amount, currency, status } = this.props;\n        const { movement } = this.state;\n        return (\n            <div className='open-positions__indicative' >\n                <div className='open-positions__indicative--amount'>\n                    <Money amount={Math.abs(amount)} currency={currency} />\n                    {status !== 'no-resale' && amount !== 0 && <Icon icon='IconPriceMove' type={movement} />}\n                </div>\n\n                {status === 'no-resale' &&\n                <div className='open-positions__indicative-no-resale-msg indicative__no-resale-msg'>\n                    {localize('Resale not offered')}\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nIndicativeCell.propTypes = {\n    amount  : PropTypes.number,\n    currency: PropTypes.string,\n    status  : PropTypes.string,\n};\n\nexport default IndicativeCell;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Popover }        from 'App/Components/Elements/Popover';\nimport { UnderlyingIcon } from 'App/Components/Elements/underlying-icon.jsx';\nimport Icon               from 'Assets/icon.jsx';\nimport {\n    getMarketName,\n    getTradeTypeName }    from '../Helpers/market-underlying';\nimport Shortcode          from '../Helpers/shortcode';\n\nconst MarketSymbolIconRow = ({ payload, show_description }) => {\n    const should_show_category_icon = typeof payload.shortcode === 'string';\n    const info_from_shortcode = Shortcode.extractInfoFromShortcode(payload.shortcode);\n\n    if (should_show_category_icon && info_from_shortcode) {\n        return (\n            <div className='market-symbol-icon'>\n                <div className='market-symbol-icon-name'>\n                    <Popover\n                        classNameTarget='market-symbol-icon__popover'\n                        classNameBubble='market-symbol-icon__popover-bubble'\n                        alignment='top'\n                        message={getMarketName(info_from_shortcode.underlying)}\n                        disable_target_icon\n                    >\n                        <UnderlyingIcon market={info_from_shortcode.underlying} />\n                    </Popover>\n                    {show_description && payload.display_name}\n                </div>\n\n                <div className='market-symbol-icon-category'>\n                    <Popover\n                        classNameTarget='category-type-icon__popover'\n                        classNameBubble='category-type-icon__popover-bubble'\n                        alignment='top'\n                        message={getTradeTypeName(info_from_shortcode.category)}\n                        disable_target_icon\n                    >\n                        <Icon\n                            icon='IconTradeType'\n                            type={(Shortcode.isHighLow({ shortcode_info: info_from_shortcode }))\n                                ? `${info_from_shortcode.category.toLowerCase()}_barrier`\n                                : info_from_shortcode.category.toLowerCase()}\n                        />\n                    </Popover>\n                    {show_description && info_from_shortcode.category}\n                </div>\n            </div>\n        );\n    } else if (['deposit', 'withdrawal'].includes(payload.action_type)) {\n        return (\n            <div className='market-symbol-icon'>\n                {\n                    payload.action_type === 'deposit' ? (\n                        <Icon icon='IconDeposit' />\n                    ) : (\n                        <Icon icon='IconWithdrawal' />\n                    )\n                }\n            </div>\n        );\n    }\n\n    return (\n        <svg width='32' height='32' className='unknown-icon'>\n            <rect width='32' height='32' />\n        </svg>\n    );\n};\n\nMarketSymbolIconRow.propTypes = {\n    action          : PropTypes.string,\n    payload         : PropTypes.object,\n    show_description: PropTypes.bool,\n};\n\nexport default MarketSymbolIconRow;\n","import React               from 'react';\nimport PropTypes           from 'prop-types';\nimport { getProfitOrLoss } from 'Modules/Reports/Helpers/profit-loss';\n\nconst ProfitLossCell = ({ value, children }) => {\n    const status = getProfitOrLoss(value);\n\n    return (\n        <span className={`amount--${status}`}>\n            {children}\n        </span>\n    );\n};\n\nProfitLossCell.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ProfitLossCell;\n","import classNames           from 'classnames';\nimport React                from 'react';\nimport Icon                 from 'Assets/icon.jsx';\nimport { localize }         from 'App/i18n';\nimport Label                from 'App/Components/Elements/Label/label.jsx';\nimport Money                from 'App/Components/Elements/money.jsx';\nimport ProgressSliderStream from 'App/Containers/ProgressSliderStream';\nimport { getProfitOrLoss }  from 'Modules/Reports/Helpers/profit-loss';\nimport IndicativeCell       from '../Components/indicative-cell.jsx';\nimport MarketSymbolIconRow  from '../Components/market-symbol-icon-row.jsx';\nimport ProfitLossCell       from '../Components/profit_loss_cell.jsx';\n\nconst getModeFromValue = (key) => {\n    const map = {\n        deposit   : 'warn',\n        withdrawal: 'info',\n        sell      : 'danger',\n        buy       : 'success',\n        default   : 'default',\n    };\n\n    if (Object.keys(map).find(x => x === key)) {\n        return map[key];\n    }\n\n    return map.default;\n};\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getStatementTableColumnsTemplate = (currency) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <MarketSymbolIconRow\n                action={cell_value}\n                key={row_obj.transaction_id}\n                payload={row_obj}\n            />\n        ),\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'refid',\n    }, {\n        title    : localize('Transaction time'),\n        col_index: 'date',\n    }, {\n        key              : 'mode',\n        title            : localize('Transaction'),\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <Label mode={getModeFromValue(cell_value)}>{row_obj.action}</Label>\n        ),\n    }, {\n        title            : localize('Credit/Debit'),\n        col_index        : 'amount',\n        renderCellContent: ({ cell_value }) => <div className={`amount--${getProfitOrLoss(cell_value)}`} ><Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} /></div>,\n    }, {\n        title            : localize('Balance'),\n        col_index        : 'balance',\n        renderCellContent: ({ cell_value }) => <Money amount={cell_value.replace(/[,]+/g, '')} currency={currency} />,\n    },\n];\nexport const getProfitTableColumnsTemplate = (currency, items_count) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) {\n                return localize('Profit/loss on the last {{item_count}} contracts', { item_count: items_count });\n            }\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.transaction_id}\n                    payload={row_obj}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'transaction_id',\n    }, {\n        title    : localize('Buy time'),\n        col_index: 'purchase_time',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'buy_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title    : localize('Sell time'),\n        col_index: 'sell_time',\n    }, {\n        title            : localize('Sell price'),\n        col_index        : 'sell_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title            : localize('Profit/Loss'),\n        col_index        : 'profit_loss',\n        renderCellContent: ({ cell_value }) => (\n            <ProfitLossCell value={cell_value}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </ProfitLossCell>\n        ),\n    },\n];\nexport const getOpenPositionsColumnsTemplate = (currency) => [\n    {\n        title            : '',\n        col_index        : 'type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'reference',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'purchase',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    }, {\n        title            : localize('Potential payout'),\n        col_index        : 'payout',\n        renderCellContent: ({ cell_value }) => (\n            cell_value ? <Money amount={cell_value} currency={currency} />\n                : <span>-</span>\n        ),\n    }, {\n        title            : localize('Potential profit/loss'),\n        col_index        : 'profit',\n        renderCellContent: ({ row_obj }) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.profit) return;\n            const profit = row_obj.contract_info.profit;\n            // eslint-disable-next-line consistent-return\n            return (\n                <div className={classNames('open-positions__profit-loss', {\n                    'open-positions__profit-loss--negative': (\n                        profit < 0\n                    ),\n                    'open-positions__profit-loss--positive': (\n                        profit > 0\n                    ),\n                })}\n                >\n                    <Money amount={Math.abs(profit)} currency={currency} />\n                    <div className='open-positions__profit-loss--movement'>\n                        <Icon icon='IconPriceMove' type={profit > 0 ? 'profit' : 'loss'} />\n                    </div>\n                </div>\n            );\n        },\n    }, {\n        title            : localize('Indicative price'),\n        col_index        : 'indicative',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <IndicativeCell amount={+cell_value} currency={currency} status={row_obj.contract_info && !row_obj.is_valid_to_sell ? 'no-resale' : ''} />\n        ),\n    }, {\n        title            : localize('Remaining time'),\n        col_index        : 'id',\n        renderCellContent: ({ cell_value }) => (\n            <ProgressSliderStream id={cell_value} />\n        ),\n    },\n];\n/* eslint-enable react/display-name, react/prop-types */\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TableCell = ({ col_index, children }) => (\n    <div className={classNames('table__cell', col_index)}>\n        {children}\n    </div>\n);\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n    ]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nexport default class TableRowInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetails: false,\n        };\n    }\n\n    toggleDetails = () => {\n        if (this.props.replace) {\n            this.setState(state => ({ showDetails: !state.showDetails }));\n        }\n    };\n\n    render() {\n        return (\n            <div\n                onClick={this.props.is_footer || !this.props.replace ? undefined : this.toggleDetails}\n                className={classNames(this.props.className, { 'statement__row--detail': this.state.showDetails })}\n            >\n                {\n                    this.state.showDetails ?\n                        <div>\n                            {this.props.replace.component ?\n                                this.props.replace.component\n                                :\n                                <p>{this.props.replace.message}</p>\n                            }\n                        </div>\n                        : this.props.cells\n                }\n            </div>\n        );\n    }\n}\n\nTableRowInfo.propTypes = {\n    cells    : PropTypes.arrayOf(PropTypes.node),\n    className: PropTypes.string,\n    replace  : PropTypes.object,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { NavLink }  from 'react-router-dom';\nimport TableCell    from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\n\nconst TableRow = ({\n    className,\n    columns,\n    is_footer,\n    is_header,\n    replace,\n    row_obj = {},\n    to,\n}) => {\n    const cells = columns.map(({ col_index, renderCellContent, title, key }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n\n        return (\n            <TableCell col_index={col_index} key={key || col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    const row_class_name = classNames('table__row', { 'table__row-link': to || replace }, { [`${className}__row`]: className });\n\n    return (\n        to ?\n            <NavLink\n                className={row_class_name}\n                to={{\n                    pathname: to,\n                    state   : {\n                        from_table_row: true,\n                    },\n                }}\n            >\n                {cells}\n            </NavLink>\n            :\n            <TableRowInfo\n                className={row_class_name}\n                cells={cells}\n                replace={replace}\n                is_footer={is_footer}\n            />\n    );\n};\n\nTableRow.propTypes = {\n    className: PropTypes.string,\n    columns  : PropTypes.array,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    replace  : PropTypes.object,\n    row_obj  : PropTypes.object,\n    to       : PropTypes.string,\n};\n\nexport default TableRow;\n","import classNames                     from 'classnames';\nimport debounce                       from 'lodash.debounce';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { FixedSizeList as List }      from 'react-window';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport TableRow                       from './table-row.jsx';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nclass DataTable extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height      : 200,\n            width       : 200,\n            window_width: 1024,\n        };\n    }\n\n    resizeDimensions = debounce(() => {\n        this.setState({\n            width       : (window.innerWidth - this.state.window_width) + this.state.width,\n            window_width: window.innerWidth,\n        });\n    }, 250);\n\n    componentDidMount() {\n        this.setState({\n            height      : this.el_table_body.clientHeight,\n            width       : this.el_table_body.clientWidth,\n            window_width: window.innerWidth,\n        });\n        window.onresize = this.resizeDimensions;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    componentWillUnmount() {\n        window.onresize = null;\n    }\n\n    componentDidUpdate() {\n        this.alignHeader();\n    }\n\n    alignHeader() {\n        // scrollbar inside table-body can push content (depending on the browser and if mouse is plugged in)\n        if (!this.props.data_source.length) return;\n        const first_body_row   = this.el_table_body.firstChild;\n        const scrollbar_offset = this.el_table_head.offsetWidth - first_body_row.offsetWidth;\n        this.el_table_head.style.paddingRight = `${scrollbar_offset}px`;\n    }\n\n    rowRenderer ({\n        index,       // Index of row\n        style,        // Style object to be applied to row (to position it);\n    }) {\n        const {\n            data_source,\n            className,\n            getRowAction,\n            columns,\n            id } = this.props;\n        const item = data_source[index];\n        const action = getRowAction && getRowAction(item);\n\n        // If row content is complex, consider rendering a light-weight placeholder while scrolling.\n        const content = (\n            <TableRow\n                className={className}\n                row_obj={item}\n                columns={columns}\n                key={id}\n                to={typeof action === 'string' ? action : undefined}\n                replace={typeof action === 'object' ? action : undefined}\n            />\n        );\n\n        return (\n            <div style={style}>\n                {content}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            children,\n            className,\n            columns,\n            data_source,\n            footer,\n            is_empty,\n            onScroll,\n        } = this.props;\n\n        const TableData =\n\n            <React.Fragment>\n                <List\n                    className={className}\n                    height={this.state.height}\n                    itemCount={data_source.length}\n                    itemSize={63}\n                    width={this.state.width}\n                >\n                    {this.rowRenderer.bind(this)}\n                </List>\n                {children}\n            </React.Fragment>;\n\n        return (\n            <div className={classNames('table', {\n                [`${className}`]         : className,\n                [`${className}__table`]  : className,\n                [`${className}__content`]: className,\n            })}\n            >\n                <div className='table__head' ref={el => { this.el_table_head = el; }}>\n                    <TableRow className={className} columns={columns} is_header />\n                </div>\n                <div\n                    className='table__body'\n                    onScroll={onScroll}\n                    ref={el => { this.el_table_body = el; }}\n                >\n                    {is_empty ?\n                        TableData\n                        :\n                        <Scrollbars\n                            autoHeight\n                            autoHeightMax={this.state.height}\n                            autoHide\n                        >\n                            {TableData}\n                        </Scrollbars>\n                    }\n                </div>\n\n                {footer &&\n                    <div className='table__foot'>\n                        <TableRow\n                            className={className}\n                            row_obj={footer}\n                            columns={columns}\n                            is_footer\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    className   : PropTypes.string,\n    columns     : PropTypes.array,\n    data_source : MobxPropTypes.arrayOrObservableArray,\n    footer      : PropTypes.object,\n    getRowAction: PropTypes.func,\n    onScroll    : PropTypes.func,\n};\n\nexport default DataTable;\n"],"sourceRoot":""}